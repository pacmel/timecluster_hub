Warning in readLines(file, warn = FALSE) :
  invalid input found on input connection '/home/macu/app/server.R'

 10:48:56.049 [1] 10:48:56.049 [1] Execution id: 448, Start Timestamp: 20/12/24 10:
 10:48:56.049 [1] 48:56
 
 10:48:56.168 [2] 10:48:56.168 [2] observeEvent encoders list enc_l | update datase
 10:48:56.168 [2] t list | after freeze
 
 10:48:56.208 [3] 10:48:56.208 [3] observeEvent encoders list encs_l | update datas
 10:48:56.208 [3] et list -->
 
 10:48:56.213 [4] 10:48:56.213 [4] --> observeEvent input_encoder
 
 10:48:56.214 [5] 10:48:56.214 [5] observeEvent input_encoder | update wlen | Befor
 10:48:56.214 [5] e enc_ar
 
 10:48:56.216 [6] 10:48:56.216 [6] eventReactive enc_ar | Enc. Artifact: 
 
 10:48:56.342 [7] 10:48:56.342 [7] eventReactive enc_ar | Error: wandb.errors.CommE
 10:48:56.342 [7] rror: Attempted to fetch artifact without alias (e.g. "<artifact_
 10:48:56.342 [7] name>:v3" or "<artifact_name>:latest")

 
 10:48:56.343 [8] 10:48:56.343 [8] envent reactive enc_ar -->
 
 10:48:56.343 [9] 10:48:56.343 [9] observeEvent input_encoder | update wlen | enc_a
 10:48:56.343 [9] r: | Set wlen slider values
 
 10:48:56.344 [10] 10:48:56.344 [10] observeEvent input_encoder | update wlen | Set 
 10:48:56.344 [10] wlen slider values from w | 
 
 10:48:56.344 [11] 10:48:56.344 [11] observeEvent input_encoder | update wlen | enc_
 10:48:56.344 [11] ar$metadata$mvp_ws 
 
 10:48:56.344 [12] 10:48:56.344 [12] observeEvent input_encoder | update wlen | Upda
 10:48:56.344 [12] te slider input ws: (,  ) |  wlen: 
 
 10:48:56.392 [13] 10:48:56.392 [13] --> Observe clustering options
 
 10:48:56.394 [14] 10:48:56.394 [14] Observe clustering options -->
 
 10:48:56.410 [16] 10:48:56.410 [16] >>>> Toguether Log path: r_shiny_app_logs-448
 
 10:48:56.442 [17] 10:48:56.442 [17] --> prj_object
 
 10:48:56.443 [18] 10:48:56.443 [18] prj_object || Before prjs_comp
 
 10:48:56.444 [19] 10:48:56.444 [19] prjs_comp | Before req || DR: PCA_UMAP || embs?
 10:48:56.444 [19]  FALSE
 
 10:48:56.501 [21] 10:48:56.501 [21] mplot_start_computation |FALSE | Projections
 
 10:48:56.567 [22] 10:48:56.567 [22] --> observeEvent input_dataset | update encoder
 10:48:56.567 [22]  list
 
 10:48:56.571 [23] 10:48:56.571 [23] observeEvent input_dataset | update encoders fo
 10:48:56.571 [23] r dataset gtrends_kohls-denoised:v1
 
 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | zeroshot-moment-small-embedding:v0
 10:48:56.723 [24] 

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | zeroshot-moirai-small:v0

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | moment-small-reconstruction:v1

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | moment-small-reconstruction:v0

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | moment-small-embedding:v4

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | moment-small-embedding:v3

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | moment-small-embedding:v1

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | moment-small-embedding:v0

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | moment-large-embedding:v2

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | moirai-small:v2

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | moirai-small:v1

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | moirai-small:v0

 10:48:56.723 [24] 10:48:56.723 [24] observeEvent input_dataset | Encoders for datas
 10:48:56.723 [24] et gtrends_kohls-denoised:v1 | moirai:v0
 
 10:48:56.726 [25] 10:48:56.726 [25] observeEvent input_dataset | update encoder lis
 10:48:56.726 [25] t -->
 
 10:48:56.729 [26] 10:48:56.729 [26] --> eventReactive ts_ar | Update dataset artifa
 10:48:56.729 [26] ct | hash gtrends_kohls-denoised:v1
 [1] "TSDF READY A TRUE TRUE"

 10:48:56.857 [27] 10:48:56.857 [27] --> Update play_pause_button
 
 10:48:56.859 [28] 10:48:56.859 [28] Update play_pause_button || FALSE -->
 
 10:48:56.865 [29] 10:48:56.865 [29] --> Enable/disable embs
 
 10:48:56.865 [30] 10:48:56.865 [30] Enable/disable embs || disable embs
 
 10:48:56.869 [31] 10:48:56.869 [31] Enable/disable embs --> || Changes to FALSE
 
 10:48:56.869 [32] 10:48:56.869 [32] eventReactive ts_ar || tsdf_ready FALSE
 
 10:48:56.872 [33] 10:48:56.872 [33] eventReactive ts_ar tsdf_ready? FALSE -->
 
 10:48:56.875 [34] 10:48:56.875 [34] --> observeEvent input_wlen | update slide stri
 10:48:56.875 [34] de value | wlen 0
 
 10:48:56.878 [35] 10:48:56.878 [35] observeEvent input_wlen | update slide stride v
 10:48:56.878 [35] alue | Error | 
 
 10:48:56.878 [36] 10:48:56.878 [36] observeEvent input_wlen | update slide stride v
 10:48:56.878 [36] alue | Finally |  wlen min 1 max 0 current value 0 -->
 
 10:48:56.881 [37] 10:48:56.881 [37] --> observe X | Before req | tsdf_ready FALSE |
 10:48:56.881 [37]  wlen 0 | stride 0 | allow update embs FALSE | play_prjs FALSE | 
 10:48:56.881 [37] tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:48:56.997 [38] 10:48:56.997 [38] eventReactive enc_ar | Enc. Artifact: zeroshot-
 10:48:56.997 [38] moment-small-embedding:v0
 
 10:48:57.153 [39] 10:48:57.153 [39] envent reactive enc_ar -->
 
 10:48:57.157 [40] 10:48:57.157 [40] --> observeEvent input_encoder
 
 10:48:57.160 [41] 10:48:57.160 [41] observeEvent input_encoder | update wlen | Befo
 10:48:57.160 [41] re enc_ar
 
 10:48:57.161 [42] 10:48:57.161 [42] observeEvent input_encoder | update wlen | enc_
 10:48:57.161 [42] ar: <Artifact QXJ0aWZhY3Q6MTM1Mzc4Nzc3MQ==>| Set wlen slider valu
 10:48:57.161 [42] es
 
 10:48:57.161 [43] 10:48:57.161 [43] observeEvent input_encoder | update wlen | enc_
 10:48:57.161 [43] ar$metadata$mvp_ws 12

 10:48:57.161 [43] 10:48:57.161 [43] observeEvent input_encoder | update wlen | enc_
 10:48:57.161 [43] ar$metadata$mvp_ws 17
 
 10:48:57.162 [44] 10:48:57.162 [44] observeEvent input_encoder | update wlen | Upda
 10:48:57.162 [44] te slider input ws: (12, 17 ) |  wlen: 17
 
 10:48:57.164 [45] 10:48:57.164 [45] --> reactive enc_ar_stride
 
 10:48:57.165 [46] 10:48:57.165 [46] reactive_enc_ar_stride | --> 1
 
 10:48:57.270 [48] 10:48:57.270 [48] --> observeEvent input_wlen | update slide stri
 10:48:57.270 [48] de value | wlen 17
 
 10:48:57.271 [49] 10:48:57.271 [49] enc_ar_stride: 1
 
 10:48:57.274 [50] 10:48:57.274 [50] oserveEvent input_wlen | update slide stride va
 10:48:57.274 [50] lue | Update stride to 1
 
 10:48:57.304 [53] 10:48:57.304 [53] --> observe X | Before req | tsdf_ready FALSE |
 10:48:57.304 [53]  wlen 17 | stride 1 | allow update embs FALSE | play_prjs FALSE |
 10:48:57.304 [53]  tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:50:21.863 [54] 10:50:21.863 [54] --> observeEvent input_dataset | update encoder
 10:50:21.863 [54]  list
 
 10:50:21.866 [55] 10:50:21.866 [55] observeEvent input_dataset | update encoders fo
 10:50:21.866 [55] r dataset gtrends_kohls:v0
 
 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | zeroshot-moment-small-embedding:v0

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | zeroshot-moirai-small:v0

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | moment-small-reconstruction:v1

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | moment-small-reconstruction:v0

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | moment-small-embedding:v4

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | moment-small-embedding:v3

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | moment-small-embedding:v1

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | moment-small-embedding:v0

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | moment-large-embedding:v2

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | moirai-small:v2

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | moirai-small:v1

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | moirai-small:v0

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | moirai:v0

 10:50:22.018 [56] 10:50:22.018 [56] observeEvent input_dataset | Encoders for datas
 10:50:22.018 [56] et gtrends_kohls:v0 | mvp:v183
 
 10:50:22.021 [57] 10:50:22.021 [57] observeEvent input_dataset | update encoder lis
 10:50:22.021 [57] t -->
 
 10:50:22.024 [58] 10:50:22.024 [58] --> eventReactive ts_ar | Update dataset artifa
 10:50:22.024 [58] ct | hash gtrends_kohls:v0
 [1] "TSDF READY A TRUE TRUE"

 10:50:22.154 [59] 10:50:22.154 [59] eventReactive ts_ar || tsdf_ready FALSE
 
 10:50:22.156 [60] 10:50:22.156 [60] eventReactive ts_ar tsdf_ready? FALSE -->
 
 10:50:22.244 [61] 10:50:22.244 [61] eventReactive enc_ar | Enc. Artifact: zeroshot-
 10:50:22.244 [61] moment-small-embedding:v0
 
 10:50:22.369 [62] 10:50:22.369 [62] envent reactive enc_ar -->
 
 10:50:22.372 [63] 10:50:22.372 [63] --> observeEvent input_encoder
 
 10:50:22.375 [64] 10:50:22.375 [64] observeEvent input_encoder | update wlen | Befo
 10:50:22.375 [64] re enc_ar
 
 10:50:22.376 [65] 10:50:22.376 [65] observeEvent input_encoder | update wlen | enc_
 10:50:22.376 [65] ar: <Artifact QXJ0aWZhY3Q6MTM1Mzc4Nzc3MQ==>| Set wlen slider valu
 10:50:22.376 [65] es
 
 10:50:22.376 [66] 10:50:22.376 [66] observeEvent input_encoder | update wlen | enc_
 10:50:22.376 [66] ar$metadata$mvp_ws 12

 10:50:22.376 [66] 10:50:22.376 [66] observeEvent input_encoder | update wlen | enc_
 10:50:22.376 [66] ar$metadata$mvp_ws 17
 
 10:50:22.378 [67] 10:50:22.378 [67] observeEvent input_encoder | update wlen | Upda
 10:50:22.378 [67] te slider input ws: (12, 17 ) |  wlen: 17
 
 10:50:22.380 [68] 10:50:22.380 [68] --> reactive enc_ar_stride
 
 10:50:22.380 [69] 10:50:22.380 [69] reactive_enc_ar_stride | --> 1
 
 10:50:22.438 [71] 10:50:22.438 [71] --> observeEvent input_wlen | update slide stri
 10:50:22.438 [71] de value | wlen 17
 
 10:50:22.438 [72] 10:50:22.438 [72] enc_ar_stride: 1
 
 10:50:22.441 [73] 10:50:22.441 [73] oserveEvent input_wlen | update slide stride va
 10:50:22.441 [73] lue | Update stride to 1
 
 10:50:22.507 [76] 10:50:22.507 [76] --> observe X | Before req | tsdf_ready FALSE |
 10:50:22.507 [76]  wlen 17 | stride 1 | allow update embs FALSE | play_prjs FALSE |
 10:50:22.507 [76]  tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:50:22.710 [77] 10:50:22.710 [77] --> observeEvent input$play_pause
 
 10:50:22.713 [78] 10:50:22.713 [78] --> Update play_pause_button
 
 10:50:22.717 [79] 10:50:22.717 [79] Update play_pause_button | --> compute tsdf
 
 10:50:22.720 [80] 10:50:22.720 [80] tsdf_comp || before req | Input encoder zerosho
 10:50:22.720 [80] t-moment-small-embedding:v0 | Input dataset gtrends_kohls:v0 | ts
 10:50:22.720 [80] _ar TRUE
 
 10:50:22.721 [81] 10:50:22.721 [81] --> Reactive tsdf | ts artifact <Artifact QXJ0a
 10:50:22.721 [81] WZhY3Q6MTM1MzgwNDc1OQ==>
 
 10:50:22.722 [82] 10:50:22.722 [82] Reactive tsdf | Read feather /home/macu/data/wa
 10:50:22.722 [82] ndb_artifacts/-7635916990915258888
 
 10:50:22.722 [83] 10:50:22.722 [83] Reactive tsdf | Read feather | Before | /home/m
 10:50:22.722 [83] acu/data/wandb_artifacts/-7635916990915258888
 
 10:50:22.731 [84] 10:50:22.731 [84] Reactive tsdf | Read feather | After | /home/ma
 10:50:22.731 [84] cu/data/wandb_artifacts/-7635916990915258888
 
 10:50:22.731 [85] 10:50:22.731 [85] Reactive tsdf | Read feather | Load time: 0.008
 10:50:22.731 [85] 80885124206543 seconds | N elements: 440
 
 10:50:22.734 [86] 10:50:22.734 [86] Log add | TSDF | Load dataset | Read feather
 
 10:50:22.734 [87] 10:50:22.734 [87] Reactive tsdf | Execution time: 0.0088088512420
 10:50:22.734 [87] 6543 seconds | df ~ 440time

 10:50:22.734 [87] 10:50:22.734 [87] Reactive tsdf | Execution time: 0.0088088512420
 10:50:22.734 [87] 6543 seconds | df ~ 2time
 [1] "TSDF READY A 4 TRUE"

 10:50:22.761 [88] 10:50:22.761 [88] Reactive tsdf | ts_variables original = NULL; p
 10:50:22.761 [88] reprocessed = NULL; complete = NULL; selected = NULL ready? FALSE
 10:50:22.761 [88] 
 
 10:50:22.777 [89] 10:50:22.777 [89] Update play_pause_button || TRUE -->
 
 10:50:22.777 [90] 10:50:22.777 [90] observeEvent input$play_pause | Run -->
 
 10:50:22.779 [91] 10:50:22.779 [91] --> observe update ts variables (1) || Tsdf mod
 10:50:22.779 [91] ified
 
 10:50:22.780 [92] 10:50:22.780 [92]  --> tsdf_variables_no_preprocess 
 
 10:50:22.782 [93] 10:50:22.782 [93] tsdf_variables_no_preprocess | original = volum
 10:50:22.782 [93] e; preprocessed = NULL; complete = volume; selected = volume--> g
 10:50:22.782 [93] eneric
 
 10:50:22.786 [94] 10:50:22.786 [94]  observe update ts variables (1) || ts variable
 10:50:22.786 [94] s original = volume; preprocessed = NULL; complete = volume; sele
 10:50:22.786 [94] cted = volume -->
 
 10:50:22.815 [96] 10:50:22.815 [96] --> update_preprocess_sliders
 
 10:50:22.816 [97] 10:50:22.816 [97] update_preprocess_sliders -->
 
 10:50:22.816 [98] 10:50:22.816 [98] --> propose sizes 
 
 10:50:22.820 [99] 10:50:22.820 [99] propose sizes || volume
 
 10:50:22.825 [100] 10:50:22.825 [100] propose sizes --> 
 
 10:50:22.826 [101] 10:50:22.826 [101] --> propose section sizes
 
 10:50:22.826 [102] 10:50:22.826 [102] Proposed section sizes: 3, 4, 6, 8, 9, 12, 15,
 10:50:22.826 [102]  16, 17, 19, 20, 24, 34, 36, 38, 48, 51, 57, 60, 68, 76, 85, 95
 
 10:50:22.832 [103] 10:50:22.832 [103] --> observe so_sections_count
 
 10:50:22.833 [104] 10:50:22.833 [104] observe so_sections_count -->
 
 10:50:22.834 [105] 10:50:22.834 [105] --> observe so_sections_size
 
 10:50:22.836 [106] 10:50:22.836 [106] observe so_sections_size -->
 
 10:50:22.838 [107] 10:50:22.838 [107] --> observe ss_text_rns
 
 10:50:22.839 [108] 10:50:22.839 [108] observe ss_text_rns -->
 
 10:50:22.841 [109] 10:50:22.841 [109] --> observe ss_text_rnsz
 
 10:50:22.842 [110] 10:50:22.842 [110] observe ss_text_rnsz-->
 
 10:50:22.843 [111] 10:50:22.843 [111] --> observe so_range_normalization_sections
 
 10:50:22.844 [112] 10:50:22.844 [112] observe so_range_normalization_sections -->
 
 10:50:22.845 [113] 10:50:22.845 [113] --> observe so_range_normalization_sections_si
 10:50:22.845 [113] ze
 
 10:50:22.845 [114] 10:50:22.845 [114] observe so_range_normalization_sections_size -
 10:50:22.845 [114] ->
 
 10:50:22.848 [115] 10:50:22.848 [115] --> observe ss_range_normalization_sections
 
 10:50:22.848 [116] 10:50:22.848 [116] observe ss_range_normalization_sections -->
 
 10:50:22.851 [117] 10:50:22.851 [117] --> observe ss_range_normalization_sections_si
 10:50:22.851 [117] ze
 
 10:50:22.851 [118] 10:50:22.851 [118] observe ss_range_normalization_sections_size -
 10:50:22.851 [118] ->
 
 10:50:22.853 [119] 10:50:22.853 [119] --> eventReactive enc | load encoder 
 
 10:50:22.854 [120] 10:50:22.854 [120] eventReactive enc | load encoder | Check if th
 10:50:22.854 [120] e encoder file exists: /home/macu/data/wandb_artifacts/-760169688
 10:50:22.854 [120] 5029958941
 
 10:50:22.854 [121] 10:50:22.854 [121] eventReactive enc | load encoder -760169688502
 10:50:22.854 [121] 9958941 | --> Load from binary file 
 
 10:50:23.071 [122] 10:50:23.071 [122] eventReactive enc | load encoder | stride 1-->
 10:50:23.071 [122] 
 
 10:50:23.073 [123] 10:50:23.073 [123] --> observe X | Before req | tsdf_ready TRUE |
 10:50:23.073 [123]  wlen 17 | stride 1 | allow update embs FALSE | play_prjs FALSE |
 10:50:23.073 [123]  tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:50:23.076 [124] 10:50:23.076 [124] --> observeEvent ts_variables selected | updat
 10:50:23.076 [124] e select variables choices
 
 10:50:23.081 [125] 10:50:23.081 [125] observeEvent ts_variables selected | update se
 10:50:23.081 [125] lect variables choices | ts_variables:original = volume; preproce
 10:50:23.081 [125] ssed = NULL; complete = volume; selected = volume -->
 
 10:50:23.168 [126] 10:50:23.168 [126] --> observe so_range_normalization_sections_si
 10:50:23.168 [126] ze
 
 10:50:23.169 [127] 10:50:23.169 [127] observe so_range_normalization_sections_size -
 10:50:23.169 [127] ->
 
 10:50:23.171 [128] 10:50:23.171 [128] --> observe ss_range_normalization_sections_si
 10:50:23.171 [128] ze
 
 10:50:23.172 [129] 10:50:23.172 [129] observe ss_range_normalization_sections_size -
 10:50:23.172 [129] ->
 
 10:50:23.173 [130] 10:50:23.173 [130] --> input$select_variables mod || update ts_va
 10:50:23.173 [130] riables$selected
 
 10:50:23.174 [131] 10:50:23.174 [131] input$select_variables mod || update ts_variab
 10:50:23.174 [131] les$selected -->
 
 10:50:35.497 [132] 10:50:35.497 [132] --> observe ss_text_rnsz
 
 10:50:35.499 [133] 10:50:35.499 [133] observe ss_text_rnsz-->
 
 10:50:35.558 [134] 10:50:35.558 [134] --> observe ss_range_normalization_sections_si
 10:50:35.558 [134] ze
 
 10:50:35.559 [135] 10:50:35.559 [135] observe ss_range_normalization_sections_size -
 10:50:35.559 [135] ->
 
 10:50:37.540 [136] 10:50:37.540 [136] --> Preprocess dataset Play 
 
 10:50:37.546 [137] 10:50:37.546 [137]  || Preprocess dataset Play || Change to TRUE 
 10:50:37.546 [137] | ts_variables original = volume; preprocessed = NULL; complete =
 10:50:37.546 [137]  volume; selected = volume
 
 10:50:37.549 [138] 10:50:37.549 [138] Preprocess dataset Play -->
 
 10:50:37.585 [139] 10:50:37.585 [139] --> preprocess dataset || play_flag TRUE tsdf 
 10:50:37.585 [139] ready TRUE tsdf_preprocessed ready TRUE
 
 10:50:37.586 [140] 10:50:37.586 [140] Preprocess dataset || input preprocess TRUE pl
 10:50:37.586 [140] ay_flag TRUE
 
 10:50:37.593 [141] 10:50:37.593 [141] -->|| reactiveVal_compute_or_cached || tsdf_pr
 10:50:37.593 [141] eprocessed || 
 
 10:50:37.594 [142] 10:50:37.594 [142] || reactiveVal_compute_or_cached || tsdf_prepr
 10:50:37.594 [142] ocessed || First embedding computation, skipping cache
 
 10:50:37.595 [143] 10:50:37.595 [143] || reactiveVal_compute_or_cached || tsdf_prepr
 10:50:37.595 [143] ocessed ||  compute? TRUE-->
 
 10:50:37.595 [144] 10:50:37.595 [144] Preprocess dataset || Compute flag TRUE
 
 10:50:37.596 [145] 10:50:37.596 [145] Preprocess dataset || Apply preprocessing | Co
 10:50:37.596 [145] lnames volume, timeindex | sections 0 | sections size 51
 
 10:50:37.597 [146] 10:50:37.597 [146] --> apply_preprocessing | colnames volume, tim
 10:50:37.597 [146] eindex
 
 10:50:37.598 [147] 10:50:37.598 [147] apply_preprocessing | Segmentation
 
 10:50:37.598 [148] 10:50:37.598 [148] --> apply_preprocessing_segments
 
 10:50:37.601 [149] 10:50:37.601 [149] apply_preprocessing -->
 
 10:50:37.609 [150] 10:50:37.609 [150] Preprocess dataset || tsdf_preprocessed~(440, 
 10:50:37.609 [150] 2)
 
 10:50:37.610 [151] 10:50:37.610 [151] Preprocess dataset   --> 
 
 10:50:37.612 [152] 10:50:37.612 [152] ts_concatenated | colnames before concat | vol
 10:50:37.612 [152] ume, timeindex
 
 10:50:37.612 [153] 10:50:37.612 [153] ts_concatenated || ts variables Before concat 
 10:50:37.612 [153] original = volume; preprocessed = NULL; complete = volume; select
 10:50:37.612 [153] ed = volume
 
 10:50:37.615 [154] 10:50:37.615 [154] ts_concatenated | Concat preprocessed 
 
 10:50:37.615 [155] 10:50:37.615 [155] ts_concatenated | Before | Colnames volume, ti
 10:50:37.615 [155] meindex
 
 10:50:37.615 [156] 10:50:37.615 [156] --> concat preprocessed
 
 10:50:37.616 [157] 10:50:37.616 [157] concat preprocessed || Concat
 
 10:50:37.616 [158] 10:50:37.616 [158] || --> concat_datasets 
 
 10:50:37.616 [159] 10:50:37.616 [159]  --> filter_and_rename_dataset || Filter & ren
 10:50:37.616 [159] ame dataset dataset 1 | suffix:  | vars: 
 
 10:50:37.616 [160] 10:50:37.616 [160] filter_and_rename_dataset || Colnames dataset 
 10:50:37.616 [160] 1: volume, timeindex
 
 10:50:37.616 [161] 10:50:37.616 [161]  --> filter_and_rename_dataset || Filter & ren
 10:50:37.616 [161] ame dataset dataset 2 | suffix: _preprocessed | vars: 
 
 10:50:37.617 [162] 10:50:37.617 [162] filter_and_rename_dataset || Colnames dataset 
 10:50:37.617 [162] 2: volume_preprocessed, timeindex_preprocessed
 
 10:50:37.617 [163] 10:50:37.617 [163] || concat_datasets || Combine columns
 
 10:50:37.617 [164] 10:50:37.617 [164] || concat_datasets || Combine columns | datase
 10:50:37.617 [164] t1 colnames volume, || concat_datasets || Combine columns | datas
 10:50:37.617 [164] et1 colnames timeindex
 
 10:50:37.617 [165] 10:50:37.617 [165] || concat_datasets || Combine columns | datase
 10:50:37.617 [165] t2 colnames volume_preprocessed, || concat_datasets || Combine co
 10:50:37.617 [165] lumns | dataset2 colnames timeindex_preprocessed
 
 10:50:37.618 [166] 10:50:37.618 [166] concat_datasets || Colnames after merge: volum
 10:50:37.618 [166] e, timeindex, volume_preprocessed, timeindex_preprocessed
 
 10:50:37.618 [167] 10:50:37.618 [167] concat preprocessed --> || colnames volume, ti
 10:50:37.618 [167] meindex, volume_preprocessed, timeindex_preprocessed
 
 10:50:37.618 [168] 10:50:37.618 [168] ts_concatenated | tsdf preprocessed || ts vari
 10:50:37.618 [168] ables original = volume; preprocessed = NULL; complete = volume; 
 10:50:37.618 [168] selected = volume
 
 10:50:37.621 [169] 10:50:37.621 [169] ts_concatenated | tsdf preprocessed || colname
 10:50:37.621 [169] s volume, timeindex, volume_preprocessed, timeindex_preprocessed
 
 10:50:37.621 [170] 10:50:37.621 [170]  --> tsdf_variables_preprocess
 
 10:50:37.625 [171] 10:50:37.625 [171] tsdf_variables_preprocess | original = volume;
 10:50:37.625 [171]  preprocessed = volume_preprocessed; complete = volume, volume_pr
 10:50:37.625 [171] eprocessed; selected = volume, volume_preprocessed-->
 
 10:50:37.630 [172] 10:50:37.630 [172] ts_concatenated | ts variables || ts variables
 10:50:37.630 [172]  After concat: original = volume; preprocessed = volume_preproces
 10:50:37.630 [172] sed; complete = volume, volume_preprocessed; selected = volume, v
 10:50:37.630 [172] olume_preprocessed
 
 10:50:37.635 [173] 10:50:37.635 [173] observe preprocess_play_flag || Update ts_vari
 10:50:37.635 [173] ables$selected to show preprocessed variate.
 
 10:50:37.635 [174] 10:50:37.635 [174] observe preprocess_play_flag -->
 
 10:50:37.637 [175] 10:50:37.637 [175] --> preprocess dataset || play_flag TRUE tsdf 
 10:50:37.637 [175] ready TRUE tsdf_preprocessed ready TRUE
 
 10:50:37.637 [176] 10:50:37.637 [176] Preprocess dataset || input preprocess TRUE pl
 10:50:37.637 [176] ay_flag TRUE
 
 10:50:37.675 [177] 10:50:37.675 [177] -->|| reactiveVal_compute_or_cached || tsdf_pr
 10:50:37.675 [177] eprocessed || 
 
 10:50:37.675 [178] 10:50:37.675 [178] || reactiveVal_compute_or_cached || tsdf_prepr
 10:50:37.675 [178] ocessed ||  Use cached || params_prev gtrends_kohls:v0, 17, 1, se
 10:50:37.675 [178] gments, NULL, NULL, range_normalization, NULL
 
 10:50:37.676 [179] 10:50:37.676 [179] || reactiveVal_compute_or_cached || tsdf_prepr
 10:50:37.676 [179] ocessed ||  Use cached || params_prev gtrends_kohls:v0, 17, 1, se
 10:50:37.676 [179] gments, NULL, NULL, range_normalization, NULL
 
 10:50:37.676 [180] 10:50:37.676 [180] || reactiveVal_compute_or_cached || tsdf_prepr
 10:50:37.676 [180] ocessed ||  Use cached || null? FALSE || compute? || FALSE
 
 10:50:37.676 [181] 10:50:37.676 [181] || reactiveVal_compute_or_cached || tsdf_prepr
 10:50:37.676 [181] ocessed ||  compute? FALSE-->
 
 10:50:37.676 [182] 10:50:37.676 [182] Preprocess dataset || Compute flag FALSE
 
 10:50:37.677 [183] 10:50:37.677 [183] Preprocess dataset || Use cached values 
 
 10:50:37.677 [184] 10:50:37.677 [184] Preprocess dataset || tsdf_preprocessed~(440, 
 10:50:37.677 [184] 2)
 
 10:50:37.677 [185] 10:50:37.677 [185] Preprocess dataset   --> 
 
 10:50:37.678 [186] 10:50:37.678 [186] --> observeEvent ts_variables selected | updat
 10:50:37.678 [186] e select variables choices
 
 10:50:37.685 [187] 10:50:37.685 [187] observeEvent ts_variables selected | update se
 10:50:37.685 [187] lect variables choices | ts_variables:original = volume; preproce
 10:50:37.685 [187] ssed = volume_preprocessed; complete = volume, volume_preprocesse
 10:50:37.685 [187] d; selected = volume, volume_preprocessed, volume_preprocessed --
 10:50:37.685 [187] >
 
 10:50:37.757 [188] 10:50:37.757 [188] --> input$select_variables mod || update ts_va
 10:50:37.757 [188] riables$selected
 
 10:50:37.758 [189] 10:50:37.758 [189] input$select_variables mod || update ts_variab
 10:50:37.758 [189] les$selected -->
 
 10:50:41.293 [190] 10:50:41.293 [190] Play embs || Change button TRUE
 
 10:50:41.295 [191] 10:50:41.295 [191] --> Enable/disable embs
 
 10:50:41.295 [192] 10:50:41.295 [192] Enable/disable embs || enable embs
 
 10:50:41.298 [193] 10:50:41.298 [193] Enable/disable embs --> || Changes to TRUE
 
 10:50:41.299 [194] 10:50:41.299 [194] play_embs set to true, recompute projections_p
 10:50:41.299 [194] lot 
 
 10:50:41.300 [195] 10:50:41.300 [195]  projections_plot_comp || Before req | tsdf_re
 10:50:41.300 [195] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:50:41.300 [195] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:50:41.300 [195] 88 | enc_input_ready? FALSE | play prjs? TRUE | play? TRUE
 
 10:50:41.305 [196] 10:50:41.305 [196] Play embs || Changes to TRUE
 
 10:50:41.311 [197] 10:50:41.311 [197] --> output$projections_plot
 
 10:50:41.313 [198] 10:50:41.313 [198] output$projections_plot -->
 
 10:50:41.330 [199] 10:50:41.330 [199] --> observe X | Before req | tsdf_ready TRUE |
 10:50:41.330 [199]  wlen 17 | stride 1 | allow update embs TRUE | play_prjs TRUE | t
 10:50:41.330 [199] sdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:50:41.332 [200] 10:50:41.332 [200] observe X | Update Sliding Window
 
 10:50:41.332 [201] 10:50:41.332 [201] observe X | wlen 17 | stride 1 | tsdf_ready() 
 10:50:41.332 [201] TRUE | ts_vars original = volume; preprocessed = volume_preproces
 10:50:41.332 [201] sed; complete = volume, volume_preprocessed; selected = volume, v
 10:50:41.332 [201] olume_preprocessed | Let's prepare data
 
 10:50:41.335 [202] 10:50:41.335 [202] observe X | SWV
 
 10:50:41.336 [203] 10:50:41.336 [203]  Enc input | observe X | ts_variables original
 10:50:41.336 [203]  = volume; preprocessed = volume_preprocessed; complete = volume,
 10:50:41.336 [203]  volume_preprocessed; selected = volume, volume_preprocessed
 
 10:50:41.339 [204] 10:50:41.339 [204] Enc input | Update X
 
 10:50:41.339 [205] 10:50:41.339 [205] Enc input | ReactiveVal X | Update Sliding Win
 10:50:41.339 [205] dow
 
 10:50:41.339 [206] 10:50:41.339 [206] Enc input | observe X | wlen 17 | stride 1 | L
 10:50:41.339 [206] et's prepare data
 
 10:50:41.339 [207] 10:50:41.339 [207] Enc input | observe X | ts_ar - id QXJ0aWZhY3Q
 10:50:41.339 [207] 6MTM1MzgwNDc1OQ== - name gtrends_kohls:v0
 
 10:50:41.341 [208] 10:50:41.341 [208] --> path_comp || 
 
 10:50:41.342 [209] 10:50:41.342 [209] path_comp || Dataset saved at: /home/macu/data
 10:50:41.342 [209] /wandb_artifacts/-7635916990915258888
 
 10:50:41.342 [210] 10:50:41.342 [210] path_comp --> || 
 
 10:50:41.342 [211] 10:50:41.342 [211] Enc input | observe X | path: /home/macu/data/
 10:50:41.342 [211] wandb_artifacts/-7635916990915258888
 py function: prepare_forecasting_data: <function prepare_forecasting_data at 0x7f84d472c4c0>
--> Exec with feather | reading input from /home/macu/data/wandb_artifacts/-7635916990915258888
--> Exec with feather | Apply function /home/macu/data/wandb_artifacts/-7635916990915258888
Exec with feather | time: 0.006491899490356445
Exec with feather --> /home/macu/data/wandb_artifacts/-7635916990915258888

 10:50:41.351 [212] 10:50:41.351 [212] Enc input | observe X | 1) enc_input~(423, 1, 
 10:50:41.351 [212] 17)
 
 10:50:41.352 [213] 10:50:41.352 [213] Enc input | observe X | 2)enc_input~(423, 1, 1
 10:50:41.352 [213] 7)
 
 10:50:41.352 [214] 10:50:41.352 [214] Enc input | observe X | Update sliding window 
 10:50:41.352 [214] | Apply stride 1 | X=enc_input~(423, 1, 17)
 
 10:50:41.358 [215] 10:50:41.358 [215] observe X | SWV: 0.0230910778045654 secs 
 
 10:50:41.361 [216] 10:50:41.361 [216] Log add | observe X | SWV
 
 10:50:41.362 [217] 10:50:41.362 [217] observe X | Update sliding window | Exit 1 | e
 10:50:41.362 [217] nc_input~(423, 1, 17) | ts_variables original = volume; preproces
 10:50:41.362 [217] sed = volume_preprocessed; complete = volume, volume_preprocessed
 10:50:41.362 [217] ; selected = volume, volume_preprocessed-->
 
 10:50:41.371 [218] 10:50:41.371 [218] --> output$projections_plot
 
 10:50:41.469 [219] 10:50:41.469 [219]  projections_plot_comp || Before req | tsdf_re
 10:50:41.469 [219] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:50:41.469 [219] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:50:41.469 [219] 88 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 10:50:41.472 [220] 10:50:41.472 [220] --> projections_plot_comp
 
 10:50:41.474 [221] 10:50:41.474 [221] embs_comp_or_cached || Before req enc_input_re
 10:50:41.474 [221] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 10:50:41.474 [221] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 10:50:41.474 [221] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 10:50:41.474 [221] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 10:50:41.476 [222] 10:50:41.476 [222] -->|| reactiveVal_compute_or_cached || embs_co
 10:50:41.476 [222] mp || 
 
 10:50:41.477 [223] 10:50:41.477 [223] || reactiveVal_compute_or_cached || embs_comp 
 10:50:41.477 [223] || First embedding computation, skipping cache
 
 10:50:41.478 [224] 10:50:41.478 [224] || reactiveVal_compute_or_cached || embs_comp 
 10:50:41.478 [224] ||  compute? TRUE-->
 
 10:50:41.478 [225] 10:50:41.478 [225] embs_comp_or_cached || --> embs | compute_flag
 10:50:41.478 [225]  TRUE
 
 10:50:41.479 [226] 10:50:41.479 [226] embs_comp || --> embs_comp | enc_input_ready T
 10:50:41.479 [226] RUE
 
 10:50:41.479 [227] 10:50:41.479 [227] embs_comp || tsdf ~ (440, 2)
 
 10:50:41.479 [228] 10:50:41.479 [228] embs_comp || X ~(423, 1, 17)
 
 10:50:41.480 [229] 10:50:41.480 [229] embs_comp ||get embeddings
 
 10:50:41.481 [230] 10:50:41.481 [230] embs_comp || get embeddings | Get batch size a
 10:50:41.481 [230] nd dataset
 
 10:50:41.808 [231] 10:50:41.808 [231] embs_comp || get embeddings (set stride set ba
 10:50:41.808 [231] tch size) | Stride 1 | batch size: 16 | stride: 1
 
 10:50:41.809 [232] 10:50:41.809 [232] embs_comp || get embeddings | Original stride:
 10:50:41.809 [232]  1
 
 10:50:41.809 [233] 10:50:41.809 [233] embs_comp || get embeddings (set stride set ba
 10:50:41.809 [233] tch size) | Chunk_size 10000000
 
 10:50:41.810 [234] 10:50:41.810 [234] embs_comp || get_enc_embs_set_stride_set_batch
 10:50:41.810 [234] _size | GPU | Before
 
 10:50:41.812 [235] 10:50:41.812 [235] embs_kwargs | Moment
 [1] --> get_enc_embs_set_stride_set_batch_size
[1] get_enc_embs_set_stride_set_batch_size | Moment | True
[1] get_acts_moment | Trial 1 | x_enc ~ torch.Size([423, 1, 17])
[1] get_acts_moment | Trial 1 | About to pad X (encoder input) | exception The size of tensor a (16) must match the size of tensor b (17) at non-singleton dimension 1 | padd step: 10
[1] get_acts_moment | Trial 1 | y ~ torch.Size([423, 1, 17])
[1] ------------------- Trial 1 | Padd -----------------
[1] get_acts_moment | Trial 2 | x_enc ~ torch.Size([423, 1, 27])
[1] get_acts_moment | Trial 2 | About to pad X (encoder input) | exception The size of tensor a (24) must match the size of tensor b (27) at non-singleton dimension 1 | padd step: 10
[1] get_acts_moment | Trial 2 | y ~ torch.Size([423, 1, 27])
[1] ------------------- Trial 2  -----------------
[1] ------------------- Trial 2 | a > a_old -----------------
[1] ------------------- Trial 2 |a > a_old | Reduced |  y ~ torch.Size([423, 1, 24]) -----------------
[1] get_acts_moment | Trial 3 | x_enc ~ torch.Size([423, 1, 24])
[1] get_acts_moment | Trial 3 | embs ~ torch.Size([423, 1, 3, 512])
[1] get_enc_embs_set_stride_set_batch_size | Before moving to CPU | embs~(423, 512)
[1] get_enc_embs_set_stride_set_batch_size | embs~(423, 512) -->

 10:50:41.996 [236] 10:50:41.996 [236] embs_comp || get_enc_embs_set_stride_set_batch
 10:50:41.996 [236] _size | GPU | After
 
 10:50:41.997 [237] 10:50:41.997 [237] embs_comp || get_enc_embs_set_stride_set_batch
 10:50:41.997 [237] _size embs ~ | 423

 10:50:41.997 [237] 10:50:41.997 [237] embs_comp || get_enc_embs_set_stride_set_batch
 10:50:41.997 [237] _size embs ~ | 512
 
 10:50:41.997 [238] 10:50:41.997 [238] get_enc_embs_set_stride_set_batch_size | GPU |
 10:50:41.997 [238]  total time: 0.516289949417114 secs thus 0.00860483249028524 mins
 10:50:41.997 [238]  | result ~423

 10:50:41.997 [238] 10:50:41.997 [238] get_enc_embs_set_stride_set_batch_size | GPU |
 10:50:41.997 [238]  total time: 0.516289949417114 secs thus 0.00860483249028524 mins
 10:50:41.997 [238]  | result ~512
 
 10:50:41.999 [239] 10:50:41.999 [239] Log add | Embeddings
 Garbage collection 112 = 89+6+17 (level 2) ... 
179.4 Mbytes of cons cells used (61%)
56.4 Mbytes of vectors used (50%)

 10:50:42.508 [240] 10:50:42.508 [240] embs_comp || get embeddings | 423 -->

 10:50:42.508 [240] 10:50:42.508 [240] embs_comp || get embeddings | 512 -->
 
 10:50:42.521 [241] 10:50:42.521 [241] embs_comp_or_cached || res ~423, 512
 
 10:50:42.523 [242] 10:50:42.523 [242] projections_plot_comp | embs? TRUE
 
 10:50:42.524 [243] 10:50:42.524 [243] --> embs_complete_cases
 
 10:50:42.524 [244] 10:50:42.524 [244] embs_complete_cases || Before complete cases e
 10:50:42.524 [244] mbs ~423, 512
 
 10:50:42.527 [245] 10:50:42.527 [245] embs_complete_cases || After complete cases em
 10:50:42.527 [245] bs ~
 
 10:50:42.527 [246] 10:50:42.527 [246] embs_complete_cases -->
 
 10:50:42.528 [247] 10:50:42.528 [247] projections_plot_comp | complete_cases? TRUE
 
 10:50:42.535 [248] 10:50:42.535 [248] projections_plot_comp | embs complete?TRUE
 
 10:50:42.536 [249] 10:50:42.536 [249]  projections_plot_comp || ts_variables:  origi
 10:50:42.536 [249] nal = volume; preprocessed = volume_preprocessed; complete = volu
 10:50:42.536 [249] me, volume_preprocessed; selected = volume, volume_preprocessed
 
 10:50:42.540 [250] 10:50:42.540 [250] projections || Before req | dr_method PCA_UMAP
 10:50:42.540 [250]  | tsdf ready TRUE | update embs TRUE | enc_input_ready? TRUE
 
 10:50:42.541 [251] 10:50:42.541 [251] --> projections
 
 10:50:42.541 [252] 10:50:42.541 [252] projections || before prjs
 
 10:50:42.542 [253] 10:50:42.542 [253] --> prj_object
 
 10:50:42.543 [254] 10:50:42.543 [254] prj_object || Before prjs_comp
 
 10:50:42.544 [255] 10:50:42.544 [255] prjs_comp | Before req || DR: PCA_UMAP || embs
 10:50:42.544 [255] ? TRUE
 
 10:50:42.545 [256] 10:50:42.545 [256] --> || prjs_comp || Before switch || DR method
 10:50:42.545 [256] : PCA_UMAP
 
 10:50:42.546 [257] 10:50:42.546 [257] prjs_pca_umap || Before req | embs complete ca
 10:50:42.546 [257] ses? TRUE
 
 10:50:42.552 [258] 10:50:42.552 [258] --> prjs_pca_umap
 [W] [10:50:42.555322] Warning(`fit`): As of v0.16, PCA invoked without an n_components argument defauts to using min(n_samples, n_features) rather than 1
PCA prjs~(423, 423)
GPU | Used mem: 0
GPU | Used mem: 48
GPU | Memory Usage: [[90m--------------------[0m] [90m0%[0m
-- cuml.UMAP -- False

 10:50:42.772 [259] 10:50:42.772 [259] prjs_pca_umap -->
 
 10:50:42.773 [260] 10:50:42.773 [260] prjs_comp | res ~423, 2-->
 
 10:50:42.773 [261] 10:50:42.773 [261] prj_object || After prjs_comp res~423

 10:50:42.773 [261] 10:50:42.773 [261] prj_object || After prjs_comp res~2
 
 10:50:42.774 [262] 10:50:42.774 [262] prj_object || cpu_flag: GPU | DR: PCA_UMAP | E
 10:50:42.774 [262] xecution time: 0.23066258430481 | prjs ~ 423 seconds

 10:50:42.774 [262] 10:50:42.774 [262] prj_object || cpu_flag: GPU | DR: PCA_UMAP | E
 10:50:42.774 [262] xecution time: 0.23066258430481 | prjs ~ 2 seconds
 
 10:50:42.775 [263] 10:50:42.775 [263] prj_object -->
 
 10:50:42.777 [264] 10:50:42.777 [264] Log add | PRJ Object
 
 10:50:42.778 [265] 10:50:42.778 [265] projections || Compute clusters? no_clusters
 
 10:50:42.781 [266] 10:50:42.781 [266] Projections |prjs~(423, 2)-->
 
 10:50:42.782 [267] 10:50:42.782 [267]  projections_plot_comp || before highlight prj
 10:50:42.782 [267] s_~(423, 2)
 
 10:50:42.784 [268] 10:50:42.784 [268]  projections_plot_comp || Cluster prjs_~(423, 
 10:50:42.784 [268] 3)
 
 10:50:42.784 [269] 10:50:42.784 [269] projections_plot_comp | GoGo Plot! 423
 
 10:50:42.784 [270] 10:50:42.784 [270] --> ggplot_base
 
 10:50:42.784 [271] 10:50:42.784 [271] ggplot_base -->
 
 10:50:42.822 [272] 10:50:42.822 [272] projections_plot_comp | Projections Plot time:
 10:50:42.822 [272]  0.282803058624268
 
 10:50:42.825 [273] 10:50:42.825 [273] Log add | Projections Plot
 
 10:50:42.826 [274] 10:50:42.826 [274] output$projections_plot -->
 
 10:50:42.993 [275] 10:50:42.993 [275] --> observe X | Before req | tsdf_ready TRUE |
 10:50:42.993 [275]  wlen 17 | stride 1 | allow update embs TRUE | play_prjs TRUE | t
 10:50:42.993 [275] sdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:50:42.995 [276] 10:50:42.995 [276] observe X | Update Sliding Window
 
 10:50:42.996 [277] 10:50:42.996 [277] observe X | wlen 17 | stride 1 | tsdf_ready() 
 10:50:42.996 [277] TRUE | ts_vars original = volume; preprocessed = volume_preproces
 10:50:42.996 [277] sed; complete = volume, volume_preprocessed; selected = volume, v
 10:50:42.996 [277] olume_preprocessed | Let's prepare data
 
 10:50:42.999 [278] 10:50:42.999 [278] observe X | SWV
 
 10:50:42.999 [279] 10:50:42.999 [279] Enc input | observe X | X already updated
 
 10:50:43.000 [280] 10:50:43.000 [280] observe X | SWV: 0.000488996505737305 secs 
 
 10:50:43.002 [281] 10:50:43.002 [281] Log add | observe X | SWV
 
 10:50:43.003 [282] 10:50:43.003 [282] observe X | Update sliding window | Exit 1 | e
 10:50:43.003 [282] nc_input~(423, 1, 17) | ts_variables original = volume; preproces
 10:50:43.003 [282] sed = volume_preprocessed; complete = volume, volume_preprocessed
 10:50:43.003 [282] ; selected = volume, volume_preprocessed-->
 
 10:50:43.013 [283] 10:50:43.013 [283] --> output$projections_plot
 
 10:50:43.014 [284] 10:50:43.014 [284]  projections_plot_comp || Before req | tsdf_re
 10:50:43.014 [284] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:50:43.014 [284] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:50:43.014 [284] 88 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 10:50:43.017 [285] 10:50:43.017 [285] --> projections_plot_comp
 
 10:50:43.019 [286] 10:50:43.019 [286] embs_comp_or_cached || Before req enc_input_re
 10:50:43.019 [286] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 10:50:43.019 [286] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 10:50:43.019 [286] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 10:50:43.019 [286] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 10:50:43.020 [287] 10:50:43.020 [287] -->|| reactiveVal_compute_or_cached || embs_co
 10:50:43.020 [287] mp || 
 
 10:50:43.021 [288] 10:50:43.021 [288] || reactiveVal_compute_or_cached || embs_comp 
 10:50:43.021 [288] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:50:43.021 [288] mall-embedding:v0, 17, 1, FALSE, FALSE, /home/macu/data/wandb_art
 10:50:43.021 [288] ifacts/-7635916990915258888
 
 10:50:43.021 [289] 10:50:43.021 [289] || reactiveVal_compute_or_cached || embs_comp 
 10:50:43.021 [289] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:50:43.021 [289] mall-embedding:v0, 17, 1, FALSE, FALSE, /home/macu/data/wandb_art
 10:50:43.021 [289] ifacts/-7635916990915258888
 
 10:50:43.022 [290] 10:50:43.022 [290] || reactiveVal_compute_or_cached || embs_comp 
 10:50:43.022 [290] ||  Use cached || null? FALSE || compute? || FALSE
 
 10:50:43.022 [291] 10:50:43.022 [291] || reactiveVal_compute_or_cached || embs_comp 
 10:50:43.022 [291] ||  compute? FALSE-->
 
 10:50:43.022 [292] 10:50:43.022 [292] embs_comp_or_cached || --> embs | compute_flag
 10:50:43.022 [292]  FALSE
 
 10:50:43.022 [293] 10:50:43.022 [293] embs_comp_or_cached || res ~423, 512
 
 10:50:43.023 [294] 10:50:43.023 [294] projections_plot_comp | embs? TRUE
 
 10:50:43.023 [295] 10:50:43.023 [295] --> embs_complete_cases
 
 10:50:43.023 [296] 10:50:43.023 [296] embs_complete_cases || Before complete cases e
 10:50:43.023 [296] mbs ~423, 512
 
 10:50:43.026 [297] 10:50:43.026 [297] embs_complete_cases || After complete cases em
 10:50:43.026 [297] bs ~423, 512
 
 10:50:43.027 [298] 10:50:43.027 [298] embs_complete_cases -->
 
 10:50:43.027 [299] 10:50:43.027 [299] projections_plot_comp | complete_cases? TRUE
 
 10:50:43.031 [300] 10:50:43.031 [300] projections_plot_comp | embs complete?TRUE
 
 10:50:43.032 [301] 10:50:43.032 [301]  projections_plot_comp || ts_variables:  origi
 10:50:43.032 [301] nal = volume; preprocessed = volume_preprocessed; complete = volu
 10:50:43.032 [301] me, volume_preprocessed; selected = volume, volume_preprocessed
 
 10:50:43.036 [302] 10:50:43.036 [302]  projections_plot_comp || before highlight prj
 10:50:43.036 [302] s_~(423, 2)
 
 10:50:43.036 [303] 10:50:43.036 [303]  projections_plot_comp || Cluster prjs_~(423, 
 10:50:43.036 [303] 3)
 
 10:50:43.037 [304] 10:50:43.037 [304] projections_plot_comp | GoGo Plot! 423
 
 10:50:43.037 [305] 10:50:43.037 [305] --> ggplot_base
 
 10:50:43.037 [306] 10:50:43.037 [306] ggplot_base -->
 
 10:50:43.069 [307] 10:50:43.069 [307] projections_plot_comp | Projections Plot time:
 10:50:43.069 [307]  0.0341861248016357
 
 10:50:43.072 [308] 10:50:43.072 [308] Log add | Projections Plot
 
 10:50:43.073 [309] 10:50:43.073 [309] output$projections_plot -->
 
 10:50:43.311 [310] 10:50:43.311 [310] --> embedding idx
 
 10:50:43.318 [311] 10:50:43.318 [311] embedding idx -->
 
 10:50:43.380 [312] 10:50:43.380 [312] ts_plot_dygraph || Before req| tsdf ?TRUE| prj
 10:50:43.380 [312] _object? TRUE| play ?TRUE| embs ?TRUE
 
 10:50:43.382 [313] 10:50:43.382 [313] **** ts_plot_dygraph ****
 
 10:50:43.383 [314] 10:50:43.383 [314] ts_plot_dygraph || ts_variables before ts_plot
 10:50:43.383 [314]  original = volume; preprocessed = volume_preprocessed; complete 
 10:50:43.383 [314] = volume, volume_preprocessed; selected = volume, volume_preproce
 10:50:43.383 [314] ssed
 
 10:50:43.386 [315] 10:50:43.386 [315] --> ts_plot | Before req 1 | wlen 17 | tsdf re
 10:50:43.386 [315] ady? TRUE
 
 10:50:43.388 [316] 10:50:43.388 [316] ts_plot || ts variables Before ts_plot_base or
 10:50:43.388 [316] iginal = volume; preprocessed = volume_preprocessed; complete = v
 10:50:43.388 [316] olume, volume_preprocessed; selected = volume, volume_preprocesse
 10:50:43.388 [316] d -->
 
 10:50:43.392 [317] 10:50:43.392 [317] --> ts_plot_base
 
 10:50:43.393 [318] 10:50:43.393 [318] start_date --> 2004-01-01
 
 10:50:43.395 [319] 10:50:43.395 [319] end_date --> 2012-05-31
 
 10:50:43.395 [320] 10:50:43.395 [320] ts_plot_base | start_date: 2004-01-01 end_date
 10:50:43.395 [320] : 2012-05-31
 
 10:50:43.396 [321] 10:50:43.396 [321] ts_plot_base | colnames before select | volume
 10:50:43.396 [321] , timeindex, volume_preprocessed, timeindex_preprocessed
 
 10:50:43.396 [322] 10:50:43.396 [322] ts_plot_base | ts_variables before select | or
 10:50:43.396 [322] iginal = volume; preprocessed = volume_preprocessed; complete = v
 10:50:43.396 [322] olume, volume_preprocessed; selected = volume, volume_preprocesse
 10:50:43.396 [322] d
 
 10:50:43.405 [323] 10:50:43.405 [323] ts_plot_base | colnames | volume, volume_prepr
 10:50:43.405 [323] ocessed
 
 10:50:43.406 [324] 10:50:43.406 [324] ts_plot_base | tsdf_xts time0.010779857635498
 
 10:50:43.409 [325] 10:50:43.409 [325] Log add | Reactive X | SWV
 
 10:50:43.415 [326] 10:50:43.415 [326] ts_plot_base -->
 
 10:50:43.415 [327] 10:50:43.415 [327] ts_plot | bp
 
 10:50:43.415 [328] 10:50:43.415 [328] ts_plot | embedings idxs 
 
 10:50:43.415 [329] 10:50:43.415 [329] ts_plot | Before if
 
 10:50:43.416 [330] 10:50:43.416 [330] ts_plot | Else |  is null ids? FALSE embedding
 10:50:43.416 [330] _ids~0 | plot windows ?TRUE
 
 10:50:43.418 [331] 10:50:43.418 [331] ts plot | Execution time: 0.0300781726837158
 
 10:50:43.418 [332] 10:50:43.418 [332] ts plot | is null ts_plt ? FALSE
 
 10:50:43.418 [333] 10:50:43.418 [333] ts_plot -->
 
 10:50:43.419 [334] 10:50:43.419 [334] ts_plot_dygraph || ts_plot computed
 
 10:50:43.419 [335] 10:50:43.419 [335] ts_plot_dygraph || After callbacks
 
 10:50:43.419 [336] 10:50:43.419 [336] ts_plot dygraph | Execution_time: 0.0367045402
 10:50:43.419 [336] 526855
 
 10:50:43.495 [337] 10:50:43.495 [337] | JS PLOT RENDER | projections_plot, 2135
 
 10:50:43.497 [338] 10:50:43.497 [338] Log add | JS Plot Render projections_plot
 
 10:50:43.498 [339] 10:50:43.498 [339] | JS PLOT RENDER | ts_plot_dygraph, 891
 
 10:50:43.499 [340] 10:50:43.499 [340] Log add | JS Plot Render ts_plot_dygraph
 
 10:50:48.621 [341] 10:50:48.621 [341] --> Observe clustering options
 
 10:50:48.622 [342] 10:50:48.622 [342] Observe clustering options -->
 
 10:50:48.631 [343] 10:50:48.631 [343] --> output$projections_plot
 
 10:50:48.632 [344] 10:50:48.632 [344]  projections_plot_comp || Before req | tsdf_re
 10:50:48.632 [344] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:50:48.632 [344] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:50:48.632 [344] 88 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 10:50:48.635 [345] 10:50:48.635 [345] --> projections_plot_comp
 
 10:50:48.636 [346] 10:50:48.636 [346] embs_comp_or_cached || Before req enc_input_re
 10:50:48.636 [346] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 10:50:48.636 [346] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 10:50:48.636 [346] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 10:50:48.636 [346] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 10:50:48.637 [347] 10:50:48.637 [347] -->|| reactiveVal_compute_or_cached || embs_co
 10:50:48.637 [347] mp || 
 
 10:50:48.638 [348] 10:50:48.638 [348] || reactiveVal_compute_or_cached || embs_comp 
 10:50:48.638 [348] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:50:48.638 [348] mall-embedding:v0, 17, 1, FALSE, FALSE, /home/macu/data/wandb_art
 10:50:48.638 [348] ifacts/-7635916990915258888
 
 10:50:48.638 [349] 10:50:48.638 [349] || reactiveVal_compute_or_cached || embs_comp 
 10:50:48.638 [349] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:50:48.638 [349] mall-embedding:v0, 17, 1, FALSE, FALSE, /home/macu/data/wandb_art
 10:50:48.638 [349] ifacts/-7635916990915258888
 
 10:50:48.639 [350] 10:50:48.639 [350] || reactiveVal_compute_or_cached || embs_comp 
 10:50:48.639 [350] ||  Use cached || null? FALSE || compute? || FALSE
 
 10:50:48.639 [351] 10:50:48.639 [351] || reactiveVal_compute_or_cached || embs_comp 
 10:50:48.639 [351] ||  compute? FALSE-->
 
 10:50:48.639 [352] 10:50:48.639 [352] embs_comp_or_cached || --> embs | compute_flag
 10:50:48.639 [352]  FALSE
 
 10:50:48.639 [353] 10:50:48.639 [353] embs_comp_or_cached || res ~423, 512
 
 10:50:48.640 [354] 10:50:48.640 [354] projections_plot_comp | embs? TRUE
 
 10:50:48.640 [355] 10:50:48.640 [355] --> embs_complete_cases
 
 10:50:48.640 [356] 10:50:48.640 [356] embs_complete_cases || Before complete cases e
 10:50:48.640 [356] mbs ~423, 512
 
 10:50:48.643 [357] 10:50:48.643 [357] embs_complete_cases || After complete cases em
 10:50:48.643 [357] bs ~423, 512
 
 10:50:48.644 [358] 10:50:48.644 [358] embs_complete_cases -->
 
 10:50:48.644 [359] 10:50:48.644 [359] projections_plot_comp | complete_cases? TRUE
 
 10:50:48.647 [360] 10:50:48.647 [360] projections_plot_comp | embs complete?TRUE
 
 10:50:48.648 [361] 10:50:48.648 [361]  projections_plot_comp || ts_variables:  origi
 10:50:48.648 [361] nal = volume; preprocessed = volume_preprocessed; complete = volu
 10:50:48.648 [361] me, volume_preprocessed; selected = volume, volume_preprocessed
 
 10:50:48.652 [362] 10:50:48.652 [362] projections || Before req | dr_method PCA_UMAP
 10:50:48.652 [362]  | tsdf ready TRUE | update embs TRUE | enc_input_ready? TRUE
 
 10:50:48.653 [363] 10:50:48.653 [363] --> projections
 
 10:50:48.654 [364] 10:50:48.654 [364] projections || before prjs
 
 10:50:48.655 [365] 10:50:48.655 [365] --> prj_object
 
 10:50:48.655 [366] 10:50:48.655 [366] prj_object || Before prjs_comp
 
 10:50:48.655 [367] 10:50:48.655 [367] prj_object || After prjs_comp res~423

 10:50:48.655 [367] 10:50:48.655 [367] prj_object || After prjs_comp res~2
 
 10:50:48.656 [368] 10:50:48.656 [368] prj_object || cpu_flag: GPU | DR: PCA_UMAP | E
 10:50:48.656 [368] xecution time: 0.000606298446655273 | prjs ~ 423 seconds

 10:50:48.656 [368] 10:50:48.656 [368] prj_object || cpu_flag: GPU | DR: PCA_UMAP | E
 10:50:48.656 [368] xecution time: 0.000606298446655273 | prjs ~ 2 seconds
 
 10:50:48.657 [369] 10:50:48.657 [369] prj_object -->
 
 10:50:48.659 [370] 10:50:48.659 [370] Log add | PRJ Object
 
 10:50:48.660 [371] 10:50:48.660 [371] projections || Compute clusters? calculate_clu
 10:50:48.660 [371] sters
 
 10:50:48.685 [372] 10:50:48.685 [372] Projections | Score 0
 
 10:50:48.686 [373] 10:50:48.686 [373] Compute clusters | Execution time 0.0261995792
 10:50:48.686 [373] 388916
 
 10:50:48.690 [374] 10:50:48.690 [374] Log add | Projections | Hdbscan
 
 10:50:48.694 [375] 10:50:48.694 [375] Projections |prjs~(423, 3)-->
 
 10:50:48.695 [376] 10:50:48.695 [376]  projections_plot_comp || before highlight prj
 10:50:48.695 [376] s_~(423, 3)
 
 10:50:48.696 [377] 10:50:48.696 [377]  projections_plot_comp || Cluster prjs_~(423, 
 10:50:48.696 [377] 4)
 
 10:50:48.696 [378] 10:50:48.696 [378] projections_plot_comp | GoGo Plot! 423
 
 10:50:48.696 [379] 10:50:48.696 [379] --> ggplot_base
 
 10:50:48.696 [380] 10:50:48.696 [380] ggplot_base -->
 
 10:50:48.700 [381] 10:50:48.700 [381] Update palete, unique_labels: -1
 
 10:50:48.725 [382] 10:50:48.725 [382] projections_plot_comp | Projections Plot time:
 10:50:48.725 [382]  0.0739023685455322
 
 10:50:48.728 [383] 10:50:48.728 [383] Log add | Projections Plot
 
 10:50:48.728 [384] 10:50:48.728 [384] output$projections_plot -->
 
 10:50:48.893 [385] 10:50:48.893 [385] --> embedding idx
 
 10:50:48.898 [386] 10:50:48.898 [386] embedding idx -->
 
 10:50:48.914 [387] 10:50:48.914 [387] ts_plot_dygraph || Before req| tsdf ?TRUE| prj
 10:50:48.914 [387] _object? TRUE| play ?TRUE| embs ?TRUE
 
 10:50:48.916 [388] 10:50:48.916 [388] **** ts_plot_dygraph ****
 
 10:50:48.916 [389] 10:50:48.916 [389] ts_plot_dygraph || ts_variables before ts_plot
 10:50:48.916 [389]  original = volume; preprocessed = volume_preprocessed; complete 
 10:50:48.916 [389] = volume, volume_preprocessed; selected = volume, volume_preproce
 10:50:48.916 [389] ssed
 
 10:50:49.009 [390] 10:50:49.009 [390] --> ts_plot | Before req 1 | wlen 17 | tsdf re
 10:50:49.009 [390] ady? TRUE
 
 10:50:49.011 [391] 10:50:49.011 [391] ts_plot || ts variables Before ts_plot_base or
 10:50:49.011 [391] iginal = volume; preprocessed = volume_preprocessed; complete = v
 10:50:49.011 [391] olume, volume_preprocessed; selected = volume, volume_preprocesse
 10:50:49.011 [391] d -->
 
 10:50:49.084 [392] 10:50:49.084 [392] --> ts_plot_base
 
 10:50:49.084 [393] 10:50:49.084 [393] ts_plot_base | start_date: 2004-01-01 end_date
 10:50:49.084 [393] : 2012-05-31
 
 10:50:49.085 [394] 10:50:49.085 [394] ts_plot_base | colnames before select | volume
 10:50:49.085 [394] , timeindex, volume_preprocessed, timeindex_preprocessed
 
 10:50:49.085 [395] 10:50:49.085 [395] ts_plot_base | ts_variables before select | or
 10:50:49.085 [395] iginal = volume; preprocessed = volume_preprocessed; complete = v
 10:50:49.085 [395] olume, volume_preprocessed; selected = volume, volume_preprocesse
 10:50:49.085 [395] d
 
 10:50:49.094 [396] 10:50:49.094 [396] ts_plot_base | colnames | volume, volume_prepr
 10:50:49.094 [396] ocessed
 
 10:50:49.095 [397] 10:50:49.095 [397] ts_plot_base | tsdf_xts time0.0106124877929688
 10:50:49.095 [397] 
 
 10:50:49.098 [398] 10:50:49.098 [398] Log add | Reactive X | SWV
 
 10:50:49.103 [399] 10:50:49.103 [399] ts_plot_base -->
 
 10:50:49.104 [400] 10:50:49.104 [400] ts_plot | bp
 
 10:50:49.104 [401] 10:50:49.104 [401] ts_plot | embedings idxs 
 
 10:50:49.104 [402] 10:50:49.104 [402] ts_plot | Before if
 
 10:50:49.105 [403] 10:50:49.105 [403] ts_plot | Else |  is null ids? FALSE embedding
 10:50:49.105 [403] _ids~0 | plot windows ?TRUE
 
 10:50:49.105 [404] 10:50:49.105 [404] ts plot | Execution time: 0.0941052436828613
 
 10:50:49.105 [405] 10:50:49.105 [405] ts plot | is null ts_plt ? FALSE
 
 10:50:49.106 [406] 10:50:49.106 [406] ts_plot -->
 
 10:50:49.106 [407] 10:50:49.106 [407] ts_plot_dygraph || ts_plot computed
 
 10:50:49.106 [408] 10:50:49.106 [408] ts_plot_dygraph || After callbacks
 
 10:50:49.107 [409] 10:50:49.107 [409] ts_plot dygraph | Execution_time: 0.1907474994
 10:50:49.107 [409] 65942
 
 10:50:49.120 [410] 10:50:49.120 [410] --> observe X | Before req | tsdf_ready TRUE |
 10:50:49.120 [410]  wlen 17 | stride 1 | allow update embs TRUE | play_prjs TRUE | t
 10:50:49.120 [410] sdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:50:49.121 [411] 10:50:49.121 [411] observe X | Update Sliding Window
 
 10:50:49.122 [412] 10:50:49.122 [412] observe X | wlen 17 | stride 1 | tsdf_ready() 
 10:50:49.122 [412] TRUE | ts_vars original = volume; preprocessed = volume_preproces
 10:50:49.122 [412] sed; complete = volume, volume_preprocessed; selected = volume, v
 10:50:49.122 [412] olume_preprocessed | Let's prepare data
 
 10:50:49.125 [413] 10:50:49.125 [413] observe X | SWV
 
 10:50:49.125 [414] 10:50:49.125 [414] Enc input | observe X | X already updated
 
 10:50:49.125 [415] 10:50:49.125 [415] observe X | SWV: 0.000398635864257812 secs 
 
 10:50:49.128 [416] 10:50:49.128 [416] Log add | observe X | SWV
 
 10:50:49.128 [417] 10:50:49.128 [417] observe X | Update sliding window | Exit 1 | e
 10:50:49.128 [417] nc_input~(423, 1, 17) | ts_variables original = volume; preproces
 10:50:49.128 [417] sed = volume_preprocessed; complete = volume, volume_preprocessed
 10:50:49.128 [417] ; selected = volume, volume_preprocessed-->
 
 10:50:49.133 [418] 10:50:49.133 [418] | JS PLOT RENDER | projections_plot, 2135
 
 10:50:49.135 [419] 10:50:49.135 [419] Log add | JS Plot Render projections_plot
 
 10:50:49.135 [420] 10:50:49.135 [420] | JS PLOT RENDER | ts_plot_dygraph, 891
 
 10:50:49.137 [421] 10:50:49.137 [421] Log add | JS Plot Render ts_plot_dygraph
 
 10:50:49.179 [422] 10:50:49.179 [422] | JS PLOT RENDER | projections_plot, 503
 
 10:50:49.181 [423] 10:50:49.181 [423] Log add | JS Plot Render projections_plot
 
 10:50:49.182 [424] 10:50:49.182 [424] | JS PLOT RENDER | ts_plot_dygraph, 494
 
 10:50:49.183 [425] 10:50:49.183 [425] Log add | JS Plot Render ts_plot_dygraph
 
 10:51:06.623 [426] 10:51:06.623 [426] Update prj graph
 
 10:51:06.645 [427] 10:51:06.645 [427] --> output$projections_plot
 
 10:51:06.646 [428] 10:51:06.646 [428]  projections_plot_comp || Before req | tsdf_re
 10:51:06.646 [428] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:51:06.646 [428] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:51:06.646 [428] 88 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 10:51:06.649 [429] 10:51:06.649 [429] --> projections_plot_comp
 
 10:51:06.650 [430] 10:51:06.650 [430] embs_comp_or_cached || Before req enc_input_re
 10:51:06.650 [430] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 10:51:06.650 [430] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 10:51:06.650 [430] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 10:51:06.650 [430] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 10:51:06.652 [431] 10:51:06.652 [431] -->|| reactiveVal_compute_or_cached || embs_co
 10:51:06.652 [431] mp || 
 
 10:51:06.652 [432] 10:51:06.652 [432] || reactiveVal_compute_or_cached || embs_comp 
 10:51:06.652 [432] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:51:06.652 [432] mall-embedding:v0, 17, 1, FALSE, FALSE, /home/macu/data/wandb_art
 10:51:06.652 [432] ifacts/-7635916990915258888
 
 10:51:06.653 [433] 10:51:06.653 [433] || reactiveVal_compute_or_cached || embs_comp 
 10:51:06.653 [433] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:51:06.653 [433] mall-embedding:v0, 17, 1, FALSE, FALSE, /home/macu/data/wandb_art
 10:51:06.653 [433] ifacts/-7635916990915258888
 
 10:51:06.653 [434] 10:51:06.653 [434] || reactiveVal_compute_or_cached || embs_comp 
 10:51:06.653 [434] ||  Use cached || null? FALSE || compute? || FALSE
 
 10:51:06.653 [435] 10:51:06.653 [435] || reactiveVal_compute_or_cached || embs_comp 
 10:51:06.653 [435] ||  compute? FALSE-->
 
 10:51:06.653 [436] 10:51:06.653 [436] embs_comp_or_cached || --> embs | compute_flag
 10:51:06.653 [436]  FALSE
 
 10:51:06.654 [437] 10:51:06.654 [437] embs_comp_or_cached || res ~423, 512
 
 10:51:06.654 [438] 10:51:06.654 [438] projections_plot_comp | embs? TRUE
 
 10:51:06.654 [439] 10:51:06.654 [439] --> embs_complete_cases
 
 10:51:06.655 [440] 10:51:06.655 [440] embs_complete_cases || Before complete cases e
 10:51:06.655 [440] mbs ~423, 512
 
 10:51:06.657 [441] 10:51:06.657 [441] embs_complete_cases || After complete cases em
 10:51:06.657 [441] bs ~423, 512
 
 10:51:06.658 [442] 10:51:06.658 [442] embs_complete_cases -->
 
 10:51:06.658 [443] 10:51:06.658 [443] projections_plot_comp | complete_cases? TRUE
 
 10:51:06.662 [444] 10:51:06.662 [444] projections_plot_comp | embs complete?TRUE
 
 10:51:06.662 [445] 10:51:06.662 [445]  projections_plot_comp || ts_variables:  origi
 10:51:06.662 [445] nal = volume; preprocessed = volume_preprocessed; complete = volu
 10:51:06.662 [445] me, volume_preprocessed; selected = volume, volume_preprocessed
 
 10:51:06.666 [446] 10:51:06.666 [446]  projections_plot_comp || before highlight prj
 10:51:06.666 [446] s_~(423, 3)
 
 10:51:06.666 [447] 10:51:06.666 [447]  projections_plot_comp || Cluster prjs_~(423, 
 10:51:06.666 [447] 4)
 
 10:51:06.666 [448] 10:51:06.666 [448] projections_plot_comp | GoGo Plot! 423
 
 10:51:06.667 [449] 10:51:06.667 [449] --> ggplot_base
 
 10:51:06.667 [450] 10:51:06.667 [450] ggplot_base -->
 
 10:51:06.694 [451] 10:51:06.694 [451] projections_plot_comp | Projections Plot time:
 10:51:06.694 [451]  0.0290265083312988
 
 10:51:06.697 [452] 10:51:06.697 [452] Log add | Projections Plot
 
 10:51:06.697 [453] 10:51:06.697 [453] output$projections_plot -->
 
 10:51:06.909 [454] 10:51:06.909 [454] | JS PLOT RENDER | projections_plot, 220
 
 10:51:06.912 [455] 10:51:06.912 [455] Log add | JS Plot Render projections_plot
 
 10:51:06.912 [456] 10:51:06.912 [456] | JS PLOT RENDER | ts_plot_dygraph, 494
 
 10:51:06.914 [457] 10:51:06.914 [457] Log add | JS Plot Render ts_plot_dygraph
 
 10:51:14.536 [458] 10:51:14.536 [458] --> eventReactive enc | load encoder 
 
 10:51:14.538 [459] 10:51:14.538 [459] eventReactive enc | load encoder | Check if th
 10:51:14.538 [459] e encoder file exists: /home/macu/data/wandb_artifacts/-760169688
 10:51:14.538 [459] 5029958941
 
 10:51:14.538 [460] 10:51:14.538 [460] eventReactive enc | load encoder -760169688502
 10:51:14.538 [460] 9958941 | --> Load from binary file 
 GPU | Used mem: 0
GPU | Used mem: 48
GPU | Memory Usage: [[90m--------------------[0m] [90m0%[0m
UMAP prjs~(423, 2)

 10:51:14.760 [461] 10:51:14.760 [461] eventReactive enc | load encoder | stride 2-->
 10:51:14.760 [461] 
 
 10:51:14.762 [462] 10:51:14.762 [462] --> preprocess dataset || play_flag TRUE tsdf 
 10:51:14.762 [462] ready TRUE tsdf_preprocessed ready TRUE
 
 10:51:14.762 [463] 10:51:14.762 [463] Preprocess dataset || input preprocess TRUE pl
 10:51:14.762 [463] ay_flag TRUE
 
 10:51:14.765 [464] 10:51:14.765 [464] -->|| reactiveVal_compute_or_cached || tsdf_pr
 10:51:14.765 [464] eprocessed || 
 
 10:51:14.766 [465] 10:51:14.766 [465] || reactiveVal_compute_or_cached || tsdf_prepr
 10:51:14.766 [465] ocessed || At least 1 param changed
 
 10:51:14.767 [466] 10:51:14.767 [466] || || reactiveVal_compute_or_cached || tsdf_pr
 10:51:14.767 [466] eprocessed ||  || | stride     | Old: 1                    | New:
 10:51:14.767 [466]  2                    |
 
 10:51:14.768 [467] 10:51:14.768 [467] || reactiveVal_compute_or_cached || tsdf_prepr
 10:51:14.768 [467] ocessed ||  compute? TRUE-->
 
 10:51:14.768 [468] 10:51:14.768 [468] Preprocess dataset || Compute flag TRUE
 
 10:51:14.768 [469] 10:51:14.768 [469] Preprocess dataset || Apply preprocessing | Co
 10:51:14.768 [469] lnames volume, timeindex | sections 0 | sections size 51
 
 10:51:14.769 [470] 10:51:14.769 [470] --> apply_preprocessing | colnames volume, tim
 10:51:14.769 [470] eindex
 
 10:51:14.770 [471] 10:51:14.770 [471] apply_preprocessing | Segmentation
 
 10:51:14.770 [472] 10:51:14.770 [472] --> apply_preprocessing_segments
 
 10:51:14.774 [473] 10:51:14.774 [473] apply_preprocessing -->
 
 10:51:14.782 [474] 10:51:14.782 [474] Preprocess dataset || tsdf_preprocessed~(440, 
 10:51:14.782 [474] 2)
 
 10:51:14.783 [475] 10:51:14.783 [475] Preprocess dataset   --> 
 
 10:51:14.786 [476] 10:51:14.786 [476] ts_plot_dygraph || Before req| tsdf ?TRUE| prj
 10:51:14.786 [476] _object? TRUE| play ?TRUE| embs ?TRUE
 
 10:51:14.788 [477] 10:51:14.788 [477] **** ts_plot_dygraph ****
 
 10:51:14.788 [478] 10:51:14.788 [478] ts_plot_dygraph || ts_variables before ts_plot
 10:51:14.788 [478]  original = volume; preprocessed = volume_preprocessed; complete 
 10:51:14.788 [478] = volume, volume_preprocessed; selected = volume, volume_preproce
 10:51:14.788 [478] ssed
 
 10:51:14.792 [479] 10:51:14.792 [479] --> ts_plot | Before req 1 | wlen 17 | tsdf re
 10:51:14.792 [479] ady? TRUE
 
 10:51:14.794 [480] 10:51:14.794 [480] ts_plot || ts variables Before ts_plot_base or
 10:51:14.794 [480] iginal = volume; preprocessed = volume_preprocessed; complete = v
 10:51:14.794 [480] olume, volume_preprocessed; selected = volume, volume_preprocesse
 10:51:14.794 [480] d -->
 
 10:51:14.797 [481] 10:51:14.797 [481] ts_plot | bp
 
 10:51:14.797 [482] 10:51:14.797 [482] ts_plot | embedings idxs 
 
 10:51:14.798 [483] 10:51:14.798 [483] ts_plot | Before if
 
 10:51:14.798 [484] 10:51:14.798 [484] ts_plot | Else |  is null ids? FALSE embedding
 10:51:14.798 [484] _ids~0 | plot windows ?TRUE
 
 10:51:14.799 [485] 10:51:14.799 [485] ts plot | Execution time: 0.00470566749572754
 
 10:51:14.799 [486] 10:51:14.799 [486] ts plot | is null ts_plt ? FALSE
 
 10:51:14.799 [487] 10:51:14.799 [487] ts_plot -->
 
 10:51:14.800 [488] 10:51:14.800 [488] ts_plot_dygraph || ts_plot computed
 
 10:51:14.800 [489] 10:51:14.800 [489] ts_plot_dygraph || After callbacks
 
 10:51:14.801 [490] 10:51:14.801 [490] ts_plot dygraph | Execution_time: 0.0121939182
 10:51:14.801 [490] 281494
 
 10:51:14.816 [491] 10:51:14.816 [491] --> observe X | Before req | tsdf_ready TRUE |
 10:51:14.816 [491]  wlen 17 | stride 2 | allow update embs TRUE | play_prjs TRUE | t
 10:51:14.816 [491] sdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:51:14.818 [492] 10:51:14.818 [492] observe X | Update Sliding Window
 
 10:51:14.818 [493] 10:51:14.818 [493] observe X | wlen 17 | stride 2 | tsdf_ready() 
 10:51:14.818 [493] TRUE | ts_vars original = volume; preprocessed = volume_preproces
 10:51:14.818 [493] sed; complete = volume, volume_preprocessed; selected = volume, v
 10:51:14.818 [493] olume_preprocessed | Let's prepare data
 
 10:51:14.822 [494] 10:51:14.822 [494] observe X | SWV
 
 10:51:14.822 [495] 10:51:14.822 [495]  Enc input | observe X | ts_variables original
 10:51:14.822 [495]  = volume; preprocessed = volume_preprocessed; complete = volume,
 10:51:14.822 [495]  volume_preprocessed; selected = volume, volume_preprocessed
 
 10:51:14.825 [496] 10:51:14.825 [496] Enc input | Update X
 
 10:51:14.825 [497] 10:51:14.825 [497] Enc input | ReactiveVal X | Update Sliding Win
 10:51:14.825 [497] dow
 
 10:51:14.826 [498] 10:51:14.826 [498] Enc input | observe X | wlen 17 | stride 2 | L
 10:51:14.826 [498] et's prepare data
 
 10:51:14.826 [499] 10:51:14.826 [499] Enc input | observe X | ts_ar - id QXJ0aWZhY3Q
 10:51:14.826 [499] 6MTM1MzgwNDc1OQ== - name gtrends_kohls:v0
 
 10:51:14.827 [500] 10:51:14.827 [500] Enc input | observe X | path: /home/macu/data/
 10:51:14.827 [500] wandb_artifacts/-7635916990915258888
 py function: prepare_forecasting_data: <function prepare_forecasting_data at 0x7f84d472c4c0>
--> Exec with feather | reading input from /home/macu/data/wandb_artifacts/-7635916990915258888
--> Exec with feather | Apply function /home/macu/data/wandb_artifacts/-7635916990915258888
Exec with feather | time: 0.0061151981353759766
Exec with feather --> /home/macu/data/wandb_artifacts/-7635916990915258888

 10:51:14.835 [501] 10:51:14.835 [501] Enc input | observe X | 1) enc_input~(423, 1, 
 10:51:14.835 [501] 17)
 
 10:51:14.836 [502] 10:51:14.836 [502] Enc input | observe X | 2)enc_input~(212, 1, 1
 10:51:14.836 [502] 7)
 
 10:51:14.836 [503] 10:51:14.836 [503] Enc input | observe X | Update sliding window 
 10:51:14.836 [503] | Apply stride 2 | X=enc_input~(212, 1, 17)
 
 10:51:14.842 [504] 10:51:14.842 [504] observe X | SWV: 0.0198080539703369 secs 
 
 10:51:14.845 [505] 10:51:14.845 [505] Log add | observe X | SWV
 
 10:51:14.846 [506] 10:51:14.846 [506] observe X | Update sliding window | Exit 2 | e
 10:51:14.846 [506] nc_input~(212, 1, 17) | ts_variables original = volume; preproces
 10:51:14.846 [506] sed = volume_preprocessed; complete = volume, volume_preprocessed
 10:51:14.846 [506] ; selected = volume, volume_preprocessed-->
 
 10:51:14.856 [507] 10:51:14.856 [507] --> output$projections_plot
 
 10:51:14.857 [508] 10:51:14.857 [508]  projections_plot_comp || Before req | tsdf_re
 10:51:14.857 [508] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:51:14.857 [508] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:51:14.857 [508] 88 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 10:51:14.861 [509] 10:51:14.861 [509] --> projections_plot_comp
 
 10:51:14.862 [510] 10:51:14.862 [510] embs_comp_or_cached || Before req enc_input_re
 10:51:14.862 [510] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 10:51:14.862 [510] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 10:51:14.862 [510] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 10:51:14.862 [510] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 10:51:14.863 [511] 10:51:14.863 [511] -->|| reactiveVal_compute_or_cached || embs_co
 10:51:14.863 [511] mp || 
 
 10:51:14.865 [512] 10:51:14.865 [512] || reactiveVal_compute_or_cached || embs_comp 
 10:51:14.865 [512] || At least 1 param changed
 
 10:51:14.865 [513] 10:51:14.865 [513] || || reactiveVal_compute_or_cached || embs_co
 10:51:14.865 [513] mp ||  || | stride     | Old: 1                    | New: 2      
 10:51:14.865 [513]               |
 
 10:51:14.867 [514] 10:51:14.867 [514] || reactiveVal_compute_or_cached || embs_comp 
 10:51:14.867 [514] ||  compute? TRUE-->
 
 10:51:14.867 [515] 10:51:14.867 [515] embs_comp_or_cached || --> embs | compute_flag
 10:51:14.867 [515]  TRUE
 
 10:51:14.867 [516] 10:51:14.867 [516] embs_comp || --> embs_comp | enc_input_ready T
 10:51:14.867 [516] RUE
 
 10:51:14.868 [517] 10:51:14.868 [517] embs_comp || tsdf ~ (440, 2)
 
 10:51:14.868 [518] 10:51:14.868 [518] embs_comp || X ~(212, 1, 17)
 
 10:51:14.868 [519] 10:51:14.868 [519] embs_comp ||get embeddings
 
 10:51:14.869 [520] 10:51:14.869 [520] embs_comp || get embeddings | Get batch size a
 10:51:14.869 [520] nd dataset
 
 10:51:15.223 [521] 10:51:15.223 [521] embs_comp || get embeddings (set stride set ba
 10:51:15.223 [521] tch size) | Stride 2 | batch size: 16 | stride: 2
 
 10:51:15.224 [522] 10:51:15.224 [522] embs_comp || get embeddings | Original stride:
 10:51:15.224 [522]  1
 
 10:51:15.224 [523] 10:51:15.224 [523] embs_comp || get embeddings (set stride set ba
 10:51:15.224 [523] tch size) | Chunk_size 10000000
 
 10:51:15.225 [524] 10:51:15.225 [524] embs_comp || get_enc_embs_set_stride_set_batch
 10:51:15.225 [524] _size | GPU | Before
 
 10:51:15.227 [525] 10:51:15.227 [525] embs_kwargs | Moment
 [1] --> get_enc_embs_set_stride_set_batch_size
[1] get_enc_embs_set_stride_set_batch_size | Moment | True
[1] get_acts_moment | Trial 1 | x_enc ~ torch.Size([212, 1, 17])
[1] get_acts_moment | Trial 1 | About to pad X (encoder input) | exception The size of tensor a (16) must match the size of tensor b (17) at non-singleton dimension 1 | padd step: 10
[1] get_acts_moment | Trial 1 | y ~ torch.Size([212, 1, 17])
[1] ------------------- Trial 1 | Padd -----------------
[1] get_acts_moment | Trial 2 | x_enc ~ torch.Size([212, 1, 27])
[1] get_acts_moment | Trial 2 | About to pad X (encoder input) | exception The size of tensor a (24) must match the size of tensor b (27) at non-singleton dimension 1 | padd step: 10
[1] get_acts_moment | Trial 2 | y ~ torch.Size([212, 1, 27])
[1] ------------------- Trial 2  -----------------
[1] ------------------- Trial 2 | a > a_old -----------------
[1] ------------------- Trial 2 |a > a_old | Reduced |  y ~ torch.Size([212, 1, 24]) -----------------
[1] get_acts_moment | Trial 3 | x_enc ~ torch.Size([212, 1, 24])
[1] get_acts_moment | Trial 3 | embs ~ torch.Size([212, 1, 3, 512])
[1] get_enc_embs_set_stride_set_batch_size | Before moving to CPU | embs~(212, 512)
[1] get_enc_embs_set_stride_set_batch_size | embs~(212, 512) -->

 10:51:15.380 [526] 10:51:15.380 [526] embs_comp || get_enc_embs_set_stride_set_batch
 10:51:15.380 [526] _size | GPU | After
 
 10:51:15.381 [527] 10:51:15.381 [527] embs_comp || get_enc_embs_set_stride_set_batch
 10:51:15.381 [527] _size embs ~ | 212

 10:51:15.381 [527] 10:51:15.381 [527] embs_comp || get_enc_embs_set_stride_set_batch
 10:51:15.381 [527] _size embs ~ | 512
 
 10:51:15.381 [528] 10:51:15.381 [528] get_enc_embs_set_stride_set_batch_size | GPU |
 10:51:15.381 [528]  total time: 0.51171350479126 secs thus 0.00852855841318766 mins 
 10:51:15.381 [528] | result ~212

 10:51:15.381 [528] 10:51:15.381 [528] get_enc_embs_set_stride_set_batch_size | GPU |
 10:51:15.381 [528]  total time: 0.51171350479126 secs thus 0.00852855841318766 mins 
 10:51:15.381 [528] | result ~512
 
 10:51:15.384 [529] 10:51:15.384 [529] Log add | Embeddings
 Garbage collection 115 = 91+6+18 (level 2) ... 
180.6 Mbytes of cons cells used (61%)
64.3 Mbytes of vectors used (57%)

 10:51:15.858 [530] 10:51:15.858 [530] embs_comp || get embeddings | 212 -->

 10:51:15.858 [530] 10:51:15.858 [530] embs_comp || get embeddings | 512 -->
 
 10:51:15.873 [531] 10:51:15.873 [531] embs_comp_or_cached || res ~212, 512
 
 10:51:15.874 [532] 10:51:15.874 [532] projections_plot_comp | embs? TRUE
 
 10:51:15.875 [533] 10:51:15.875 [533] --> embs_complete_cases
 
 10:51:15.875 [534] 10:51:15.875 [534] embs_complete_cases || Before complete cases e
 10:51:15.875 [534] mbs ~212, 512
 
 10:51:15.877 [535] 10:51:15.877 [535] embs_complete_cases || After complete cases em
 10:51:15.877 [535] bs ~423, 512
 
 10:51:15.878 [536] 10:51:15.878 [536] embs_complete_cases -->
 
 10:51:15.878 [537] 10:51:15.878 [537] projections_plot_comp | complete_cases? TRUE
 
 10:51:15.887 [538] 10:51:15.887 [538] projections_plot_comp | embs complete?TRUE
 
 10:51:15.888 [539] 10:51:15.888 [539]  projections_plot_comp || ts_variables:  origi
 10:51:15.888 [539] nal = volume; preprocessed = volume_preprocessed; complete = volu
 10:51:15.888 [539] me, volume_preprocessed; selected = volume, volume_preprocessed
 
 10:51:15.892 [540] 10:51:15.892 [540] projections || Before req | dr_method PCA_UMAP
 10:51:15.892 [540]  | tsdf ready TRUE | update embs TRUE | enc_input_ready? TRUE
 
 10:51:15.893 [541] 10:51:15.893 [541] --> projections
 
 10:51:15.893 [542] 10:51:15.893 [542] projections || before prjs
 
 10:51:15.894 [543] 10:51:15.894 [543] --> prj_object
 
 10:51:15.895 [544] 10:51:15.895 [544] prj_object || Before prjs_comp
 
 10:51:15.896 [545] 10:51:15.896 [545] prjs_comp | Before req || DR: PCA_UMAP || embs
 10:51:15.896 [545] ? TRUE
 
 10:51:15.897 [546] 10:51:15.897 [546] --> || prjs_comp || Before switch || DR method
 10:51:15.897 [546] : PCA_UMAP
 
 10:51:15.898 [547] 10:51:15.898 [547] prjs_pca_umap || Before req | embs complete ca
 10:51:15.898 [547] ses? TRUE
 
 10:51:15.899 [548] 10:51:15.899 [548] --> prjs_pca_umap
 [W] [10:51:15.902673] Warning(`fit`): As of v0.16, PCA invoked without an n_components argument defauts to using min(n_samples, n_features) rather than 1
PCA prjs~(212, 212)
GPU | Used mem: 0
GPU | Used mem: 48
GPU | Memory Usage: [[90m--------------------[0m] [90m0%[0m
-- cuml.UMAP -- False

 10:51:16.133 [549] 10:51:16.133 [549] prjs_pca_umap -->
 
 10:51:16.133 [550] 10:51:16.133 [550] prjs_comp | res ~212, 2-->
 
 10:51:16.134 [551] 10:51:16.134 [551] prj_object || After prjs_comp res~212

 10:51:16.134 [551] 10:51:16.134 [551] prj_object || After prjs_comp res~2
 
 10:51:16.134 [552] 10:51:16.134 [552] prj_object || cpu_flag: GPU | DR: PCA_UMAP | E
 10:51:16.134 [552] xecution time: 0.239421367645264 | prjs ~ 212 seconds

 10:51:16.134 [552] 10:51:16.134 [552] prj_object || cpu_flag: GPU | DR: PCA_UMAP | E
 10:51:16.134 [552] xecution time: 0.239421367645264 | prjs ~ 2 seconds
 
 10:51:16.136 [553] 10:51:16.136 [553] prj_object -->
 
 10:51:16.138 [554] 10:51:16.138 [554] Log add | PRJ Object
 
 10:51:16.138 [555] 10:51:16.138 [555] projections || Compute clusters? calculate_clu
 10:51:16.138 [555] sters
 
 10:51:16.152 [556] 10:51:16.152 [556] Projections | Score 0
 
 10:51:16.154 [557] 10:51:16.154 [557] Compute clusters | Execution time 0.0148577690
 10:51:16.154 [557] 124512
 
 10:51:16.156 [558] 10:51:16.156 [558] Log add | Projections | Hdbscan
 
 10:51:16.161 [559] 10:51:16.161 [559] Projections |prjs~(212, 3)-->
 
 10:51:16.161 [560] 10:51:16.161 [560]  projections_plot_comp || before highlight prj
 10:51:16.161 [560] s_~(212, 3)
 
 10:51:16.162 [561] 10:51:16.162 [561]  projections_plot_comp || Cluster prjs_~(212, 
 10:51:16.162 [561] 4)
 
 10:51:16.162 [562] 10:51:16.162 [562] projections_plot_comp | GoGo Plot! 212
 
 10:51:16.163 [563] 10:51:16.163 [563] --> ggplot_base
 
 10:51:16.163 [564] 10:51:16.163 [564] ggplot_base -->
 
 10:51:16.167 [565] 10:51:16.167 [565] Update palete, unique_labels: -1
 
 10:51:16.192 [566] 10:51:16.192 [566] projections_plot_comp | Projections Plot time:
 10:51:16.192 [566]  0.301186561584473
 
 10:51:16.195 [567] 10:51:16.195 [567] Log add | Projections Plot
 
 10:51:16.196 [568] 10:51:16.196 [568] output$projections_plot -->
 
 10:51:16.361 [569] 10:51:16.361 [569] --> preprocess dataset || play_flag TRUE tsdf 
 10:51:16.361 [569] ready TRUE tsdf_preprocessed ready TRUE
 
 10:51:16.361 [570] 10:51:16.361 [570] Preprocess dataset || input preprocess TRUE pl
 10:51:16.361 [570] ay_flag TRUE
 
 10:51:16.363 [571] 10:51:16.363 [571] -->|| reactiveVal_compute_or_cached || tsdf_pr
 10:51:16.363 [571] eprocessed || 
 
 10:51:16.364 [572] 10:51:16.364 [572] || reactiveVal_compute_or_cached || tsdf_prepr
 10:51:16.364 [572] ocessed ||  Use cached || params_prev gtrends_kohls:v0, 17, 2, se
 10:51:16.364 [572] gments, NULL, NULL, range_normalization, NULL
 
 10:51:16.364 [573] 10:51:16.364 [573] || reactiveVal_compute_or_cached || tsdf_prepr
 10:51:16.364 [573] ocessed ||  Use cached || params_prev gtrends_kohls:v0, 17, 2, se
 10:51:16.364 [573] gments, NULL, NULL, range_normalization, NULL
 
 10:51:16.365 [574] 10:51:16.365 [574] || reactiveVal_compute_or_cached || tsdf_prepr
 10:51:16.365 [574] ocessed ||  Use cached || null? FALSE || compute? || FALSE
 
 10:51:16.365 [575] 10:51:16.365 [575] || reactiveVal_compute_or_cached || tsdf_prepr
 10:51:16.365 [575] ocessed ||  compute? FALSE-->
 
 10:51:16.365 [576] 10:51:16.365 [576] Preprocess dataset || Compute flag FALSE
 
 10:51:16.365 [577] 10:51:16.365 [577] Preprocess dataset || Use cached values 
 
 10:51:16.365 [578] 10:51:16.365 [578] Preprocess dataset || tsdf_preprocessed~(440, 
 10:51:16.365 [578] 2)
 
 10:51:16.366 [579] 10:51:16.366 [579] Preprocess dataset   --> 
 
 10:51:16.367 [580] 10:51:16.367 [580] --> observe X | Before req | tsdf_ready TRUE |
 10:51:16.367 [580]  wlen 17 | stride 2 | allow update embs TRUE | play_prjs TRUE | t
 10:51:16.367 [580] sdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:51:16.369 [581] 10:51:16.369 [581] observe X | Update Sliding Window
 
 10:51:16.369 [582] 10:51:16.369 [582] observe X | wlen 17 | stride 2 | tsdf_ready() 
 10:51:16.369 [582] TRUE | ts_vars original = volume; preprocessed = volume_preproces
 10:51:16.369 [582] sed; complete = volume, volume_preprocessed; selected = volume, v
 10:51:16.369 [582] olume_preprocessed | Let's prepare data
 
 10:51:16.372 [583] 10:51:16.372 [583] observe X | SWV
 
 10:51:16.372 [584] 10:51:16.372 [584] Enc input | observe X | X already updated
 
 10:51:16.373 [585] 10:51:16.373 [585] observe X | SWV: 0.000398159027099609 secs 
 
 10:51:16.375 [586] 10:51:16.375 [586] Log add | observe X | SWV
 
 10:51:16.376 [587] 10:51:16.376 [587] observe X | Update sliding window | Exit 2 | e
 10:51:16.376 [587] nc_input~(212, 1, 17) | ts_variables original = volume; preproces
 10:51:16.376 [587] sed = volume_preprocessed; complete = volume, volume_preprocessed
 10:51:16.376 [587] ; selected = volume, volume_preprocessed-->
 
 10:51:16.384 [588] 10:51:16.384 [588] --> output$projections_plot
 
 10:51:16.385 [589] 10:51:16.385 [589]  projections_plot_comp || Before req | tsdf_re
 10:51:16.385 [589] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:51:16.385 [589] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:51:16.385 [589] 88 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 10:51:16.388 [590] 10:51:16.388 [590] --> projections_plot_comp
 
 10:51:16.389 [591] 10:51:16.389 [591] embs_comp_or_cached || Before req enc_input_re
 10:51:16.389 [591] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 10:51:16.389 [591] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 10:51:16.389 [591] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 10:51:16.389 [591] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 10:51:16.390 [592] 10:51:16.390 [592] -->|| reactiveVal_compute_or_cached || embs_co
 10:51:16.390 [592] mp || 
 
 10:51:16.391 [593] 10:51:16.391 [593] || reactiveVal_compute_or_cached || embs_comp 
 10:51:16.391 [593] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:51:16.391 [593] mall-embedding:v0, 17, 2, FALSE, FALSE, /home/macu/data/wandb_art
 10:51:16.391 [593] ifacts/-7635916990915258888
 
 10:51:16.391 [594] 10:51:16.391 [594] || reactiveVal_compute_or_cached || embs_comp 
 10:51:16.391 [594] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:51:16.391 [594] mall-embedding:v0, 17, 2, FALSE, FALSE, /home/macu/data/wandb_art
 10:51:16.391 [594] ifacts/-7635916990915258888
 
 10:51:16.392 [595] 10:51:16.392 [595] || reactiveVal_compute_or_cached || embs_comp 
 10:51:16.392 [595] ||  Use cached || null? FALSE || compute? || FALSE
 
 10:51:16.392 [596] 10:51:16.392 [596] || reactiveVal_compute_or_cached || embs_comp 
 10:51:16.392 [596] ||  compute? FALSE-->
 
 10:51:16.392 [597] 10:51:16.392 [597] embs_comp_or_cached || --> embs | compute_flag
 10:51:16.392 [597]  FALSE
 
 10:51:16.392 [598] 10:51:16.392 [598] embs_comp_or_cached || res ~212, 512
 
 10:51:16.392 [599] 10:51:16.392 [599] projections_plot_comp | embs? TRUE
 
 10:51:16.393 [600] 10:51:16.393 [600] --> embs_complete_cases
 
 10:51:16.393 [601] 10:51:16.393 [601] embs_complete_cases || Before complete cases e
 10:51:16.393 [601] mbs ~212, 512
 
 10:51:16.395 [602] 10:51:16.395 [602] embs_complete_cases || After complete cases em
 10:51:16.395 [602] bs ~212, 512
 
 10:51:16.395 [603] 10:51:16.395 [603] embs_complete_cases -->
 
 10:51:16.395 [604] 10:51:16.395 [604] projections_plot_comp | complete_cases? TRUE
 
 10:51:16.397 [605] 10:51:16.397 [605] projections_plot_comp | embs complete?TRUE
 
 10:51:16.398 [606] 10:51:16.398 [606]  projections_plot_comp || ts_variables:  origi
 10:51:16.398 [606] nal = volume; preprocessed = volume_preprocessed; complete = volu
 10:51:16.398 [606] me, volume_preprocessed; selected = volume, volume_preprocessed
 
 10:51:16.401 [607] 10:51:16.401 [607]  projections_plot_comp || before highlight prj
 10:51:16.401 [607] s_~(212, 3)
 
 10:51:16.401 [608] 10:51:16.401 [608]  projections_plot_comp || Cluster prjs_~(212, 
 10:51:16.401 [608] 4)
 
 10:51:16.402 [609] 10:51:16.402 [609] projections_plot_comp | GoGo Plot! 212
 
 10:51:16.402 [610] 10:51:16.402 [610] --> ggplot_base
 
 10:51:16.402 [611] 10:51:16.402 [611] ggplot_base -->
 
 10:51:16.429 [612] 10:51:16.429 [612] projections_plot_comp | Projections Plot time:
 10:51:16.429 [612]  0.0288324356079102
 
 10:51:16.432 [613] 10:51:16.432 [613] Log add | Projections Plot
 
 10:51:16.432 [614] 10:51:16.432 [614] output$projections_plot -->
 
 10:51:16.603 [615] 10:51:16.603 [615] --> embedding idx
 
 10:51:16.608 [616] 10:51:16.608 [616] embedding idx -->
 
 10:51:16.624 [617] 10:51:16.624 [617] ts_plot_dygraph || Before req| tsdf ?TRUE| prj
 10:51:16.624 [617] _object? TRUE| play ?TRUE| embs ?TRUE
 
 10:51:16.626 [618] 10:51:16.626 [618] **** ts_plot_dygraph ****
 
 10:51:16.626 [619] 10:51:16.626 [619] ts_plot_dygraph || ts_variables before ts_plot
 10:51:16.626 [619]  original = volume; preprocessed = volume_preprocessed; complete 
 10:51:16.626 [619] = volume, volume_preprocessed; selected = volume, volume_preproce
 10:51:16.626 [619] ssed
 
 10:51:16.629 [620] 10:51:16.629 [620] --> ts_plot | Before req 1 | wlen 17 | tsdf re
 10:51:16.629 [620] ady? TRUE
 
 10:51:16.631 [621] 10:51:16.631 [621] ts_plot || ts variables Before ts_plot_base or
 10:51:16.631 [621] iginal = volume; preprocessed = volume_preprocessed; complete = v
 10:51:16.631 [621] olume, volume_preprocessed; selected = volume, volume_preprocesse
 10:51:16.631 [621] d -->
 
 10:51:16.634 [622] 10:51:16.634 [622] ts_plot | bp
 
 10:51:16.634 [623] 10:51:16.634 [623] ts_plot | embedings idxs 
 
 10:51:16.634 [624] 10:51:16.634 [624] ts_plot | Before if
 
 10:51:16.635 [625] 10:51:16.635 [625] ts_plot | Else |  is null ids? FALSE embedding
 10:51:16.635 [625] _ids~0 | plot windows ?TRUE
 
 10:51:16.635 [626] 10:51:16.635 [626] ts plot | Execution time: 0.00429630279541016
 
 10:51:16.635 [627] 10:51:16.635 [627] ts plot | is null ts_plt ? FALSE
 
 10:51:16.636 [628] 10:51:16.636 [628] ts_plot -->
 
 10:51:16.636 [629] 10:51:16.636 [629] ts_plot_dygraph || ts_plot computed
 
 10:51:16.636 [630] 10:51:16.636 [630] ts_plot_dygraph || After callbacks
 
 10:51:16.637 [631] 10:51:16.637 [631] ts_plot dygraph | Execution_time: 0.0105915069
 10:51:16.637 [631] 580078
 
 10:51:16.693 [632] 10:51:16.693 [632] | JS PLOT RENDER | projections_plot, 2109
 
 10:51:16.696 [633] 10:51:16.696 [633] Log add | JS Plot Render projections_plot
 
 10:51:16.696 [634] 10:51:16.696 [634] | JS PLOT RENDER | ts_plot_dygraph, 2111
 
 10:51:16.698 [635] 10:51:16.698 [635] Log add | JS Plot Render ts_plot_dygraph
 
 10:51:45.252 [636] 10:51:45.252 [636] --> observe event calculate_clusters | update 
 10:51:45.252 [636] clusters_config
 
 10:51:45.270 [637] 10:51:45.270 [637] observe event calculate_clusters | update clus
 10:51:45.270 [637] ters_config -->
 
 10:51:45.276 [638] 10:51:45.276 [638] --> output$projections_plot
 
 10:51:45.277 [639] 10:51:45.277 [639]  projections_plot_comp || Before req | tsdf_re
 10:51:45.277 [639] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:51:45.277 [639] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:51:45.277 [639] 88 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 10:51:45.280 [640] 10:51:45.280 [640] --> projections_plot_comp
 
 10:51:45.281 [641] 10:51:45.281 [641] embs_comp_or_cached || Before req enc_input_re
 10:51:45.281 [641] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 10:51:45.281 [641] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 10:51:45.281 [641] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 10:51:45.281 [641] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 10:51:45.282 [642] 10:51:45.282 [642] -->|| reactiveVal_compute_or_cached || embs_co
 10:51:45.282 [642] mp || 
 
 10:51:45.283 [643] 10:51:45.283 [643] || reactiveVal_compute_or_cached || embs_comp 
 10:51:45.283 [643] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:51:45.283 [643] mall-embedding:v0, 17, 2, FALSE, FALSE, /home/macu/data/wandb_art
 10:51:45.283 [643] ifacts/-7635916990915258888
 
 10:51:45.283 [644] 10:51:45.283 [644] || reactiveVal_compute_or_cached || embs_comp 
 10:51:45.283 [644] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:51:45.283 [644] mall-embedding:v0, 17, 2, FALSE, FALSE, /home/macu/data/wandb_art
 10:51:45.283 [644] ifacts/-7635916990915258888
 
 10:51:45.283 [645] 10:51:45.283 [645] || reactiveVal_compute_or_cached || embs_comp 
 10:51:45.283 [645] ||  Use cached || null? FALSE || compute? || FALSE
 
 10:51:45.283 [646] 10:51:45.283 [646] || reactiveVal_compute_or_cached || embs_comp 
 10:51:45.283 [646] ||  compute? FALSE-->
 
 10:51:45.284 [647] 10:51:45.284 [647] embs_comp_or_cached || --> embs | compute_flag
 10:51:45.284 [647]  FALSE
 
 10:51:45.284 [648] 10:51:45.284 [648] embs_comp_or_cached || res ~212, 512
 
 10:51:45.284 [649] 10:51:45.284 [649] projections_plot_comp | embs? TRUE
 
 10:51:45.285 [650] 10:51:45.285 [650] --> embs_complete_cases
 
 10:51:45.285 [651] 10:51:45.285 [651] embs_complete_cases || Before complete cases e
 10:51:45.285 [651] mbs ~212, 512
 
 10:51:45.286 [652] 10:51:45.286 [652] embs_complete_cases || After complete cases em
 10:51:45.286 [652] bs ~212, 512
 
 10:51:45.287 [653] 10:51:45.287 [653] embs_complete_cases -->
 
 10:51:45.287 [654] 10:51:45.287 [654] projections_plot_comp | complete_cases? TRUE
 
 10:51:45.289 [655] 10:51:45.289 [655] projections_plot_comp | embs complete?TRUE
 
 10:51:45.289 [656] 10:51:45.289 [656]  projections_plot_comp || ts_variables:  origi
 10:51:45.289 [656] nal = volume; preprocessed = volume_preprocessed; complete = volu
 10:51:45.289 [656] me, volume_preprocessed; selected = volume, volume_preprocessed
 
 10:51:45.293 [657] 10:51:45.293 [657] projections || Before req | dr_method PCA_UMAP
 10:51:45.293 [657]  | tsdf ready TRUE | update embs TRUE | enc_input_ready? TRUE
 
 10:51:45.294 [658] 10:51:45.294 [658] --> projections
 
 10:51:45.294 [659] 10:51:45.294 [659] projections || before prjs
 
 10:51:45.295 [660] 10:51:45.295 [660] projections || Compute clusters? calculate_clu
 10:51:45.295 [660] sters
 
 10:51:45.310 [661] 10:51:45.310 [661] Projections | Score 0
 
 10:51:45.311 [662] 10:51:45.311 [662] Compute clusters | Execution time 0.0163235664
 10:51:45.311 [662] 367676
 
 10:51:45.314 [663] 10:51:45.314 [663] Log add | Projections | Hdbscan
 
 10:51:45.314 [664] 10:51:45.314 [664] Projections |prjs~(212, 3)-->
 
 10:51:45.315 [665] 10:51:45.315 [665]  projections_plot_comp || before highlight prj
 10:51:45.315 [665] s_~(212, 3)
 
 10:51:45.315 [666] 10:51:45.315 [666]  projections_plot_comp || Cluster prjs_~(212, 
 10:51:45.315 [666] 4)
 
 10:51:45.316 [667] 10:51:45.316 [667] projections_plot_comp | GoGo Plot! 212
 
 10:51:45.316 [668] 10:51:45.316 [668] --> ggplot_base
 
 10:51:45.316 [669] 10:51:45.316 [669] ggplot_base -->
 
 10:51:45.343 [670] 10:51:45.343 [670] projections_plot_comp | Projections Plot time:
 10:51:45.343 [670]  0.0514378547668457
 
 10:51:45.346 [671] 10:51:45.346 [671] Log add | Projections Plot
 
 10:51:45.347 [672] 10:51:45.347 [672] output$projections_plot -->
 
 10:51:45.541 [673] 10:51:45.541 [673] | JS PLOT RENDER | projections_plot, 235
 
 10:51:45.544 [674] 10:51:45.544 [674] Log add | JS Plot Render projections_plot
 
 10:51:45.545 [675] 10:51:45.545 [675] | JS PLOT RENDER | ts_plot_dygraph, 2111
 
 10:51:45.546 [676] 10:51:45.546 [676] Log add | JS Plot Render ts_plot_dygraph
 
 10:52:02.759 [677] 10:52:02.759 [677] --> observe event calculate_clusters | update 
 10:52:02.759 [677] clusters_config
 
 10:52:02.764 [678] 10:52:02.764 [678] observe event calculate_clusters | update clus
 10:52:02.764 [678] ters_config -->
 
 10:52:25.399 [679] 10:52:25.399 [679] --> observe input$embs_preprocess
 
 10:52:25.399 [680] 10:52:25.399 [680] observe input$embs_preprocess ||  || before re
 10:52:25.399 [680] q | input encoder zeroshot-moment-small-embedding:v0 | tsdf_ready
 10:52:25.399 [680] _preprocessed? TRUE | input$embs_preprocess TRUE
 
 10:52:25.404 [681] 10:52:25.404 [681] --> Enable/disable embs
 
 10:52:25.404 [682] 10:52:25.404 [682] Enable/disable embs || disable embs
 
 10:52:25.407 [683] 10:52:25.407 [683] Enable/disable embs --> || Changes to FALSE
 
 10:52:25.412 [684] 10:52:25.412 [684] --> Update play_pause_button_preprocessed
 
 10:52:25.415 [685] 10:52:25.415 [685] Update play_pause_button_preprocessed || FALSE
 10:52:25.415 [685]  -->
 
 10:52:25.446 [686] 10:52:25.446 [686] --> path_comp || 
 
 10:52:25.449 [687] 10:52:25.449 [687] path_comp || Preprocess /home/macu/data/wandb_
 10:52:25.449 [687] artifacts/-7635916990915258888_preprocess
 
 10:52:25.449 [688] 10:52:25.449 [688] path_comp || path /home/macu/data/wandb_artifa
 10:52:25.449 [688] cts/-7635916990915258888_preprocess
 
 10:52:25.451 [689] 10:52:25.451 [689] data_feather || Before check data types data ~
 10:52:25.451 [689]  440

 10:52:25.451 [689] 10:52:25.451 [689] data_feather || Before check data types data ~
 10:52:25.451 [689]  2
 [1] "data.frame"
'data.frame':	440 obs. of  2 variables:
 $ volume_preprocessed   : num  0.0909 0.0909 0.0909 0 0 ...
 $ timeindex_preprocessed: POSIXct, format: "2004-01-01" "2004-01-08" ...
NULL

 10:52:25.456 [690] 10:52:25.456 [690] data_feather || data ~ 440

 10:52:25.456 [690] 10:52:25.456 [690] data_feather || data ~ 2
 
 10:52:25.456 [691] 10:52:25.456 [691] data_feather || data$timeindex ~ 440
 
 10:52:25.456 [692] 10:52:25.456 [692] data_feather || data[[1]] ~ 440
 
 10:52:25.461 [693] 10:52:25.461 [693] data_feather || data$DataFrame  
 GPU | Used mem: 0
GPU | Used mem: 48
GPU | Memory Usage: [[90m--------------------[0m] [90m0%[0m
UMAP prjs~(212, 2)

 10:52:25.476 [694] 10:52:25.476 [694] data_feather || data ~ --> 440

 10:52:25.476 [694] 10:52:25.476 [694] data_feather || data ~ --> 1
 
 10:52:25.478 [695] 10:52:25.478 [695] path_comp || data~(440, 1)
 
 10:52:25.483 [696] 10:52:25.483 [696] path_comp || Preprocessed dataset saved at: /h
 10:52:25.483 [696] ome/macu/data/wandb_artifacts/-7635916990915258888_preprocess
 
 10:52:25.484 [697] 10:52:25.484 [697] path_comp --> || 
 
 10:52:25.486 [698] 10:52:25.486 [698] observe input$embs_preprocess || feather path:
 10:52:25.486 [698]  /home/macu/data/wandb_artifacts/-7635916990915258888_preprocess
 
 10:52:25.486 [699] 10:52:25.486 [699] observe input$embs_preprocess -->
 
 10:52:25.491 [700] 10:52:25.491 [700] --> observe X | Before req | tsdf_ready TRUE |
 10:52:25.491 [700]  wlen 17 | stride 2 | allow update embs FALSE | play_prjs FALSE |
 10:52:25.491 [700]  tsdf_ready_preprocessed TRUE | embs preprocess TRUE
 
 10:52:25.520 [701] 10:52:25.520 [701] ts_plot_dygraph || Before req| tsdf ?TRUE| prj
 10:52:25.520 [701] _object? TRUE| play ?FALSE| embs ?FALSE
 
 10:52:27.140 [702] 10:52:27.140 [702] --> observeEvent input$play_pause
 
 10:52:27.146 [703] 10:52:27.146 [703] --> Update play_pause_button
 
 10:52:27.163 [704] 10:52:27.163 [704] Update play_pause_button | --> compute tsdf
 [1] "TSDF READY A FALSE 3FALSE"

 10:52:27.276 [705] 10:52:27.276 [705] tsdf_comp || before req | Input encoder zerosh
 10:52:27.276 [705] ot-moment-small-embedding:v0 | Input dataset gtrends_kohls:v0 | t
 10:52:27.276 [705] s_ar TRUE
 
 10:52:27.278 [706] 10:52:27.278 [706] --> Reactive tsdf | ts artifact <Artifact QXJ0
 10:52:27.278 [706] aWZhY3Q6MTM1MzgwNDc1OQ==>
 
 10:52:27.279 [707] 10:52:27.279 [707] Reactive tsdf | Read feather /home/macu/data/w
 10:52:27.279 [707] andb_artifacts/-7635916990915258888
 
 10:52:27.279 [708] 10:52:27.279 [708] Reactive tsdf | Read feather | Before | /home/
 10:52:27.279 [708] macu/data/wandb_artifacts/-7635916990915258888
 
 10:52:27.288 [709] 10:52:27.288 [709] Reactive tsdf | Read feather | After | /home/m
 10:52:27.288 [709] acu/data/wandb_artifacts/-7635916990915258888
 
 10:52:27.288 [710] 10:52:27.288 [710] Reactive tsdf | Read feather | Load time: 0.00
 10:52:27.288 [710] 889873504638672 seconds | N elements: 440
 
 10:52:27.291 [711] 10:52:27.291 [711] Log add | TSDF | Load dataset | Read feather
 
 10:52:27.291 [712] 10:52:27.291 [712] Reactive tsdf | Execution time: 0.008898735046
 10:52:27.291 [712] 38672 seconds | df ~ 440time

 10:52:27.291 [712] 10:52:27.291 [712] Reactive tsdf | Execution time: 0.008898735046
 10:52:27.291 [712] 38672 seconds | df ~ 2time
 [1] "TSDF READY A 4 FALSE"

 10:52:27.299 [713] 10:52:27.299 [713] Reactive tsdf | ts_variables original = volume
 10:52:27.299 [713] ; preprocessed = volume_preprocessed; complete = volume, volume_p
 10:52:27.299 [713] reprocessed; selected = volume, volume_preprocessed ready? TRUE
 
 10:52:27.302 [714] 10:52:27.302 [714] Update play_pause_button || TRUE -->
 
 10:52:27.303 [715] 10:52:27.303 [715] observeEvent input$play_pause | Run -->
 
 10:52:27.305 [716] 10:52:27.305 [716] --> observe update ts variables (1) || Tsdf mo
 10:52:27.305 [716] dified
 
 10:52:27.305 [717] 10:52:27.305 [717]  --> tsdf_variables_preprocess
 
 10:52:27.308 [718] 10:52:27.308 [718] tsdf_variables_preprocess | original = volume;
 10:52:27.308 [718]  preprocessed = NULL; complete = volume; selected = volume-->
 
 10:52:27.314 [719] 10:52:27.314 [719]  observe update ts variables (1) || ts variabl
 10:52:27.314 [719] es original = volume; preprocessed = NULL; complete = volume; sel
 10:52:27.314 [719] ected = volume -->
 
 10:52:27.319 [720] 10:52:27.319 [720] ts_plot_dygraph || Before req| tsdf ?TRUE| prj
 10:52:27.319 [720] _object? TRUE| play ?TRUE| embs ?FALSE
 
 10:52:27.324 [721] 10:52:27.324 [721] --> update_preprocess_sliders
 
 10:52:27.324 [722] 10:52:27.324 [722] update_preprocess_sliders -->
 
 10:52:27.325 [723] 10:52:27.325 [723] --> propose sizes 
 
 10:52:27.329 [724] 10:52:27.329 [724] propose sizes || volume
 
 10:52:27.332 [725] 10:52:27.332 [725] propose sizes --> 
 
 10:52:27.332 [726] 10:52:27.332 [726] --> propose section sizes
 
 10:52:27.333 [727] 10:52:27.333 [727] Proposed section sizes: 3, 4, 6, 8, 9, 12, 15,
 10:52:27.333 [727]  16, 17, 19, 20, 24, 34, 36, 38, 48, 51, 57, 60, 68, 76, 85, 95
 
 10:52:27.336 [728] 10:52:27.336 [728] --> observe so_sections_count
 
 10:52:27.336 [729] 10:52:27.336 [729] observe so_sections_count -->
 
 10:52:27.338 [730] 10:52:27.338 [730] --> observe so_sections_size
 
 10:52:27.339 [731] 10:52:27.339 [731] observe so_sections_size -->
 
 10:52:27.340 [732] 10:52:27.340 [732] --> observe ss_text_rns
 
 10:52:27.341 [733] 10:52:27.341 [733] observe ss_text_rns -->
 
 10:52:27.342 [734] 10:52:27.342 [734] --> observe so_range_normalization_sections
 
 10:52:27.343 [735] 10:52:27.343 [735] observe so_range_normalization_sections -->
 
 10:52:27.344 [736] 10:52:27.344 [736] --> observe ss_range_normalization_sections
 
 10:52:27.344 [737] 10:52:27.344 [737] observe ss_range_normalization_sections -->
 
 10:52:27.346 [738] 10:52:27.346 [738] --> observe so_range_normalization_sections_si
 10:52:27.346 [738] ze
 
 10:52:27.348 [739] 10:52:27.348 [739] observe so_range_normalization_sections_size -
 10:52:27.348 [739] ->
 
 10:52:27.349 [740] 10:52:27.349 [740] --> observe ss_text_rnsz
 
 10:52:27.351 [741] 10:52:27.351 [741] observe ss_text_rnsz-->
 
 10:52:27.352 [742] 10:52:27.352 [742] --> observe ss_range_normalization_sections_si
 10:52:27.352 [742] ze
 
 10:52:27.353 [743] 10:52:27.353 [743] observe ss_range_normalization_sections_size -
 10:52:27.353 [743] ->
 
 10:52:27.355 [744] 10:52:27.355 [744] --> eventReactive enc | load encoder 
 
 10:52:27.356 [745] 10:52:27.356 [745] eventReactive enc | load encoder | Check if th
 10:52:27.356 [745] e encoder file exists: /home/macu/data/wandb_artifacts/-760169688
 10:52:27.356 [745] 5029958941
 
 10:52:27.357 [746] 10:52:27.357 [746] eventReactive enc | load encoder -760169688502
 10:52:27.357 [746] 9958941 | --> Load from binary file 
 
 10:52:27.577 [747] 10:52:27.577 [747] eventReactive enc | load encoder | stride 2-->
 10:52:27.577 [747] 
 
 10:52:27.578 [748] 10:52:27.578 [748] --> preprocess dataset || play_flag TRUE tsdf 
 10:52:27.578 [748] ready TRUE tsdf_preprocessed ready TRUE
 
 10:52:27.579 [749] 10:52:27.579 [749] Preprocess dataset || input preprocess TRUE pl
 10:52:27.579 [749] ay_flag TRUE
 
 10:52:27.581 [750] 10:52:27.581 [750] -->|| reactiveVal_compute_or_cached || tsdf_pr
 10:52:27.581 [750] eprocessed || 
 
 10:52:27.583 [751] 10:52:27.583 [751] || reactiveVal_compute_or_cached || tsdf_prepr
 10:52:27.583 [751] ocessed || First embedding computation, skipping cache
 
 10:52:27.584 [752] 10:52:27.584 [752] || reactiveVal_compute_or_cached || tsdf_prepr
 10:52:27.584 [752] ocessed ||  compute? TRUE-->
 
 10:52:27.584 [753] 10:52:27.584 [753] Preprocess dataset || Compute flag TRUE
 
 10:52:27.584 [754] 10:52:27.584 [754] Preprocess dataset || Apply preprocessing | Co
 10:52:27.584 [754] lnames volume, timeindex | sections 0 | sections size 51
 
 10:52:27.585 [755] 10:52:27.585 [755] --> apply_preprocessing | colnames volume, tim
 10:52:27.585 [755] eindex
 
 10:52:27.585 [756] 10:52:27.585 [756] apply_preprocessing | Segmentation
 
 10:52:27.586 [757] 10:52:27.586 [757] --> apply_preprocessing_segments
 
 10:52:27.589 [758] 10:52:27.589 [758] apply_preprocessing -->
 
 10:52:27.593 [759] 10:52:27.593 [759] Preprocess dataset || tsdf_preprocessed~(440, 
 10:52:27.593 [759] 2)
 
 10:52:27.593 [760] 10:52:27.593 [760] Preprocess dataset   --> 
 
 10:52:27.594 [761] 10:52:27.594 [761] --> observe X | Before req | tsdf_ready TRUE |
 10:52:27.594 [761]  wlen 17 | stride 2 | allow update embs FALSE | play_prjs FALSE |
 10:52:27.594 [761]  tsdf_ready_preprocessed TRUE | embs preprocess TRUE
 
 10:52:27.598 [762] 10:52:27.598 [762] ts_concatenated | colnames before concat | vol
 10:52:27.598 [762] ume, timeindex
 
 10:52:27.598 [763] 10:52:27.598 [763] ts_concatenated || ts variables Before concat 
 10:52:27.598 [763] original = volume; preprocessed = NULL; complete = volume; select
 10:52:27.598 [763] ed = volume
 
 10:52:27.601 [764] 10:52:27.601 [764] ts_concatenated | Concat preprocessed 
 
 10:52:27.601 [765] 10:52:27.601 [765] ts_concatenated | Before | Colnames volume, ti
 10:52:27.601 [765] meindex
 
 10:52:27.602 [766] 10:52:27.602 [766] --> concat preprocessed
 
 10:52:27.602 [767] 10:52:27.602 [767] concat preprocessed || Concat
 
 10:52:27.602 [768] 10:52:27.602 [768] || --> concat_datasets 
 
 10:52:27.602 [769] 10:52:27.602 [769]  --> filter_and_rename_dataset || Filter & ren
 10:52:27.602 [769] ame dataset dataset 1 | suffix:  | vars: 
 
 10:52:27.602 [770] 10:52:27.602 [770] filter_and_rename_dataset || Colnames dataset 
 10:52:27.602 [770] 1: volume, timeindex
 
 10:52:27.603 [771] 10:52:27.603 [771]  --> filter_and_rename_dataset || Filter & ren
 10:52:27.603 [771] ame dataset dataset 2 | suffix: _preprocessed | vars: 
 
 10:52:27.603 [772] 10:52:27.603 [772] filter_and_rename_dataset || Colnames dataset 
 10:52:27.603 [772] 2: volume_preprocessed, timeindex_preprocessed
 
 10:52:27.603 [773] 10:52:27.603 [773] || concat_datasets || Combine columns
 
 10:52:27.603 [774] 10:52:27.603 [774] || concat_datasets || Combine columns | datase
 10:52:27.603 [774] t1 colnames volume, || concat_datasets || Combine columns | datas
 10:52:27.603 [774] et1 colnames timeindex
 
 10:52:27.603 [775] 10:52:27.603 [775] || concat_datasets || Combine columns | datase
 10:52:27.603 [775] t2 colnames volume_preprocessed, || concat_datasets || Combine co
 10:52:27.603 [775] lumns | dataset2 colnames timeindex_preprocessed
 
 10:52:27.604 [776] 10:52:27.604 [776] concat_datasets || Colnames after merge: volum
 10:52:27.604 [776] e, timeindex, volume_preprocessed, timeindex_preprocessed
 
 10:52:27.605 [777] 10:52:27.605 [777] concat preprocessed --> || colnames volume, ti
 10:52:27.605 [777] meindex, volume_preprocessed, timeindex_preprocessed
 
 10:52:27.605 [778] 10:52:27.605 [778] ts_concatenated | tsdf preprocessed || ts vari
 10:52:27.605 [778] ables original = volume; preprocessed = NULL; complete = volume; 
 10:52:27.605 [778] selected = volume
 
 10:52:27.608 [779] 10:52:27.608 [779] ts_concatenated | tsdf preprocessed || colname
 10:52:27.608 [779] s volume, timeindex, volume_preprocessed, timeindex_preprocessed
 
 10:52:27.608 [780] 10:52:27.608 [780]  --> tsdf_variables_preprocess
 
 10:52:27.611 [781] 10:52:27.611 [781] tsdf_variables_preprocess | original = volume;
 10:52:27.611 [781]  preprocessed = volume_preprocessed; complete = volume, volume_pr
 10:52:27.611 [781] eprocessed; selected = volume, volume_preprocessed-->
 
 10:52:27.615 [782] 10:52:27.615 [782] ts_concatenated | ts variables || ts variables
 10:52:27.615 [782]  After concat: original = volume; preprocessed = volume_preproces
 10:52:27.615 [782] sed; complete = volume, volume_preprocessed; selected = volume, v
 10:52:27.615 [782] olume_preprocessed
 
 10:52:27.619 [783] 10:52:27.619 [783] --> observe update ts variables (1) || Tsdf mo
 10:52:27.619 [783] dified
 
 10:52:27.620 [784] 10:52:27.620 [784]  --> tsdf_variables_preprocess
 
 10:52:27.623 [785] 10:52:27.623 [785] tsdf_variables_preprocess | original = volume;
 10:52:27.623 [785]  preprocessed = volume_preprocessed; complete = volume, volume_pr
 10:52:27.623 [785] eprocessed; selected = volume, volume_preprocessed-->
 
 10:52:27.626 [786] 10:52:27.626 [786]  observe update ts variables (1) || ts variabl
 10:52:27.626 [786] es original = volume; preprocessed = volume_preprocessed; complet
 10:52:27.626 [786] e = volume, volume_preprocessed; selected = volume, volume_prepro
 10:52:27.626 [786] cessed -->
 
 10:52:27.630 [787] 10:52:27.630 [787] --> observeEvent ts_variables selected | updat
 10:52:27.630 [787] e select variables choices
 
 10:52:27.636 [788] 10:52:27.636 [788] observeEvent ts_variables selected | update se
 10:52:27.636 [788] lect variables choices | ts_variables:original = volume; preproce
 10:52:27.636 [788] ssed = volume_preprocessed; complete = volume, volume_preprocesse
 10:52:27.636 [788] d; selected = volume, volume_preprocessed -->
 
 10:52:27.640 [789] 10:52:27.640 [789] --> preprocess dataset || play_flag TRUE tsdf 
 10:52:27.640 [789] ready TRUE tsdf_preprocessed ready TRUE
 
 10:52:27.640 [790] 10:52:27.640 [790] Preprocess dataset || input preprocess TRUE pl
 10:52:27.640 [790] ay_flag TRUE
 
 10:52:27.642 [791] 10:52:27.642 [791] -->|| reactiveVal_compute_or_cached || tsdf_pr
 10:52:27.642 [791] eprocessed || 
 
 10:52:27.643 [792] 10:52:27.643 [792] || reactiveVal_compute_or_cached || tsdf_prepr
 10:52:27.643 [792] ocessed ||  Use cached || params_prev gtrends_kohls:v0, 17, 2, se
 10:52:27.643 [792] gments, NULL, NULL, range_normalization, NULL
 
 10:52:27.643 [793] 10:52:27.643 [793] || reactiveVal_compute_or_cached || tsdf_prepr
 10:52:27.643 [793] ocessed ||  Use cached || params_prev gtrends_kohls:v0, 17, 2, se
 10:52:27.643 [793] gments, NULL, NULL, range_normalization, NULL
 
 10:52:27.643 [794] 10:52:27.643 [794] || reactiveVal_compute_or_cached || tsdf_prepr
 10:52:27.643 [794] ocessed ||  Use cached || null? FALSE || compute? || FALSE
 
 10:52:27.644 [795] 10:52:27.644 [795] || reactiveVal_compute_or_cached || tsdf_prepr
 10:52:27.644 [795] ocessed ||  compute? FALSE-->
 
 10:52:27.644 [796] 10:52:27.644 [796] Preprocess dataset || Compute flag FALSE
 
 10:52:27.644 [797] 10:52:27.644 [797] Preprocess dataset || Use cached values 
 
 10:52:27.644 [798] 10:52:27.644 [798] Preprocess dataset || tsdf_preprocessed~(440, 
 10:52:27.644 [798] 2)
 
 10:52:27.645 [799] 10:52:27.645 [799] Preprocess dataset   --> 
 
 10:52:27.685 [800] 10:52:27.685 [800] --> observe ss_range_normalization_sections_si
 10:52:27.685 [800] ze
 
 10:52:27.689 [801] 10:52:27.689 [801] observe ss_range_normalization_sections_size -
 10:52:27.689 [801] ->
 
 10:52:28.507 [802] 10:52:28.507 [802] Play embs || Change button TRUE
 
 10:52:28.509 [803] 10:52:28.509 [803] --> Enable/disable embs
 
 10:52:28.509 [804] 10:52:28.509 [804] Enable/disable embs || enable embs
 
 10:52:28.512 [805] 10:52:28.512 [805] Enable/disable embs --> || Changes to TRUE
 
 10:52:28.513 [806] 10:52:28.513 [806] play_embs set to true, recompute projections_p
 10:52:28.513 [806] lot 
 
 10:52:28.514 [807] 10:52:28.514 [807]  projections_plot_comp || Before req | tsdf_re
 10:52:28.514 [807] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:52:28.514 [807] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:52:28.514 [807] 88_preprocess | enc_input_ready? FALSE | play prjs? TRUE | play? 
 10:52:28.514 [807] TRUE
 
 10:52:28.517 [808] 10:52:28.517 [808] Play embs || Changes to TRUE
 
 10:52:28.524 [809] 10:52:28.524 [809] --> output$projections_plot
 
 10:52:28.525 [810] 10:52:28.525 [810] output$projections_plot -->
 
 10:52:28.543 [811] 10:52:28.543 [811] ts_plot_dygraph || Before req| tsdf ?TRUE| prj
 10:52:28.543 [811] _object? TRUE| play ?TRUE| embs ?TRUE
 
 10:52:28.545 [812] 10:52:28.545 [812] **** ts_plot_dygraph ****
 
 10:52:28.545 [813] 10:52:28.545 [813] ts_plot_dygraph || ts_variables before ts_plot
 10:52:28.545 [813]  original = volume; preprocessed = volume_preprocessed; complete 
 10:52:28.545 [813] = volume, volume_preprocessed; selected = volume, volume_preproce
 10:52:28.545 [813] ssed
 
 10:52:28.549 [814] 10:52:28.549 [814] --> ts_plot | Before req 1 | wlen 17 | tsdf re
 10:52:28.549 [814] ady? TRUE
 
 10:52:28.550 [815] 10:52:28.550 [815] ts_plot || ts variables Before ts_plot_base or
 10:52:28.550 [815] iginal = volume; preprocessed = volume_preprocessed; complete = v
 10:52:28.550 [815] olume, volume_preprocessed; selected = volume, volume_preprocesse
 10:52:28.550 [815] d -->
 
 10:52:28.554 [816] 10:52:28.554 [816] --> ts_plot_base
 
 10:52:28.555 [817] 10:52:28.555 [817] ts_plot_base | start_date: 2004-01-01 end_date
 10:52:28.555 [817] : 2012-05-31
 
 10:52:28.555 [818] 10:52:28.555 [818] ts_plot_base | colnames before select | volume
 10:52:28.555 [818] , timeindex, volume_preprocessed, timeindex_preprocessed
 
 10:52:28.556 [819] 10:52:28.556 [819] ts_plot_base | ts_variables before select | or
 10:52:28.556 [819] iginal = volume; preprocessed = volume_preprocessed; complete = v
 10:52:28.556 [819] olume, volume_preprocessed; selected = volume, volume_preprocesse
 10:52:28.556 [819] d
 
 10:52:28.565 [820] 10:52:28.565 [820] ts_plot_base | colnames | volume, volume_prepr
 10:52:28.565 [820] ocessed
 
 10:52:28.566 [821] 10:52:28.566 [821] ts_plot_base | tsdf_xts time0.0106909275054932
 10:52:28.566 [821] 
 
 10:52:28.568 [822] 10:52:28.568 [822] Log add | Reactive X | SWV
 
 10:52:28.574 [823] 10:52:28.574 [823] ts_plot_base -->
 
 10:52:28.575 [824] 10:52:28.575 [824] ts_plot | bp
 
 10:52:28.575 [825] 10:52:28.575 [825] ts_plot | embedings idxs 
 
 10:52:28.575 [826] 10:52:28.575 [826] ts_plot | Before if
 
 10:52:28.576 [827] 10:52:28.576 [827] ts_plot | Else |  is null ids? FALSE embedding
 10:52:28.576 [827] _ids~0 | plot windows ?TRUE
 
 10:52:28.576 [828] 10:52:28.576 [828] ts plot | Execution time: 0.0259251594543457
 
 10:52:28.576 [829] 10:52:28.576 [829] ts plot | is null ts_plt ? FALSE
 
 10:52:28.577 [830] 10:52:28.577 [830] ts_plot -->
 
 10:52:28.577 [831] 10:52:28.577 [831] ts_plot_dygraph || ts_plot computed
 
 10:52:28.577 [832] 10:52:28.577 [832] ts_plot_dygraph || After callbacks
 
 10:52:28.578 [833] 10:52:28.578 [833] ts_plot dygraph | Execution_time: 0.0321080684
 10:52:28.578 [833] 661865
 
 10:52:28.592 [834] 10:52:28.592 [834] --> observe X | Before req | tsdf_ready TRUE |
 10:52:28.592 [834]  wlen 17 | stride 2 | allow update embs TRUE | play_prjs TRUE | t
 10:52:28.592 [834] sdf_ready_preprocessed TRUE | embs preprocess TRUE
 
 10:52:28.594 [835] 10:52:28.594 [835] observe X | Update Sliding Window
 
 10:52:28.594 [836] 10:52:28.594 [836] observe X | wlen 17 | stride 2 | tsdf_ready() 
 10:52:28.594 [836] TRUE | ts_vars original = volume; preprocessed = volume_preproces
 10:52:28.594 [836] sed; complete = volume, volume_preprocessed; selected = volume, v
 10:52:28.594 [836] olume_preprocessed | Let's prepare data
 
 10:52:28.597 [837] 10:52:28.597 [837] observe X | SWV
 
 10:52:28.598 [838] 10:52:28.598 [838]  Enc input | observe X | ts_variables original
 10:52:28.598 [838]  = volume; preprocessed = volume_preprocessed; complete = volume,
 10:52:28.598 [838]  volume_preprocessed; selected = volume, volume_preprocessed
 
 10:52:28.601 [839] 10:52:28.601 [839] Enc input | Update X
 
 10:52:28.601 [840] 10:52:28.601 [840] Enc input | ReactiveVal X | Update Sliding Win
 10:52:28.601 [840] dow
 
 10:52:28.601 [841] 10:52:28.601 [841] Enc input | observe X | wlen 17 | stride 2 | L
 10:52:28.601 [841] et's prepare data
 
 10:52:28.602 [842] 10:52:28.602 [842] Enc input | observe X | ts_ar - id QXJ0aWZhY3Q
 10:52:28.602 [842] 6MTM1MzgwNDc1OQ== - name gtrends_kohls:v0
 
 10:52:28.603 [843] 10:52:28.603 [843] --> path_comp || 
 
 10:52:28.605 [844] 10:52:28.605 [844] path_comp || Preprocess /home/macu/data/wandb_
 10:52:28.605 [844] artifacts/-7635916990915258888_preprocess
 
 10:52:28.605 [845] 10:52:28.605 [845] path_comp || path /home/macu/data/wandb_artifa
 10:52:28.605 [845] cts/-7635916990915258888_preprocess
 
 10:52:28.650 [846] 10:52:28.650 [846] data_feather || Before check data types data ~
 10:52:28.650 [846]  440

 10:52:28.650 [846] 10:52:28.650 [846] data_feather || Before check data types data ~
 10:52:28.650 [846]  2
 [1] "data.frame"
'data.frame':	440 obs. of  2 variables:
 $ volume_preprocessed   : num  0.0909 0.0909 0.0909 0 0 ...
 $ timeindex_preprocessed: POSIXct, format: "2004-01-01" "2004-01-08" ...
NULL

 10:52:28.655 [847] 10:52:28.655 [847] data_feather || data ~ 440

 10:52:28.655 [847] 10:52:28.655 [847] data_feather || data ~ 2
 
 10:52:28.655 [848] 10:52:28.655 [848] data_feather || data$timeindex ~ 440
 
 10:52:28.655 [849] 10:52:28.655 [849] data_feather || data[[1]] ~ 440
 
 10:52:28.660 [850] 10:52:28.660 [850] data_feather || data$DataFrame  
 
 10:52:28.671 [851] 10:52:28.671 [851] data_feather || data ~ --> 440

 10:52:28.671 [851] 10:52:28.671 [851] data_feather || data ~ --> 1
 
 10:52:28.671 [852] 10:52:28.671 [852] path_comp || data~(440, 1)
 
 10:52:28.675 [853] 10:52:28.675 [853] path_comp || Preprocessed dataset saved at: /h
 10:52:28.675 [853] ome/macu/data/wandb_artifacts/-7635916990915258888_preprocess
 
 10:52:28.675 [854] 10:52:28.675 [854] path_comp --> || 
 
 10:52:28.676 [855] 10:52:28.676 [855] Enc input | observe X | path: /home/macu/data/
 10:52:28.676 [855] wandb_artifacts/-7635916990915258888_preprocess
 py function: prepare_forecasting_data: <function prepare_forecasting_data at 0x7f84d472c4c0>
--> Exec with feather | reading input from /home/macu/data/wandb_artifacts/-7635916990915258888_preprocess
--> Exec with feather | Apply function /home/macu/data/wandb_artifacts/-7635916990915258888_preprocess
Exec with feather | time: 0.0030591487884521484
Exec with feather --> /home/macu/data/wandb_artifacts/-7635916990915258888_preprocess

 10:52:28.681 [856] 10:52:28.681 [856] Enc input | observe X | 1) enc_input~(423, 1, 
 10:52:28.681 [856] 17)
 
 10:52:28.681 [857] 10:52:28.681 [857] Enc input | observe X | 2)enc_input~(212, 1, 1
 10:52:28.681 [857] 7)
 
 10:52:28.681 [858] 10:52:28.681 [858] Enc input | observe X | Update sliding window 
 10:52:28.681 [858] | Apply stride 2 | X=enc_input~(212, 1, 17)
 
 10:52:28.689 [859] 10:52:28.689 [859] observe X | SWV: 0.0918114185333252 secs 
 
 10:52:28.692 [860] 10:52:28.692 [860] Log add | observe X | SWV
 
 10:52:28.693 [861] 10:52:28.693 [861] observe X | Update sliding window | Exit 2 | e
 10:52:28.693 [861] nc_input~(212, 1, 17) | ts_variables original = volume; preproces
 10:52:28.693 [861] sed = volume_preprocessed; complete = volume, volume_preprocessed
 10:52:28.693 [861] ; selected = volume, volume_preprocessed-->
 
 10:52:28.703 [862] 10:52:28.703 [862] --> output$projections_plot
 
 10:52:28.704 [863] 10:52:28.704 [863]  projections_plot_comp || Before req | tsdf_re
 10:52:28.704 [863] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:52:28.704 [863] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:52:28.704 [863] 88_preprocess | enc_input_ready? TRUE | play prjs? TRUE | play? T
 10:52:28.704 [863] RUE
 
 10:52:28.707 [864] 10:52:28.707 [864] --> projections_plot_comp
 
 10:52:28.708 [865] 10:52:28.708 [865] embs_comp_or_cached || Before req enc_input_re
 10:52:28.708 [865] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 10:52:28.708 [865] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 10:52:28.708 [865] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 10:52:28.708 [865] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 10:52:28.710 [866] 10:52:28.710 [866] -->|| reactiveVal_compute_or_cached || embs_co
 10:52:28.710 [866] mp || 
 
 10:52:28.711 [867] 10:52:28.711 [867] || reactiveVal_compute_or_cached || embs_comp 
 10:52:28.711 [867] || At least 1 param changed
 
 10:52:28.712 [868] 10:52:28.712 [868] || || reactiveVal_compute_or_cached || embs_co
 10:52:28.712 [868] mp ||  || | processed  | Old: FALSE                | New: TRUE   
 10:52:28.712 [868]               |
 
 10:52:28.712 [869] 10:52:28.712 [869] || || reactiveVal_compute_or_cached || embs_co
 10:52:28.712 [869] mp ||  || | path       | Old: /home/macu/data/wandb_artifacts/-76
 10:52:28.712 [869] 35916990915258888 | New: /home/macu/data/wandb_artifacts/-7635916
 10:52:28.712 [869] 990915258888_preprocess |
 
 10:52:28.713 [870] 10:52:28.713 [870] || reactiveVal_compute_or_cached || embs_comp 
 10:52:28.713 [870] ||  compute? TRUE-->
 
 10:52:28.713 [871] 10:52:28.713 [871] embs_comp_or_cached || --> embs | compute_flag
 10:52:28.713 [871]  TRUE
 
 10:52:28.714 [872] 10:52:28.714 [872] embs_comp || --> embs_comp | enc_input_ready T
 10:52:28.714 [872] RUE
 
 10:52:28.714 [873] 10:52:28.714 [873] embs_comp || tsdf ~ (440, 2)
 
 10:52:28.714 [874] 10:52:28.714 [874] embs_comp || X ~(212, 1, 17)
 
 10:52:28.714 [875] 10:52:28.714 [875] embs_comp ||get embeddings
 
 10:52:28.715 [876] 10:52:28.715 [876] embs_comp || get embeddings | Get batch size a
 10:52:28.715 [876] nd dataset
 
 10:52:29.080 [877] 10:52:29.080 [877] embs_comp || get embeddings (set stride set ba
 10:52:29.080 [877] tch size) | Stride 2 | batch size: 16 | stride: 2
 
 10:52:29.081 [878] 10:52:29.081 [878] embs_comp || get embeddings | Original stride:
 10:52:29.081 [878]  1
 
 10:52:29.081 [879] 10:52:29.081 [879] embs_comp || get embeddings (set stride set ba
 10:52:29.081 [879] tch size) | Chunk_size 10000000
 
 10:52:29.082 [880] 10:52:29.082 [880] embs_comp || get_enc_embs_set_stride_set_batch
 10:52:29.082 [880] _size | GPU | Before
 
 10:52:29.084 [881] 10:52:29.084 [881] embs_kwargs | Moment
 [1] --> get_enc_embs_set_stride_set_batch_size
[1] get_enc_embs_set_stride_set_batch_size | Moment | True
[1] get_acts_moment | Trial 1 | x_enc ~ torch.Size([212, 1, 17])
[1] get_acts_moment | Trial 1 | About to pad X (encoder input) | exception The size of tensor a (16) must match the size of tensor b (17) at non-singleton dimension 1 | padd step: 10
[1] get_acts_moment | Trial 1 | y ~ torch.Size([212, 1, 17])
[1] ------------------- Trial 1 | Padd -----------------
[1] get_acts_moment | Trial 2 | x_enc ~ torch.Size([212, 1, 27])
[1] get_acts_moment | Trial 2 | About to pad X (encoder input) | exception The size of tensor a (24) must match the size of tensor b (27) at non-singleton dimension 1 | padd step: 10
[1] get_acts_moment | Trial 2 | y ~ torch.Size([212, 1, 27])
[1] ------------------- Trial 2  -----------------
[1] ------------------- Trial 2 | a > a_old -----------------
[1] ------------------- Trial 2 |a > a_old | Reduced |  y ~ torch.Size([212, 1, 24]) -----------------
[1] get_acts_moment | Trial 3 | x_enc ~ torch.Size([212, 1, 24])
[1] get_acts_moment | Trial 3 | embs ~ torch.Size([212, 1, 3, 512])
[1] get_enc_embs_set_stride_set_batch_size | Before moving to CPU | embs~(212, 512)
[1] get_enc_embs_set_stride_set_batch_size | embs~(212, 512) -->

 10:52:29.232 [882] 10:52:29.232 [882] embs_comp || get_enc_embs_set_stride_set_batch
 10:52:29.232 [882] _size | GPU | After
 
 10:52:29.232 [883] 10:52:29.232 [883] embs_comp || get_enc_embs_set_stride_set_batch
 10:52:29.232 [883] _size embs ~ | 212

 10:52:29.232 [883] 10:52:29.232 [883] embs_comp || get_enc_embs_set_stride_set_batch
 10:52:29.232 [883] _size embs ~ | 512
 
 10:52:29.233 [884] 10:52:29.233 [884] get_enc_embs_set_stride_set_batch_size | GPU |
 10:52:29.233 [884]  total time: 0.517493724822998 secs thus 0.00862489541371663 mins
 10:52:29.233 [884]  | result ~212

 10:52:29.233 [884] 10:52:29.233 [884] get_enc_embs_set_stride_set_batch_size | GPU |
 10:52:29.233 [884]  total time: 0.517493724822998 secs thus 0.00862489541371663 mins
 10:52:29.233 [884]  | result ~512
 
 10:52:29.236 [885] 10:52:29.236 [885] Log add | Embeddings
 Garbage collection 118 = 93+6+19 (level 2) ... 
179.2 Mbytes of cons cells used (61%)
65.2 Mbytes of vectors used (58%)

 10:52:29.698 [886] 10:52:29.698 [886] embs_comp || get embeddings | 212 -->

 10:52:29.698 [886] 10:52:29.698 [886] embs_comp || get embeddings | 512 -->
 
 10:52:29.710 [887] 10:52:29.710 [887] embs_comp_or_cached || res ~212, 512
 
 10:52:29.711 [888] 10:52:29.711 [888] projections_plot_comp | embs? TRUE
 
 10:52:29.712 [889] 10:52:29.712 [889] --> embs_complete_cases
 
 10:52:29.712 [890] 10:52:29.712 [890] embs_complete_cases || Before complete cases e
 10:52:29.712 [890] mbs ~212, 512
 
 10:52:29.714 [891] 10:52:29.714 [891] embs_complete_cases || After complete cases em
 10:52:29.714 [891] bs ~212, 512
 
 10:52:29.715 [892] 10:52:29.715 [892] embs_complete_cases -->
 
 10:52:29.715 [893] 10:52:29.715 [893] projections_plot_comp | complete_cases? TRUE
 
 10:52:29.724 [894] 10:52:29.724 [894] projections_plot_comp | embs complete?TRUE
 
 10:52:29.725 [895] 10:52:29.725 [895]  projections_plot_comp || ts_variables:  origi
 10:52:29.725 [895] nal = volume; preprocessed = volume_preprocessed; complete = volu
 10:52:29.725 [895] me, volume_preprocessed; selected = volume, volume_preprocessed
 
 10:52:29.729 [896] 10:52:29.729 [896] projections || Before req | dr_method PCA_UMAP
 10:52:29.729 [896]  | tsdf ready TRUE | update embs TRUE | enc_input_ready? TRUE
 
 10:52:29.730 [897] 10:52:29.730 [897] --> projections
 
 10:52:29.731 [898] 10:52:29.731 [898] projections || before prjs
 
 10:52:29.732 [899] 10:52:29.732 [899] --> prj_object
 
 10:52:29.732 [900] 10:52:29.732 [900] prj_object || Before prjs_comp
 
 10:52:29.733 [901] 10:52:29.733 [901] prjs_comp | Before req || DR: PCA_UMAP || embs
 10:52:29.733 [901] ? TRUE
 
 10:52:29.734 [902] 10:52:29.734 [902] --> || prjs_comp || Before switch || DR method
 10:52:29.734 [902] : PCA_UMAP
 
 10:52:29.735 [903] 10:52:29.735 [903] prjs_pca_umap || Before req | embs complete ca
 10:52:29.735 [903] ses? TRUE
 
 10:52:29.737 [904] 10:52:29.737 [904] --> prjs_pca_umap
 [W] [10:52:29.739698] Warning(`fit`): As of v0.16, PCA invoked without an n_components argument defauts to using min(n_samples, n_features) rather than 1
PCA prjs~(212, 212)
GPU | Used mem: 0
GPU | Used mem: 48
GPU | Memory Usage: [[90m--------------------[0m] [90m0%[0m
-- cuml.UMAP -- False

 10:52:29.917 [905] 10:52:29.917 [905] prjs_pca_umap -->
 
 10:52:29.918 [906] 10:52:29.918 [906] prjs_comp | res ~212, 2-->
 
 10:52:29.918 [907] 10:52:29.918 [907] prj_object || After prjs_comp res~212

 10:52:29.918 [907] 10:52:29.918 [907] prj_object || After prjs_comp res~2
 
 10:52:29.919 [908] 10:52:29.919 [908] prj_object || cpu_flag: GPU | DR: PCA_UMAP | E
 10:52:29.919 [908] xecution time: 0.18667459487915 | prjs ~ 212 seconds

 10:52:29.919 [908] 10:52:29.919 [908] prj_object || cpu_flag: GPU | DR: PCA_UMAP | E
 10:52:29.919 [908] xecution time: 0.18667459487915 | prjs ~ 2 seconds
 
 10:52:29.920 [909] 10:52:29.920 [909] prj_object -->
 
 10:52:29.922 [910] 10:52:29.922 [910] Log add | PRJ Object
 
 10:52:29.923 [911] 10:52:29.923 [911] projections || Compute clusters? calculate_clu
 10:52:29.923 [911] sters
 
 10:52:29.936 [912] 10:52:29.936 [912] Projections | Score 0
 
 10:52:29.938 [913] 10:52:29.938 [913] Compute clusters | Execution time 0.0144028663
 10:52:29.938 [913] 635254
 
 10:52:29.940 [914] 10:52:29.940 [914] Log add | Projections | Hdbscan
 
 10:52:29.945 [915] 10:52:29.945 [915] Projections |prjs~(212, 3)-->
 
 10:52:29.945 [916] 10:52:29.945 [916]  projections_plot_comp || before highlight prj
 10:52:29.945 [916] s_~(212, 3)
 
 10:52:29.946 [917] 10:52:29.946 [917]  projections_plot_comp || Cluster prjs_~(212, 
 10:52:29.946 [917] 4)
 
 10:52:29.946 [918] 10:52:29.946 [918] projections_plot_comp | GoGo Plot! 212
 
 10:52:29.947 [919] 10:52:29.947 [919] --> ggplot_base
 
 10:52:29.947 [920] 10:52:29.947 [920] ggplot_base -->
 
 10:52:29.951 [921] 10:52:29.951 [921] Update palete, unique_labels: -1
 
 10:52:29.976 [922] 10:52:29.976 [922] projections_plot_comp | Projections Plot time:
 10:52:29.976 [922]  0.24780535697937
 
 10:52:29.979 [923] 10:52:29.979 [923] Log add | Projections Plot
 
 10:52:29.980 [924] 10:52:29.980 [924] output$projections_plot -->
 
 10:52:30.157 [925] 10:52:30.157 [925] --> observe X | Before req | tsdf_ready TRUE |
 10:52:30.157 [925]  wlen 17 | stride 2 | allow update embs TRUE | play_prjs TRUE | t
 10:52:30.157 [925] sdf_ready_preprocessed TRUE | embs preprocess TRUE
 
 10:52:30.159 [926] 10:52:30.159 [926] observe X | Update Sliding Window
 
 10:52:30.160 [927] 10:52:30.160 [927] observe X | wlen 17 | stride 2 | tsdf_ready() 
 10:52:30.160 [927] TRUE | ts_vars original = volume; preprocessed = volume_preproces
 10:52:30.160 [927] sed; complete = volume, volume_preprocessed; selected = volume, v
 10:52:30.160 [927] olume_preprocessed | Let's prepare data
 
 10:52:30.163 [928] 10:52:30.163 [928] observe X | SWV
 
 10:52:30.163 [929] 10:52:30.163 [929] Enc input | observe X | X already updated
 
 10:52:30.163 [930] 10:52:30.163 [930] observe X | SWV: 0.000405311584472656 secs 
 
 10:52:30.166 [931] 10:52:30.166 [931] Log add | observe X | SWV
 
 10:52:30.166 [932] 10:52:30.166 [932] observe X | Update sliding window | Exit 2 | e
 10:52:30.166 [932] nc_input~(212, 1, 17) | ts_variables original = volume; preproces
 10:52:30.166 [932] sed = volume_preprocessed; complete = volume, volume_preprocessed
 10:52:30.166 [932] ; selected = volume, volume_preprocessed-->
 
 10:52:30.175 [933] 10:52:30.175 [933] --> output$projections_plot
 
 10:52:30.176 [934] 10:52:30.176 [934]  projections_plot_comp || Before req | tsdf_re
 10:52:30.176 [934] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:52:30.176 [934] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:52:30.176 [934] 88_preprocess | enc_input_ready? TRUE | play prjs? TRUE | play? T
 10:52:30.176 [934] RUE
 
 10:52:30.179 [935] 10:52:30.179 [935] --> projections_plot_comp
 
 10:52:30.180 [936] 10:52:30.180 [936] embs_comp_or_cached || Before req enc_input_re
 10:52:30.180 [936] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 10:52:30.180 [936] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 10:52:30.180 [936] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 10:52:30.180 [936] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 10:52:30.181 [937] 10:52:30.181 [937] -->|| reactiveVal_compute_or_cached || embs_co
 10:52:30.181 [937] mp || 
 
 10:52:30.182 [938] 10:52:30.182 [938] || reactiveVal_compute_or_cached || embs_comp 
 10:52:30.182 [938] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:52:30.182 [938] mall-embedding:v0, 17, 2, FALSE, TRUE, /home/macu/data/wandb_arti
 10:52:30.182 [938] facts/-7635916990915258888_preprocess
 
 10:52:30.182 [939] 10:52:30.182 [939] || reactiveVal_compute_or_cached || embs_comp 
 10:52:30.182 [939] ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-s
 10:52:30.182 [939] mall-embedding:v0, 17, 2, FALSE, TRUE, /home/macu/data/wandb_arti
 10:52:30.182 [939] facts/-7635916990915258888_preprocess
 
 10:52:30.182 [940] 10:52:30.182 [940] || reactiveVal_compute_or_cached || embs_comp 
 10:52:30.182 [940] ||  Use cached || null? FALSE || compute? || FALSE
 
 10:52:30.183 [941] 10:52:30.183 [941] || reactiveVal_compute_or_cached || embs_comp 
 10:52:30.183 [941] ||  compute? FALSE-->
 
 10:52:30.183 [942] 10:52:30.183 [942] embs_comp_or_cached || --> embs | compute_flag
 10:52:30.183 [942]  FALSE
 
 10:52:30.183 [943] 10:52:30.183 [943] embs_comp_or_cached || res ~212, 512
 
 10:52:30.183 [944] 10:52:30.183 [944] projections_plot_comp | embs? TRUE
 
 10:52:30.184 [945] 10:52:30.184 [945] --> embs_complete_cases
 
 10:52:30.184 [946] 10:52:30.184 [946] embs_complete_cases || Before complete cases e
 10:52:30.184 [946] mbs ~212, 512
 
 10:52:30.186 [947] 10:52:30.186 [947] embs_complete_cases || After complete cases em
 10:52:30.186 [947] bs ~212, 512
 
 10:52:30.186 [948] 10:52:30.186 [948] embs_complete_cases -->
 
 10:52:30.186 [949] 10:52:30.186 [949] projections_plot_comp | complete_cases? TRUE
 
 10:52:30.188 [950] 10:52:30.188 [950] projections_plot_comp | embs complete?TRUE
 
 10:52:30.189 [951] 10:52:30.189 [951]  projections_plot_comp || ts_variables:  origi
 10:52:30.189 [951] nal = volume; preprocessed = volume_preprocessed; complete = volu
 10:52:30.189 [951] me, volume_preprocessed; selected = volume, volume_preprocessed
 
 10:52:30.192 [952] 10:52:30.192 [952]  projections_plot_comp || before highlight prj
 10:52:30.192 [952] s_~(212, 3)
 
 10:52:30.193 [953] 10:52:30.193 [953]  projections_plot_comp || Cluster prjs_~(212, 
 10:52:30.193 [953] 4)
 
 10:52:30.193 [954] 10:52:30.193 [954] projections_plot_comp | GoGo Plot! 212
 
 10:52:30.193 [955] 10:52:30.193 [955] --> ggplot_base
 
 10:52:30.193 [956] 10:52:30.193 [956] ggplot_base -->
 
 10:52:30.221 [957] 10:52:30.221 [957] projections_plot_comp | Projections Plot time:
 10:52:30.221 [957]  0.0288481712341309
 
 10:52:30.223 [958] 10:52:30.223 [958] Log add | Projections Plot
 
 10:52:30.224 [959] 10:52:30.224 [959] output$projections_plot -->
 
 10:52:30.405 [960] 10:52:30.405 [960] --> embedding idx
 
 10:52:30.411 [961] 10:52:30.411 [961] embedding idx -->
 
 10:52:30.426 [962] 10:52:30.426 [962] ts_plot_dygraph || Before req| tsdf ?TRUE| prj
 10:52:30.426 [962] _object? TRUE| play ?TRUE| embs ?TRUE
 
 10:52:30.428 [963] 10:52:30.428 [963] **** ts_plot_dygraph ****
 
 10:52:30.429 [964] 10:52:30.429 [964] ts_plot_dygraph || ts_variables before ts_plot
 10:52:30.429 [964]  original = volume; preprocessed = volume_preprocessed; complete 
 10:52:30.429 [964] = volume, volume_preprocessed; selected = volume, volume_preproce
 10:52:30.429 [964] ssed
 
 10:52:30.432 [965] 10:52:30.432 [965] --> ts_plot | Before req 1 | wlen 17 | tsdf re
 10:52:30.432 [965] ady? TRUE
 
 10:52:30.433 [966] 10:52:30.433 [966] ts_plot || ts variables Before ts_plot_base or
 10:52:30.433 [966] iginal = volume; preprocessed = volume_preprocessed; complete = v
 10:52:30.433 [966] olume, volume_preprocessed; selected = volume, volume_preprocesse
 10:52:30.433 [966] d -->
 
 10:52:30.436 [967] 10:52:30.436 [967] ts_plot | bp
 
 10:52:30.437 [968] 10:52:30.437 [968] ts_plot | embedings idxs 
 
 10:52:30.437 [969] 10:52:30.437 [969] ts_plot | Before if
 
 10:52:30.437 [970] 10:52:30.437 [970] ts_plot | Else |  is null ids? FALSE embedding
 10:52:30.437 [970] _ids~0 | plot windows ?TRUE
 
 10:52:30.438 [971] 10:52:30.438 [971] ts plot | Execution time: 0.00423932075500488
 
 10:52:30.438 [972] 10:52:30.438 [972] ts plot | is null ts_plt ? FALSE
 
 10:52:30.438 [973] 10:52:30.438 [973] ts_plot -->
 
 10:52:30.439 [974] 10:52:30.439 [974] ts_plot_dygraph || ts_plot computed
 
 10:52:30.439 [975] 10:52:30.439 [975] ts_plot_dygraph || After callbacks
 
 10:52:30.439 [976] 10:52:30.439 [976] ts_plot dygraph | Execution_time: 0.0104389190
 10:52:30.439 [976] 673828
 
 10:52:30.498 [977] 10:52:30.498 [977] | JS PLOT RENDER | projections_plot, 1929
 
 10:52:30.500 [978] 10:52:30.500 [978] Log add | JS Plot Render projections_plot
 
 10:52:30.501 [979] 10:52:30.501 [979] | JS PLOT RENDER | ts_plot_dygraph, 1930
 
 10:52:30.503 [980] 10:52:30.503 [980] Log add | JS Plot Render ts_plot_dygraph
 
 10:54:02.383 [981] 10:54:02.383 [981] --> observe event calculate_clusters | update 
 10:54:02.383 [981] clusters_config
 
 10:54:02.400 [982] 10:54:02.400 [982] observe event calculate_clusters | update clus
 10:54:02.400 [982] ters_config -->
 
 10:54:02.406 [983] 10:54:02.406 [983] --> output$projections_plot
 
 10:54:02.407 [984] 10:54:02.407 [984]  projections_plot_comp || Before req | tsdf_re
 10:54:02.407 [984] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 10:54:02.407 [984] nc_input_path? /home/macu/data/wandb_artifacts/-76359169909152588
 10:54:02.407 [984] 88 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 10:54:02.410 [985] 10:54:02.410 [985] --> projections_plot_comp
 
 10:54:02.411 [986] 10:54:02.411 [986] embs_comp_or_cached || Before req enc_input_re
 10:54:02.411 [986] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 10:54:02.411 [986] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 10:54:02.411 [986] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 10:54:02.411 [986] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 10:54:02.412 [987] 10:54:02.412 [987] -->|| reactiveVal_compute_or_cached || embs_co
 10:54:02.412 [987] mp || 
 
 10:54:02.413 [988] 10:54:02.413 [988] || reactiveVal_compute_or_cached || embs_comp 
 10:54:02.413 [988] ||  Use cached || params_prev gtrends_kohls:v0, mvp:v183, 17, 2, 
 10:54:02.413 [988] FALSE, FALSE
 
 10:54:02.413 [989] 10:54:02.413 [989] || reactiveVal_compute_or_cached || embs_comp 
 10:54:02.413 [989] ||  Use cached || params_prev gtrends_kohls:v0, mvp:v183, 17, 2, 
 10:54:02.413 [989] FALSE, FALSE
 
 10:54:02.413 [990] 10:54:02.413 [990] || reactiveVal_compute_or_cached || embs_comp 
 10:54:02.413 [990] ||  Use cached || null? FALSE || compute? || FALSE
 
 10:54:02.414 [991] 10:54:02.414 [991] || reactiveVal_compute_or_cached || embs_comp 
 10:54:02.414 [991] ||  compute? FALSE-->
 
 10:54:02.414 [992] 10:54:02.414 [992] embs_comp_or_cached || --> embs | compute_flag
 10:54:02.414 [992]  FALSE
 
 10:54:02.414 [993] 10:54:02.414 [993] embs_comp_or_cached || res ~212, 128
 
 10:54:02.414 [994] 10:54:02.414 [994] projections_plot_comp | embs?TRUE
 
 10:54:02.415 [995] 10:54:02.415 [995] projections_plot_comp | embs complete?TRUE
 
 10:54:02.416 [996] 10:54:02.416 [996]  projections_plot_comp || ts_variables:  origi
 10:54:02.416 [996] nal = volume; preprocessed = NULL; complete = volume; selected = 
 10:54:02.416 [996] volume
 
 10:54:02.419 [997] 10:54:02.419 [997] projections || Before req | dr_method PCA_UMAP
 10:54:02.419 [997]  | tsdf ready TRUE | update embs TRUE | enc_input_ready? TRUE
 
 10:54:02.420 [998] 10:54:02.420 [998] --> projections
 
 10:54:02.421 [999] 10:54:02.421 [999] projections || before prjs
 
 10:54:02.421 [1000] 10:54:02.421 [1000] projections || Compute clusters? calculate_cl
 10:54:02.421 [1000] usters
 
 10:54:02.441 [1001] 10:54:02.441 [1001] Projections | Score 0.654458870025679
 
 10:54:02.442 [1002] 10:54:02.442 [1002] Compute clusters | Execution time 0.021009683
 10:54:02.442 [1002] 6090088
 
 10:54:02.445 [1003] 10:54:02.445 [1003] Log add | Projections | Hdbscan
 
 10:54:02.449 [1004] 10:54:02.449 [1004] Projections |prjs~(212, 3)-->
 
 10:54:02.450 [1005] 10:54:02.450 [1005]  projections_plot_comp || before highlight pr
 10:54:02.450 [1005] js_~(212, 3)
 
 10:54:02.450 [1006] 10:54:02.450 [1006]  projections_plot_comp || Cluster prjs_~(212,
 10:54:02.450 [1006]  4)
 
 10:54:02.451 [1007] 10:54:02.451 [1007] projections_plot_comp | GoGo Plot! 212
 
 10:54:02.451 [1008] 10:54:02.451 [1008] --> ggplot_base
 
 10:54:02.451 [1009] 10:54:02.451 [1009] ggplot_base -->
 
 10:54:02.455 [1010] 10:54:02.455 [1010] Update palete, unique_labels: 2

 10:54:02.455 [1010] 10:54:02.455 [1010] Update palete, unique_labels: 1

 10:54:02.455 [1010] 10:54:02.455 [1010] Update palete, unique_labels: 0
 
 10:54:02.479 [1011] 10:54:02.479 [1011] projections_plot_comp | Projections Plot time
 10:54:02.479 [1011] : 0.060922384262085
 
 10:54:02.482 [1012] 10:54:02.482 [1012] Log add | Projections Plot
 
 10:54:02.482 [1013] 10:54:02.482 [1013] output$projections_plot -->
 
 10:54:02.645 [1014] 10:54:02.645 [1014] | JS PLOT RENDER | projections_plot, 207
 
 10:54:02.647 [1015] 10:54:02.647 [1015] Log add | JS Plot Render projections_plot
 
 10:54:02.648 [1016] 10:54:02.648 [1016] | JS PLOT RENDER | ts_plot_dygraph, 495
 
 10:54:02.649 [1017] 10:54:02.649 [1017] Log add | JS Plot Render ts_plot_dygraph
 
 10:54:16.438 [1018] 10:54:16.438 [1018] --> observe event calculate_clusters | update
 10:54:16.438 [1018]  clusters_config
 
 10:54:16.450 [1019] 10:54:16.450 [1019] observe event calculate_clusters | update clu
 10:54:16.450 [1019] sters_config -->
 
 10:54:16.456 [1020] 10:54:16.456 [1020] --> output$projections_plot
 
 10:54:16.457 [1021] 10:54:16.457 [1021]  projections_plot_comp || Before req | tsdf_r
 10:54:16.457 [1021] eady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | 
 10:54:16.457 [1021] enc_input_path? /home/macu/data/wandb_artifacts/-7635916990915258
 10:54:16.457 [1021] 888_preprocess | enc_input_ready? TRUE | play prjs? TRUE | play? 
 10:54:16.457 [1021] TRUE
 
 10:54:16.460 [1022] 10:54:16.460 [1022] --> projections_plot_comp
 
 10:54:16.461 [1023] 10:54:16.461 [1023] embs_comp_or_cached || Before req enc_input_r
 10:54:16.461 [1023] eady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE |
 10:54:16.461 [1023]  X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_p
 10:54:16.461 [1023] reprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproce
 10:54:16.461 [1023] ssed flag? TRUE
 [1] "embs_com_or_cached | after req"

 10:54:16.462 [1024] 10:54:16.462 [1024] -->|| reactiveVal_compute_or_cached || embs_c
 10:54:16.462 [1024] omp || 
 
 10:54:16.463 [1025] 10:54:16.463 [1025] || reactiveVal_compute_or_cached || embs_comp
 10:54:16.463 [1025]  ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-
 10:54:16.463 [1025] small-embedding:v0, 17, 2, FALSE, TRUE, /home/macu/data/wandb_art
 10:54:16.463 [1025] ifacts/-7635916990915258888_preprocess
 
 10:54:16.463 [1026] 10:54:16.463 [1026] || reactiveVal_compute_or_cached || embs_comp
 10:54:16.463 [1026]  ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-
 10:54:16.463 [1026] small-embedding:v0, 17, 2, FALSE, TRUE, /home/macu/data/wandb_art
 10:54:16.463 [1026] ifacts/-7635916990915258888_preprocess
 
 10:54:16.463 [1027] 10:54:16.463 [1027] || reactiveVal_compute_or_cached || embs_comp
 10:54:16.463 [1027]  ||  Use cached || null? FALSE || compute? || FALSE
 
 10:54:16.464 [1028] 10:54:16.464 [1028] || reactiveVal_compute_or_cached || embs_comp
 10:54:16.464 [1028]  ||  compute? FALSE-->
 
 10:54:16.464 [1029] 10:54:16.464 [1029] embs_comp_or_cached || --> embs | compute_fla
 10:54:16.464 [1029] g FALSE
 
 10:54:16.464 [1030] 10:54:16.464 [1030] embs_comp_or_cached || res ~212, 512
 
 10:54:16.464 [1031] 10:54:16.464 [1031] projections_plot_comp | embs? TRUE
 
 10:54:16.465 [1032] 10:54:16.465 [1032] --> embs_complete_cases
 
 10:54:16.465 [1033] 10:54:16.465 [1033] embs_complete_cases || Before complete cases 
 10:54:16.465 [1033] embs ~212, 512
 
 10:54:16.466 [1034] 10:54:16.466 [1034] embs_complete_cases || After complete cases e
 10:54:16.466 [1034] mbs ~212, 512
 
 10:54:16.467 [1035] 10:54:16.467 [1035] embs_complete_cases -->
 
 10:54:16.467 [1036] 10:54:16.467 [1036] projections_plot_comp | complete_cases? TRUE
 
 10:54:16.469 [1037] 10:54:16.469 [1037] projections_plot_comp | embs complete?TRUE
 
 10:54:16.469 [1038] 10:54:16.469 [1038]  projections_plot_comp || ts_variables:  orig
 10:54:16.469 [1038] inal = volume; preprocessed = volume_preprocessed; complete = vol
 10:54:16.469 [1038] ume, volume_preprocessed; selected = volume, volume_preprocessed
 
 10:54:16.473 [1039] 10:54:16.473 [1039] projections || Before req | dr_method PCA_UMA
 10:54:16.473 [1039] P | tsdf ready TRUE | update embs TRUE | enc_input_ready? TRUE
 
 10:54:16.474 [1040] 10:54:16.474 [1040] --> projections
 
 10:54:16.474 [1041] 10:54:16.474 [1041] projections || before prjs
 
 10:54:16.475 [1042] 10:54:16.475 [1042] projections || Compute clusters? calculate_cl
 10:54:16.475 [1042] usters
 
 10:54:16.487 [1043] 10:54:16.487 [1043] Projections | Score 0
 
 10:54:16.488 [1044] 10:54:16.488 [1044] Compute clusters | Execution time 0.013265609
 10:54:16.488 [1044] 7412109
 
 10:54:16.491 [1045] 10:54:16.491 [1045] Log add | Projections | Hdbscan
 
 10:54:16.491 [1046] 10:54:16.491 [1046] Projections |prjs~(212, 3)-->
 
 10:54:16.492 [1047] 10:54:16.492 [1047]  projections_plot_comp || before highlight pr
 10:54:16.492 [1047] js_~(212, 3)
 
 10:54:16.492 [1048] 10:54:16.492 [1048]  projections_plot_comp || Cluster prjs_~(212,
 10:54:16.492 [1048]  4)
 
 10:54:16.493 [1049] 10:54:16.493 [1049] projections_plot_comp | GoGo Plot! 212
 
 10:54:16.493 [1050] 10:54:16.493 [1050] --> ggplot_base
 
 10:54:16.493 [1051] 10:54:16.493 [1051] ggplot_base -->
 
 10:54:16.520 [1052] 10:54:16.520 [1052] projections_plot_comp | Projections Plot time
 10:54:16.520 [1052] : 0.0478353500366211
 
 10:54:16.522 [1053] 10:54:16.522 [1053] Log add | Projections Plot
 
 10:54:16.523 [1054] 10:54:16.523 [1054] output$projections_plot -->
 
 10:54:16.745 [1055] 10:54:16.745 [1055] | JS PLOT RENDER | projections_plot, 238
 
 10:54:16.747 [1056] 10:54:16.747 [1056] Log add | JS Plot Render projections_plot
 
 10:54:16.747 [1057] 10:54:16.747 [1057] | JS PLOT RENDER | ts_plot_dygraph, 1930
 
 10:54:16.749 [1058] 10:54:16.749 [1058] Log add | JS Plot Render ts_plot_dygraph
 
 10:54:21.866 [1059] 10:54:21.866 [1059] --> observe event calculate_clusters | update
 10:54:21.866 [1059]  clusters_config
 
 10:54:21.870 [1060] 10:54:21.870 [1060] observe event calculate_clusters | update clu
 10:54:21.870 [1060] sters_config -->
 
 10:56:48.695 [1061] 10:56:48.695 [1061] --> embedding idx
 
 10:56:48.701 [1062] 10:56:48.701 [1062] embedding idx -->
 
 10:56:48.702 [1063] 10:56:48.702 [1063] --> window_list
 
 10:56:48.703 [1064] 10:56:48.703 [1064] --> filtered_window_indices
 
 10:56:48.746 [1065] 10:56:48.746 [1065] || get_window_indices_ || prjs ~39
 
 10:56:48.746 [1066] 10:56:48.746 [1066] || get_window_indices_ || wlen 17
 
 10:56:48.746 [1067] 10:56:48.746 [1067] || get_window_indices_ || stride 2
 
 10:56:48.746 [1068] 10:56:48.746 [1068] || get_window_indices_ || sd 347
 
 10:56:48.747 [1069] 10:56:48.747 [1069] || get_window_indices_ || sd 349
 
 10:56:48.747 [1070] 10:56:48.747 [1070] || get_window_indices_ || sd 351
 
 10:56:48.747 [1071] 10:56:48.747 [1071] || get_window_indices_ || sd 353
 
 10:56:48.747 [1072] 10:56:48.747 [1072] || get_window_indices_ || sd 355
 
 10:56:48.747 [1073] 10:56:48.747 [1073] || get_window_indices_ || sd 357
 
 10:56:48.748 [1074] 10:56:48.748 [1074] || get_window_indices_ || sd 359
 
 10:56:48.748 [1075] 10:56:48.748 [1075] || get_window_indices_ || sd 361
 
 10:56:48.748 [1076] 10:56:48.748 [1076] || get_window_indices_ || sd 363
 
 10:56:48.748 [1077] 10:56:48.748 [1077] || get_window_indices_ || sd 365
 
 10:56:48.748 [1078] 10:56:48.748 [1078] || get_window_indices_ || sd 367
 
 10:56:48.749 [1079] 10:56:48.749 [1079] || get_window_indices_ || sd 369
 
 10:56:48.749 [1080] 10:56:48.749 [1080] || get_window_indices_ || sd 371
 
 10:56:48.749 [1081] 10:56:48.749 [1081] || get_window_indices_ || sd 373
 
 10:56:48.749 [1082] 10:56:48.749 [1082] || get_window_indices_ || sd 375
 
 10:56:48.750 [1083] 10:56:48.750 [1083] || get_window_indices_ || sd 377
 
 10:56:48.750 [1084] 10:56:48.750 [1084] || get_window_indices_ || sd 379
 
 10:56:48.750 [1085] 10:56:48.750 [1085] || get_window_indices_ || sd 381
 
 10:56:48.750 [1086] 10:56:48.750 [1086] || get_window_indices_ || sd 383
 
 10:56:48.750 [1087] 10:56:48.750 [1087] || get_window_indices_ || sd 385
 
 10:56:48.751 [1088] 10:56:48.751 [1088] || get_window_indices_ || sd 387
 
 10:56:48.751 [1089] 10:56:48.751 [1089] || get_window_indices_ || sd 389
 
 10:56:48.751 [1090] 10:56:48.751 [1090] || get_window_indices_ || sd 391
 
 10:56:48.751 [1091] 10:56:48.751 [1091] || get_window_indices_ || sd 393
 
 10:56:48.751 [1092] 10:56:48.751 [1092] || get_window_indices_ || sd 395
 
 10:56:48.752 [1093] 10:56:48.752 [1093] || get_window_indices_ || sd 397
 
 10:56:48.752 [1094] 10:56:48.752 [1094] || get_window_indices_ || sd 399
 
 10:56:48.752 [1095] 10:56:48.752 [1095] || get_window_indices_ || sd 401
 
 10:56:48.752 [1096] 10:56:48.752 [1096] || get_window_indices_ || sd 403
 
 10:56:48.752 [1097] 10:56:48.752 [1097] || get_window_indices_ || sd 405
 
 10:56:48.753 [1098] 10:56:48.753 [1098] || get_window_indices_ || sd 407
 
 10:56:48.753 [1099] 10:56:48.753 [1099] || get_window_indices_ || sd 409
 
 10:56:48.753 [1100] 10:56:48.753 [1100] || get_window_indices_ || sd 411
 
 10:56:48.753 [1101] 10:56:48.753 [1101] || get_window_indices_ || sd 413
 
 10:56:48.754 [1102] 10:56:48.754 [1102] || get_window_indices_ || sd 415
 
 10:56:48.754 [1103] 10:56:48.754 [1103] || get_window_indices_ || sd 417
 
 10:56:48.754 [1104] 10:56:48.754 [1104] || get_window_indices_ || sd 419
 
 10:56:48.754 [1105] 10:56:48.754 [1105] || get_window_indices_ || sd 421
 
 10:56:48.754 [1106] 10:56:48.754 [1106] || get_window_indices_ || sd 423
 
 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~347
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~348
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~349
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~350
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~351
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~352
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~353
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~354
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~355
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~356
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~357
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~358
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~359
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~360
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~361
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~362
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~363
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~364
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~365
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~366
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~367
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~368
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~369
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~370
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~371
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~372
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~373
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~374
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~375
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~376
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~377
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~378
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~379
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~380
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~381
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~382
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~383
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~384
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~385
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~386
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~387
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~388
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~389
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~390
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~391
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~392
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~393
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~394
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~395
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~396
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~397
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~398
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~399
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~400
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~401
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~402
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~403
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~404
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~405
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~406
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~407
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~408
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~409
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~410
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~411
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~412
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~413
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~414
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~415
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~416
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~417
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~418
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~419
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~420
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~421
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~422
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~423
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~424
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~425
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~426
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~427
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~428
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~429
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~430
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~431
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~432
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~433
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~434
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~435
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~436
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~437
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~438
 10:56:48.755 [1107] 

 10:56:48.755 [1107] 10:56:48.755 [1107] || get_window_indices_ || window_indices ~439
 10:56:48.755 [1107] 
 
 10:56:48.758 [1108] 10:56:48.758 [1108] filtered_window_indices -->
 
 10:56:48.759 [1109] 10:56:48.759 [1109] window_list -->
 
 10:56:48.829 [1110] 10:56:48.829 [1110] ts_plot_dygraph || Before req| tsdf ?TRUE| pr
 10:56:48.829 [1110] j_object? TRUE| play ?TRUE| embs ?TRUE
 
 10:56:48.831 [1111] 10:56:48.831 [1111] **** ts_plot_dygraph ****
 
 10:56:48.831 [1112] 10:56:48.831 [1112] ts_plot_dygraph || ts_variables before ts_plo
 10:56:48.831 [1112] t original = volume; preprocessed = NULL; complete = volume; sele
 10:56:48.831 [1112] cted = volume
 
 10:56:48.835 [1113] 10:56:48.835 [1113] --> ts_plot | Before req 1 | wlen 17 | tsdf r
 10:56:48.835 [1113] eady? TRUE
 
 10:56:48.836 [1114] 10:56:48.836 [1114] ts_plot || ts variables Before ts_plot_base o
 10:56:48.836 [1114] riginal = volume; preprocessed = NULL; complete = volume; selecte
 10:56:48.836 [1114] d = volume -->
 
 10:56:48.839 [1115] 10:56:48.839 [1115] ts_plot | bp
 
 10:56:48.839 [1116] 10:56:48.839 [1116] ts_plot | embedings idxs 
 
 10:56:48.840 [1117] 10:56:48.840 [1117] ts_plot | Before if
 
 10:56:48.841 [1118] 10:56:48.841 [1118] ts_plot | reduced_window_list (2010-08-262012
 10:56:48.841 [1118] -05-24)view size 92max size 10000
 
 10:56:48.841 [1119] 10:56:48.841 [1119] start_event_date2010-08-26
 
 10:56:48.842 [1120] 10:56:48.842 [1120] end_event_date2012-05-24
 
 10:56:48.843 [1121] 10:56:48.843 [1121] ts plot | Execution time: 0.00631928443908691
 10:56:48.843 [1121] 
 
 10:56:48.843 [1122] 10:56:48.843 [1122] ts plot | is null ts_plt ? FALSE
 
 10:56:48.843 [1123] 10:56:48.843 [1123] ts_plot -->
 
 10:56:48.843 [1124] 10:56:48.843 [1124] ts_plot_dygraph || ts_plot computed
 
 10:56:48.844 [1125] 10:56:48.844 [1125] ts_plot_dygraph || After callbacks
 
 10:56:48.844 [1126] 10:56:48.844 [1126] ts_plot dygraph | Execution_time: 0.012550592
 10:56:48.844 [1126] 4224854
 
 10:56:48.897 [1127] 10:56:48.897 [1127] | JS PLOT RENDER | projections_plot, 207
 
 10:56:48.899 [1128] 10:56:48.899 [1128] Log add | JS Plot Render projections_plot
 
 10:56:48.900 [1129] 10:56:48.900 [1129] | JS PLOT RENDER | ts_plot_dygraph, 133
 
 10:56:48.901 [1130] 10:56:48.901 [1130] Log add | JS Plot Render ts_plot_dygraph
 
 10:57:11.810 [1131] 10:57:11.810 [1131] --> embedding idx
 
 10:57:11.816 [1132] 10:57:11.816 [1132] embedding idx -->
 
 10:57:11.864 [1133] 10:57:11.864 [1133] --> window_list
 
 10:57:11.865 [1134] 10:57:11.865 [1134] --> filtered_window_indices
 
 10:57:11.866 [1135] 10:57:11.866 [1135] || get_window_indices_ || prjs ~64
 
 10:57:11.866 [1136] 10:57:11.866 [1136] || get_window_indices_ || wlen 17
 
 10:57:11.866 [1137] 10:57:11.866 [1137] || get_window_indices_ || stride 2
 
 10:57:11.867 [1138] 10:57:11.867 [1138] || get_window_indices_ || sd 187
 
 10:57:11.867 [1139] 10:57:11.867 [1139] || get_window_indices_ || sd 189
 
 10:57:11.867 [1140] 10:57:11.867 [1140] || get_window_indices_ || sd 191
 
 10:57:11.867 [1141] 10:57:11.867 [1141] || get_window_indices_ || sd 193
 
 10:57:11.867 [1142] 10:57:11.867 [1142] || get_window_indices_ || sd 195
 
 10:57:11.868 [1143] 10:57:11.868 [1143] || get_window_indices_ || sd 197
 
 10:57:11.868 [1144] 10:57:11.868 [1144] || get_window_indices_ || sd 199
 
 10:57:11.868 [1145] 10:57:11.868 [1145] || get_window_indices_ || sd 201
 
 10:57:11.868 [1146] 10:57:11.868 [1146] || get_window_indices_ || sd 203
 
 10:57:11.868 [1147] 10:57:11.868 [1147] || get_window_indices_ || sd 205
 
 10:57:11.869 [1148] 10:57:11.869 [1148] || get_window_indices_ || sd 239
 
 10:57:11.869 [1149] 10:57:11.869 [1149] || get_window_indices_ || sd 241
 
 10:57:11.869 [1150] 10:57:11.869 [1150] || get_window_indices_ || sd 243
 
 10:57:11.869 [1151] 10:57:11.869 [1151] || get_window_indices_ || sd 245
 
 10:57:11.870 [1152] 10:57:11.870 [1152] || get_window_indices_ || sd 247
 
 10:57:11.870 [1153] 10:57:11.870 [1153] || get_window_indices_ || sd 249
 
 10:57:11.870 [1154] 10:57:11.870 [1154] || get_window_indices_ || sd 251
 
 10:57:11.870 [1155] 10:57:11.870 [1155] || get_window_indices_ || sd 253
 
 10:57:11.870 [1156] 10:57:11.870 [1156] || get_window_indices_ || sd 255
 
 10:57:11.871 [1157] 10:57:11.871 [1157] || get_window_indices_ || sd 257
 
 10:57:11.871 [1158] 10:57:11.871 [1158] || get_window_indices_ || sd 259
 
 10:57:11.871 [1159] 10:57:11.871 [1159] || get_window_indices_ || sd 261
 
 10:57:11.871 [1160] 10:57:11.871 [1160] || get_window_indices_ || sd 263
 
 10:57:11.871 [1161] 10:57:11.871 [1161] || get_window_indices_ || sd 265
 
 10:57:11.872 [1162] 10:57:11.872 [1162] || get_window_indices_ || sd 267
 
 10:57:11.872 [1163] 10:57:11.872 [1163] || get_window_indices_ || sd 269
 
 10:57:11.872 [1164] 10:57:11.872 [1164] || get_window_indices_ || sd 271
 
 10:57:11.872 [1165] 10:57:11.872 [1165] || get_window_indices_ || sd 273
 
 10:57:11.872 [1166] 10:57:11.872 [1166] || get_window_indices_ || sd 275
 
 10:57:11.873 [1167] 10:57:11.873 [1167] || get_window_indices_ || sd 277
 
 10:57:11.873 [1168] 10:57:11.873 [1168] || get_window_indices_ || sd 279
 
 10:57:11.873 [1169] 10:57:11.873 [1169] || get_window_indices_ || sd 281
 
 10:57:11.873 [1170] 10:57:11.873 [1170] || get_window_indices_ || sd 283
 
 10:57:11.873 [1171] 10:57:11.873 [1171] || get_window_indices_ || sd 285
 
 10:57:11.874 [1172] 10:57:11.874 [1172] || get_window_indices_ || sd 287
 
 10:57:11.874 [1173] 10:57:11.874 [1173] || get_window_indices_ || sd 289
 
 10:57:11.874 [1174] 10:57:11.874 [1174] || get_window_indices_ || sd 291
 
 10:57:11.874 [1175] 10:57:11.874 [1175] || get_window_indices_ || sd 293
 
 10:57:11.874 [1176] 10:57:11.874 [1176] || get_window_indices_ || sd 295
 
 10:57:11.875 [1177] 10:57:11.875 [1177] || get_window_indices_ || sd 297
 
 10:57:11.875 [1178] 10:57:11.875 [1178] || get_window_indices_ || sd 299
 
 10:57:11.875 [1179] 10:57:11.875 [1179] || get_window_indices_ || sd 301
 
 10:57:11.875 [1180] 10:57:11.875 [1180] || get_window_indices_ || sd 303
 
 10:57:11.875 [1181] 10:57:11.875 [1181] || get_window_indices_ || sd 305
 
 10:57:11.876 [1182] 10:57:11.876 [1182] || get_window_indices_ || sd 307
 
 10:57:11.876 [1183] 10:57:11.876 [1183] || get_window_indices_ || sd 309
 
 10:57:11.876 [1184] 10:57:11.876 [1184] || get_window_indices_ || sd 311
 
 10:57:11.876 [1185] 10:57:11.876 [1185] || get_window_indices_ || sd 313
 
 10:57:11.876 [1186] 10:57:11.876 [1186] || get_window_indices_ || sd 315
 
 10:57:11.877 [1187] 10:57:11.877 [1187] || get_window_indices_ || sd 317
 
 10:57:11.877 [1188] 10:57:11.877 [1188] || get_window_indices_ || sd 319
 
 10:57:11.877 [1189] 10:57:11.877 [1189] || get_window_indices_ || sd 321
 
 10:57:11.877 [1190] 10:57:11.877 [1190] || get_window_indices_ || sd 323
 
 10:57:11.877 [1191] 10:57:11.877 [1191] || get_window_indices_ || sd 325
 
 10:57:11.878 [1192] 10:57:11.878 [1192] || get_window_indices_ || sd 327
 
 10:57:11.878 [1193] 10:57:11.878 [1193] || get_window_indices_ || sd 329
 
 10:57:11.878 [1194] 10:57:11.878 [1194] || get_window_indices_ || sd 331
 
 10:57:11.878 [1195] 10:57:11.878 [1195] || get_window_indices_ || sd 333
 
 10:57:11.879 [1196] 10:57:11.879 [1196] || get_window_indices_ || sd 335
 
 10:57:11.879 [1197] 10:57:11.879 [1197] || get_window_indices_ || sd 337
 
 10:57:11.879 [1198] 10:57:11.879 [1198] || get_window_indices_ || sd 339
 
 10:57:11.879 [1199] 10:57:11.879 [1199] || get_window_indices_ || sd 341
 
 10:57:11.879 [1200] 10:57:11.879 [1200] || get_window_indices_ || sd 343
 
 10:57:11.880 [1201] 10:57:11.880 [1201] || get_window_indices_ || sd 345
 
 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~187
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~188
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~189
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~190
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~191
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~192
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~193
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~194
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~195
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~196
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~197
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~198
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~199
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~200
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~201
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~202
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~203
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~204
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~205
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~206
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~207
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~208
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~209
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~210
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~211
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~212
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~213
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~214
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~215
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~216
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~217
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~218
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~219
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~220
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~221
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~239
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~240
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~241
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~242
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~243
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~244
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~245
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~246
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~247
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~248
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~249
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~250
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~251
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~252
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~253
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~254
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~255
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~256
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~257
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~258
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~259
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~260
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~261
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~262
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~263
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~264
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~265
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~266
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~267
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~268
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~269
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~270
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~271
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~272
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~273
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~274
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~275
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~276
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~277
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~278
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~279
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~280
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~281
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~282
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~283
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~284
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~285
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~286
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~287
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~288
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~289
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~290
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~291
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~292
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~293
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~294
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~295
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~296
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~297
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~298
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~299
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~300
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~301
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~302
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~303
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~304
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~305
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~306
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~307
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~308
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~309
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~310
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~311
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~312
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~313
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~314
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~315
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~316
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~317
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~318
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~319
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~320
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~321
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~322
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~323
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~324
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~325
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~326
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~327
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~328
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~329
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~330
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~331
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~332
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~333
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~334
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~335
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~336
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~337
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~338
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~339
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~340
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~341
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~342
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~343
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~344
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~345
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~346
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~347
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~348
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~349
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~350
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~351
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~352
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~353
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~354
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~355
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~356
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~357
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~358
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~359
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~360
 10:57:11.880 [1202] 

 10:57:11.880 [1202] 10:57:11.880 [1202] || get_window_indices_ || window_indices ~361
 10:57:11.880 [1202] 
 
 10:57:11.886 [1203] 10:57:11.886 [1203] filtered_window_indices -->
 
 10:57:11.887 [1204] 10:57:11.887 [1204] window_list -->
 
 10:57:11.918 [1205] 10:57:11.918 [1205] ts_plot_dygraph || Before req| tsdf ?TRUE| pr
 10:57:11.918 [1205] j_object? TRUE| play ?TRUE| embs ?TRUE
 
 10:57:11.920 [1206] 10:57:11.920 [1206] **** ts_plot_dygraph ****
 
 10:57:11.921 [1207] 10:57:11.921 [1207] ts_plot_dygraph || ts_variables before ts_plo
 10:57:11.921 [1207] t original = volume; preprocessed = NULL; complete = volume; sele
 10:57:11.921 [1207] cted = volume
 
 10:57:11.924 [1208] 10:57:11.924 [1208] --> ts_plot | Before req 1 | wlen 17 | tsdf r
 10:57:11.924 [1208] eady? TRUE
 
 10:57:11.925 [1209] 10:57:11.925 [1209] ts_plot || ts variables Before ts_plot_base o
 10:57:11.925 [1209] riginal = volume; preprocessed = NULL; complete = volume; selecte
 10:57:11.925 [1209] d = volume -->
 
 10:57:11.928 [1210] 10:57:11.928 [1210] ts_plot | bp
 
 10:57:11.928 [1211] 10:57:11.928 [1211] ts_plot | embedings idxs 
 
 10:57:11.929 [1212] 10:57:11.929 [1212] ts_plot | Before if
 
 10:57:11.930 [1213] 10:57:11.930 [1213] ts_plot | reduced_window_list (2007-08-022010
 10:57:11.930 [1213] -11-25)view size 174max size 10000
 
 10:57:11.930 [1214] 10:57:11.930 [1214] start_event_date2007-08-02
 
 10:57:11.931 [1215] 10:57:11.931 [1215] end_event_date2008-03-20
 
 10:57:11.932 [1216] 10:57:11.932 [1216] start_event_date2008-07-24
 
 10:57:11.932 [1217] 10:57:11.932 [1217] end_event_date2010-11-25
 
 10:57:11.933 [1218] 10:57:11.933 [1218] ts plot | Execution time: 0.00766468048095703
 10:57:11.933 [1218] 
 
 10:57:11.933 [1219] 10:57:11.933 [1219] ts plot | is null ts_plt ? FALSE
 
 10:57:11.934 [1220] 10:57:11.934 [1220] ts_plot -->
 
 10:57:11.934 [1221] 10:57:11.934 [1221] ts_plot_dygraph || ts_plot computed
 
 10:57:11.934 [1222] 10:57:11.934 [1222] ts_plot_dygraph || After callbacks
 
 10:57:11.935 [1223] 10:57:11.935 [1223] ts_plot dygraph | Execution_time: 0.013808488
 10:57:11.935 [1223] 8458252
 
 10:57:11.977 [1224] 10:57:11.977 [1224] | JS PLOT RENDER | projections_plot, 207
 
 10:57:11.979 [1225] 10:57:11.979 [1225] Log add | JS Plot Render projections_plot
 
 10:57:11.980 [1226] 10:57:11.980 [1226] | JS PLOT RENDER | ts_plot_dygraph, 109
 
 10:57:11.981 [1227] 10:57:11.981 [1227] Log add | JS Plot Render ts_plot_dygraph
 
 10:57:53.377 [1228] 10:57:53.377 [1228] --> embedding idx
 
 10:57:53.383 [1229] 10:57:53.383 [1229] embedding idx -->
 
 10:57:53.384 [1230] 10:57:53.384 [1230] --> window_list
 
 10:57:53.385 [1231] 10:57:53.385 [1231] --> filtered_window_indices
 
 10:57:53.386 [1232] 10:57:53.386 [1232] || get_window_indices_ || prjs ~109
 
 10:57:53.387 [1233] 10:57:53.387 [1233] || get_window_indices_ || wlen 17
 
 10:57:53.387 [1234] 10:57:53.387 [1234] || get_window_indices_ || stride 2
 
 10:57:53.387 [1235] 10:57:53.387 [1235] || get_window_indices_ || sd 1
 
 10:57:53.387 [1236] 10:57:53.387 [1236] || get_window_indices_ || sd 3
 
 10:57:53.388 [1237] 10:57:53.388 [1237] || get_window_indices_ || sd 5
 
 10:57:53.388 [1238] 10:57:53.388 [1238] || get_window_indices_ || sd 7
 
 10:57:53.388 [1239] 10:57:53.388 [1239] || get_window_indices_ || sd 9
 
 10:57:53.388 [1240] 10:57:53.388 [1240] || get_window_indices_ || sd 11
 
 10:57:53.388 [1241] 10:57:53.388 [1241] || get_window_indices_ || sd 13
 
 10:57:53.388 [1242] 10:57:53.388 [1242] || get_window_indices_ || sd 15
 
 10:57:53.389 [1243] 10:57:53.389 [1243] || get_window_indices_ || sd 17
 
 10:57:53.389 [1244] 10:57:53.389 [1244] || get_window_indices_ || sd 19
 
 10:57:53.389 [1245] 10:57:53.389 [1245] || get_window_indices_ || sd 21
 
 10:57:53.389 [1246] 10:57:53.389 [1246] || get_window_indices_ || sd 23
 
 10:57:53.389 [1247] 10:57:53.389 [1247] || get_window_indices_ || sd 25
 
 10:57:53.390 [1248] 10:57:53.390 [1248] || get_window_indices_ || sd 27
 
 10:57:53.390 [1249] 10:57:53.390 [1249] || get_window_indices_ || sd 29
 
 10:57:53.390 [1250] 10:57:53.390 [1250] || get_window_indices_ || sd 31
 
 10:57:53.390 [1251] 10:57:53.390 [1251] || get_window_indices_ || sd 33
 
 10:57:53.390 [1252] 10:57:53.390 [1252] || get_window_indices_ || sd 35
 
 10:57:53.391 [1253] 10:57:53.391 [1253] || get_window_indices_ || sd 37
 
 10:57:53.391 [1254] 10:57:53.391 [1254] || get_window_indices_ || sd 39
 
 10:57:53.391 [1255] 10:57:53.391 [1255] || get_window_indices_ || sd 41
 
 10:57:53.391 [1256] 10:57:53.391 [1256] || get_window_indices_ || sd 43
 
 10:57:53.391 [1257] 10:57:53.391 [1257] || get_window_indices_ || sd 45
 
 10:57:53.392 [1258] 10:57:53.392 [1258] || get_window_indices_ || sd 47
 
 10:57:53.392 [1259] 10:57:53.392 [1259] || get_window_indices_ || sd 49
 
 10:57:53.392 [1260] 10:57:53.392 [1260] || get_window_indices_ || sd 51
 
 10:57:53.392 [1261] 10:57:53.392 [1261] || get_window_indices_ || sd 53
 
 10:57:53.392 [1262] 10:57:53.392 [1262] || get_window_indices_ || sd 55
 
 10:57:53.393 [1263] 10:57:53.393 [1263] || get_window_indices_ || sd 57
 
 10:57:53.393 [1264] 10:57:53.393 [1264] || get_window_indices_ || sd 59
 
 10:57:53.393 [1265] 10:57:53.393 [1265] || get_window_indices_ || sd 61
 
 10:57:53.393 [1266] 10:57:53.393 [1266] || get_window_indices_ || sd 63
 
 10:57:53.393 [1267] 10:57:53.393 [1267] || get_window_indices_ || sd 65
 
 10:57:53.394 [1268] 10:57:53.394 [1268] || get_window_indices_ || sd 67
 
 10:57:53.394 [1269] 10:57:53.394 [1269] || get_window_indices_ || sd 69
 
 10:57:53.394 [1270] 10:57:53.394 [1270] || get_window_indices_ || sd 71
 
 10:57:53.394 [1271] 10:57:53.394 [1271] || get_window_indices_ || sd 73
 
 10:57:53.394 [1272] 10:57:53.394 [1272] || get_window_indices_ || sd 75
 
 10:57:53.395 [1273] 10:57:53.395 [1273] || get_window_indices_ || sd 77
 
 10:57:53.395 [1274] 10:57:53.395 [1274] || get_window_indices_ || sd 79
 
 10:57:53.395 [1275] 10:57:53.395 [1275] || get_window_indices_ || sd 81
 
 10:57:53.395 [1276] 10:57:53.395 [1276] || get_window_indices_ || sd 83
 
 10:57:53.395 [1277] 10:57:53.395 [1277] || get_window_indices_ || sd 85
 
 10:57:53.395 [1278] 10:57:53.395 [1278] || get_window_indices_ || sd 87
 
 10:57:53.396 [1279] 10:57:53.396 [1279] || get_window_indices_ || sd 89
 
 10:57:53.396 [1280] 10:57:53.396 [1280] || get_window_indices_ || sd 91
 
 10:57:53.396 [1281] 10:57:53.396 [1281] || get_window_indices_ || sd 93
 
 10:57:53.396 [1282] 10:57:53.396 [1282] || get_window_indices_ || sd 95
 
 10:57:53.396 [1283] 10:57:53.396 [1283] || get_window_indices_ || sd 97
 
 10:57:53.397 [1284] 10:57:53.397 [1284] || get_window_indices_ || sd 99
 
 10:57:53.397 [1285] 10:57:53.397 [1285] || get_window_indices_ || sd 101
 
 10:57:53.397 [1286] 10:57:53.397 [1286] || get_window_indices_ || sd 103
 
 10:57:53.397 [1287] 10:57:53.397 [1287] || get_window_indices_ || sd 105
 
 10:57:53.397 [1288] 10:57:53.397 [1288] || get_window_indices_ || sd 107
 
 10:57:53.398 [1289] 10:57:53.398 [1289] || get_window_indices_ || sd 109
 
 10:57:53.398 [1290] 10:57:53.398 [1290] || get_window_indices_ || sd 111
 
 10:57:53.398 [1291] 10:57:53.398 [1291] || get_window_indices_ || sd 113
 
 10:57:53.398 [1292] 10:57:53.398 [1292] || get_window_indices_ || sd 115
 
 10:57:53.398 [1293] 10:57:53.398 [1293] || get_window_indices_ || sd 117
 
 10:57:53.399 [1294] 10:57:53.399 [1294] || get_window_indices_ || sd 119
 
 10:57:53.399 [1295] 10:57:53.399 [1295] || get_window_indices_ || sd 121
 
 10:57:53.399 [1296] 10:57:53.399 [1296] || get_window_indices_ || sd 123
 
 10:57:53.399 [1297] 10:57:53.399 [1297] || get_window_indices_ || sd 125
 
 10:57:53.399 [1298] 10:57:53.399 [1298] || get_window_indices_ || sd 127
 
 10:57:53.400 [1299] 10:57:53.400 [1299] || get_window_indices_ || sd 129
 
 10:57:53.400 [1300] 10:57:53.400 [1300] || get_window_indices_ || sd 131
 
 10:57:53.400 [1301] 10:57:53.400 [1301] || get_window_indices_ || sd 133
 
 10:57:53.400 [1302] 10:57:53.400 [1302] || get_window_indices_ || sd 135
 
 10:57:53.400 [1303] 10:57:53.400 [1303] || get_window_indices_ || sd 137
 
 10:57:53.401 [1304] 10:57:53.401 [1304] || get_window_indices_ || sd 139
 
 10:57:53.401 [1305] 10:57:53.401 [1305] || get_window_indices_ || sd 141
 
 10:57:53.401 [1306] 10:57:53.401 [1306] || get_window_indices_ || sd 143
 
 10:57:53.401 [1307] 10:57:53.401 [1307] || get_window_indices_ || sd 145
 
 10:57:53.401 [1308] 10:57:53.401 [1308] || get_window_indices_ || sd 147
 
 10:57:53.402 [1309] 10:57:53.402 [1309] || get_window_indices_ || sd 149
 
 10:57:53.402 [1310] 10:57:53.402 [1310] || get_window_indices_ || sd 151
 
 10:57:53.402 [1311] 10:57:53.402 [1311] || get_window_indices_ || sd 153
 
 10:57:53.402 [1312] 10:57:53.402 [1312] || get_window_indices_ || sd 155
 
 10:57:53.402 [1313] 10:57:53.402 [1313] || get_window_indices_ || sd 157
 
 10:57:53.403 [1314] 10:57:53.403 [1314] || get_window_indices_ || sd 159
 
 10:57:53.403 [1315] 10:57:53.403 [1315] || get_window_indices_ || sd 161
 
 10:57:53.403 [1316] 10:57:53.403 [1316] || get_window_indices_ || sd 163
 
 10:57:53.403 [1317] 10:57:53.403 [1317] || get_window_indices_ || sd 165
 
 10:57:53.403 [1318] 10:57:53.403 [1318] || get_window_indices_ || sd 167
 
 10:57:53.404 [1319] 10:57:53.404 [1319] || get_window_indices_ || sd 169
 
 10:57:53.404 [1320] 10:57:53.404 [1320] || get_window_indices_ || sd 171
 
 10:57:53.404 [1321] 10:57:53.404 [1321] || get_window_indices_ || sd 173
 
 10:57:53.404 [1322] 10:57:53.404 [1322] || get_window_indices_ || sd 175
 
 10:57:53.404 [1323] 10:57:53.404 [1323] || get_window_indices_ || sd 177
 
 10:57:53.404 [1324] 10:57:53.404 [1324] || get_window_indices_ || sd 179
 
 10:57:53.405 [1325] 10:57:53.405 [1325] || get_window_indices_ || sd 181
 
 10:57:53.405 [1326] 10:57:53.405 [1326] || get_window_indices_ || sd 183
 
 10:57:53.405 [1327] 10:57:53.405 [1327] || get_window_indices_ || sd 185
 
 10:57:53.405 [1328] 10:57:53.405 [1328] || get_window_indices_ || sd 207
 
 10:57:53.405 [1329] 10:57:53.405 [1329] || get_window_indices_ || sd 209
 
 10:57:53.406 [1330] 10:57:53.406 [1330] || get_window_indices_ || sd 211
 
 10:57:53.406 [1331] 10:57:53.406 [1331] || get_window_indices_ || sd 213
 
 10:57:53.406 [1332] 10:57:53.406 [1332] || get_window_indices_ || sd 215
 
 10:57:53.406 [1333] 10:57:53.406 [1333] || get_window_indices_ || sd 217
 
 10:57:53.406 [1334] 10:57:53.406 [1334] || get_window_indices_ || sd 219
 
 10:57:53.407 [1335] 10:57:53.407 [1335] || get_window_indices_ || sd 221
 
 10:57:53.407 [1336] 10:57:53.407 [1336] || get_window_indices_ || sd 223
 
 10:57:53.407 [1337] 10:57:53.407 [1337] || get_window_indices_ || sd 225
 
 10:57:53.407 [1338] 10:57:53.407 [1338] || get_window_indices_ || sd 227
 
 10:57:53.407 [1339] 10:57:53.407 [1339] || get_window_indices_ || sd 229
 
 10:57:53.408 [1340] 10:57:53.408 [1340] || get_window_indices_ || sd 231
 
 10:57:53.408 [1341] 10:57:53.408 [1341] || get_window_indices_ || sd 233
 
 10:57:53.408 [1342] 10:57:53.408 [1342] || get_window_indices_ || sd 235
 
 10:57:53.408 [1343] 10:57:53.408 [1343] || get_window_indices_ || sd 237
 
 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~1

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~2

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~3

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~4

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~5

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~6

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~7

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~8

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~9

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~10

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~11

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~12

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~13

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~14

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~15

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~16

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~17

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~18

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~19

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~20

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~21

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~22

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~23

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~24

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~25

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~26

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~27

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~28

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~29

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~30

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~31

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~32

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~33

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~34

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~35

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~36

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~37

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~38

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~39

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~40

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~41

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~42

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~43

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~44

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~45

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~46

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~47

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~48

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~49

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~50

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~51

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~52

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~53

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~54

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~55

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~56

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~57

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~58

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~59

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~60

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~61

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~62

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~63

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~64

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~65

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~66

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~67

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~68

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~69

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~70

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~71

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~72

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~73

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~74

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~75

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~76

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~77

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~78

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~79

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~80

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~81

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~82

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~83

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~84

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~85

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~86

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~87

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~88

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~89

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~90

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~91

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~92

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~93

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~94

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~95

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~96

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~97

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~98

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~99

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~100
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~101
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~102
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~103
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~104
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~105
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~106
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~107
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~108
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~109
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~110
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~111
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~112
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~113
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~114
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~115
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~116
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~117
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~118
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~119
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~120
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~121
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~122
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~123
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~124
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~125
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~126
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~127
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~128
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~129
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~130
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~131
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~132
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~133
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~134
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~135
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~136
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~137
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~138
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~139
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~140
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~141
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~142
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~143
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~144
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~145
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~146
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~147
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~148
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~149
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~150
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~151
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~152
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~153
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~154
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~155
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~156
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~157
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~158
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~159
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~160
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~161
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~162
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~163
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~164
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~165
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~166
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~167
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~168
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~169
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~170
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~171
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~172
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~173
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~174
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~175
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~176
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~177
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~178
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~179
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~180
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~181
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~182
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~183
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~184
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~185
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~186
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~187
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~188
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~189
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~190
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~191
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~192
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~193
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~194
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~195
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~196
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~197
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~198
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~199
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~200
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~201
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~207
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~208
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~209
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~210
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~211
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~212
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~213
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~214
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~215
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~216
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~217
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~218
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~219
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~220
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~221
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~222
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~223
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~224
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~225
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~226
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~227
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~228
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~229
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~230
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~231
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~232
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~233
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~234
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~235
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~236
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~237
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~238
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~239
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~240
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~241
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~242
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~243
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~244
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~245
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~246
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~247
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~248
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~249
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~250
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~251
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~252
 10:57:53.409 [1344] 

 10:57:53.409 [1344] 10:57:53.409 [1344] || get_window_indices_ || window_indices ~253
 10:57:53.409 [1344] 
 
 10:57:53.418 [1345] 10:57:53.418 [1345] filtered_window_indices -->
 
 10:57:53.418 [1346] 10:57:53.418 [1346] window_list -->
 
 10:57:53.447 [1347] 10:57:53.447 [1347] ts_plot_dygraph || Before req| tsdf ?TRUE| pr
 10:57:53.447 [1347] j_object? TRUE| play ?TRUE| embs ?TRUE
 
 10:57:53.449 [1348] 10:57:53.449 [1348] **** ts_plot_dygraph ****
 
 10:57:53.449 [1349] 10:57:53.449 [1349] ts_plot_dygraph || ts_variables before ts_plo
 10:57:53.449 [1349] t original = volume; preprocessed = NULL; complete = volume; sele
 10:57:53.449 [1349] cted = volume
 
 10:57:53.452 [1350] 10:57:53.452 [1350] --> ts_plot | Before req 1 | wlen 17 | tsdf r
 10:57:53.452 [1350] eady? TRUE
 
 10:57:53.453 [1351] 10:57:53.453 [1351] ts_plot || ts variables Before ts_plot_base o
 10:57:53.453 [1351] riginal = volume; preprocessed = NULL; complete = volume; selecte
 10:57:53.453 [1351] d = volume -->
 
 10:57:53.456 [1352] 10:57:53.456 [1352] ts_plot | bp
 
 10:57:53.457 [1353] 10:57:53.457 [1353] ts_plot | embedings idxs 
 
 10:57:53.457 [1354] 10:57:53.457 [1354] ts_plot | Before if
 
 10:57:53.458 [1355] 10:57:53.458 [1355] ts_plot | reduced_window_list (2004-01-082008
 10:57:53.458 [1355] -10-30)view size 252max size 10000
 
 10:57:53.458 [1356] 10:57:53.458 [1356] start_event_date2004-01-08
 
 10:57:53.459 [1357] 10:57:53.459 [1357] end_event_date2007-11-01
 
 10:57:53.460 [1358] 10:57:53.460 [1358] start_event_date2007-12-13
 
 10:57:53.460 [1359] 10:57:53.460 [1359] end_event_date2008-10-30
 
 10:57:53.461 [1360] 10:57:53.461 [1360] ts plot | Execution time: 0.00752997398376465
 10:57:53.461 [1360] 
 
 10:57:53.461 [1361] 10:57:53.461 [1361] ts plot | is null ts_plt ? FALSE
 
 10:57:53.462 [1362] 10:57:53.462 [1362] ts_plot -->
 
 10:57:53.462 [1363] 10:57:53.462 [1363] ts_plot_dygraph || ts_plot computed
 
 10:57:53.462 [1364] 10:57:53.462 [1364] ts_plot_dygraph || After callbacks
 
 10:57:53.463 [1365] 10:57:53.463 [1365] ts_plot dygraph | Execution_time: 0.013533353
 10:57:53.463 [1365] 805542
 
 10:57:53.507 [1366] 10:57:53.507 [1366] | JS PLOT RENDER | projections_plot, 207
 
 10:57:53.509 [1367] 10:57:53.509 [1367] Log add | JS Plot Render projections_plot
 
 10:57:53.509 [1368] 10:57:53.509 [1368] | JS PLOT RENDER | ts_plot_dygraph, 69
 
 10:57:53.511 [1369] 10:57:53.511 [1369] Log add | JS Plot Render ts_plot_dygraph
 
 10:58:17.190 [1370] 10:58:17.190 [1370] --> embedding idx
 
 10:58:17.196 [1371] 10:58:17.196 [1371] embedding idx -->
 
 10:58:17.197 [1372] 10:58:17.197 [1372] --> window_list
 
 10:58:17.198 [1373] 10:58:17.198 [1373] --> filtered_window_indices
 
 10:58:17.199 [1374] 10:58:17.199 [1374] || get_window_indices_ || prjs ~7
 
 10:58:17.199 [1375] 10:58:17.199 [1375] || get_window_indices_ || wlen 17
 
 10:58:17.200 [1376] 10:58:17.200 [1376] || get_window_indices_ || stride 2
 
 10:58:17.200 [1377] 10:58:17.200 [1377] || get_window_indices_ || sd 263
 
 10:58:17.200 [1378] 10:58:17.200 [1378] || get_window_indices_ || sd 265
 
 10:58:17.200 [1379] 10:58:17.200 [1379] || get_window_indices_ || sd 267
 
 10:58:17.200 [1380] 10:58:17.200 [1380] || get_window_indices_ || sd 269
 
 10:58:17.201 [1381] 10:58:17.201 [1381] || get_window_indices_ || sd 271
 
 10:58:17.201 [1382] 10:58:17.201 [1382] || get_window_indices_ || sd 273
 
 10:58:17.201 [1383] 10:58:17.201 [1383] || get_window_indices_ || sd 275
 
 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~263
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~264
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~265
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~266
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~267
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~268
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~269
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~270
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~271
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~272
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~273
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~274
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~275
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~276
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~277
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~278
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~279
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~280
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~281
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~282
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~283
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~284
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~285
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~286
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~287
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~288
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~289
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~290
 10:58:17.201 [1384] 

 10:58:17.201 [1384] 10:58:17.201 [1384] || get_window_indices_ || window_indices ~291
 10:58:17.201 [1384] 
 
 10:58:17.203 [1385] 10:58:17.203 [1385] filtered_window_indices -->
 
 10:58:17.203 [1386] 10:58:17.203 [1386] window_list -->
 
 10:58:17.230 [1387] 10:58:17.230 [1387] ts_plot_dygraph || Before req| tsdf ?TRUE| pr
 10:58:17.230 [1387] j_object? TRUE| play ?TRUE| embs ?TRUE
 
 10:58:17.232 [1388] 10:58:17.232 [1388] **** ts_plot_dygraph ****
 
 10:58:17.232 [1389] 10:58:17.232 [1389] ts_plot_dygraph || ts_variables before ts_plo
 10:58:17.232 [1389] t original = volume; preprocessed = NULL; complete = volume; sele
 10:58:17.232 [1389] cted = volume
 
 10:58:17.236 [1390] 10:58:17.236 [1390] --> ts_plot | Before req 1 | wlen 17 | tsdf r
 10:58:17.236 [1390] eady? TRUE
 
 10:58:17.237 [1391] 10:58:17.237 [1391] ts_plot || ts variables Before ts_plot_base o
 10:58:17.237 [1391] riginal = volume; preprocessed = NULL; complete = volume; selecte
 10:58:17.237 [1391] d = volume -->
 
 10:58:17.240 [1392] 10:58:17.240 [1392] ts_plot | bp
 
 10:58:17.240 [1393] 10:58:17.240 [1393] ts_plot | embedings idxs 
 
 10:58:17.240 [1394] 10:58:17.240 [1394] ts_plot | Before if
 
 10:58:17.241 [1395] 10:58:17.241 [1395] ts_plot | reduced_window_list (2009-01-152009
 10:58:17.241 [1395] -07-23)view size 28max size 10000
 
 10:58:17.242 [1396] 10:58:17.242 [1396] start_event_date2009-01-15
 
 10:58:17.242 [1397] 10:58:17.242 [1397] end_event_date2009-07-23
 
 10:58:17.243 [1398] 10:58:17.243 [1398] ts plot | Execution time: 0.00614261627197266
 10:58:17.243 [1398] 
 
 10:58:17.243 [1399] 10:58:17.243 [1399] ts plot | is null ts_plt ? FALSE
 
 10:58:17.244 [1400] 10:58:17.244 [1400] ts_plot -->
 
 10:58:17.244 [1401] 10:58:17.244 [1401] ts_plot_dygraph || ts_plot computed
 
 10:58:17.244 [1402] 10:58:17.244 [1402] ts_plot_dygraph || After callbacks
 
 10:58:17.245 [1403] 10:58:17.245 [1403] ts_plot dygraph | Execution_time: 0.012218475
 10:58:17.245 [1403] 3417969
 
 10:58:17.290 [1404] 10:58:17.290 [1404] | JS PLOT RENDER | projections_plot, 207
 
 10:58:17.292 [1405] 10:58:17.292 [1405] Log add | JS Plot Render projections_plot
 
 10:58:17.292 [1406] 10:58:17.292 [1406] | JS PLOT RENDER | ts_plot_dygraph, 32
 
 10:58:17.305 [1407] 10:58:17.305 [1407] Log add | JS Plot Render ts_plot_dygraph
 
 10:58:20.172 [1408] 10:58:20.172 [1408] --> embedding idx
 
 10:58:20.178 [1409] 10:58:20.178 [1409] embedding idx -->
 
 10:58:20.179 [1410] 10:58:20.179 [1410] --> window_list
 
 10:58:20.180 [1411] 10:58:20.180 [1411] --> filtered_window_indices
 
 10:58:20.181 [1412] 10:58:20.181 [1412] || get_window_indices_ || prjs ~2
 
 10:58:20.181 [1413] 10:58:20.181 [1413] || get_window_indices_ || wlen 17
 
 10:58:20.181 [1414] 10:58:20.181 [1414] || get_window_indices_ || stride 2
 
 10:58:20.182 [1415] 10:58:20.182 [1415] || get_window_indices_ || sd 347
 
 10:58:20.182 [1416] 10:58:20.182 [1416] || get_window_indices_ || sd 391
 
 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~347
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~348
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~349
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~350
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~351
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~352
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~353
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~354
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~355
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~356
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~357
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~358
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~359
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~360
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~361
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~362
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~363
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~391
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~392
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~393
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~394
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~395
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~396
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~397
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~398
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~399
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~400
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~401
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~402
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~403
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~404
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~405
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~406
 10:58:20.182 [1417] 

 10:58:20.182 [1417] 10:58:20.182 [1417] || get_window_indices_ || window_indices ~407
 10:58:20.182 [1417] 
 
 10:58:20.184 [1418] 10:58:20.184 [1418] filtered_window_indices -->
 
 10:58:20.184 [1419] 10:58:20.184 [1419] window_list -->
 
 10:58:20.214 [1420] 10:58:20.214 [1420] ts_plot_dygraph || Before req| tsdf ?TRUE| pr
 10:58:20.214 [1420] j_object? TRUE| play ?TRUE| embs ?TRUE
 
 10:58:20.216 [1421] 10:58:20.216 [1421] **** ts_plot_dygraph ****
 
 10:58:20.216 [1422] 10:58:20.216 [1422] ts_plot_dygraph || ts_variables before ts_plo
 10:58:20.216 [1422] t original = volume; preprocessed = NULL; complete = volume; sele
 10:58:20.216 [1422] cted = volume
 
 10:58:20.219 [1423] 10:58:20.219 [1423] --> ts_plot | Before req 1 | wlen 17 | tsdf r
 10:58:20.219 [1423] eady? TRUE
 
 10:58:20.220 [1424] 10:58:20.220 [1424] ts_plot || ts variables Before ts_plot_base o
 10:58:20.220 [1424] riginal = volume; preprocessed = NULL; complete = volume; selecte
 10:58:20.220 [1424] d = volume -->
 
 10:58:20.223 [1425] 10:58:20.223 [1425] ts_plot | bp
 
 10:58:20.224 [1426] 10:58:20.224 [1426] ts_plot | embedings idxs 
 
 10:58:20.224 [1427] 10:58:20.224 [1427] ts_plot | Before if
 
 10:58:20.225 [1428] 10:58:20.225 [1428] ts_plot | reduced_window_list (2010-08-262011
 10:58:20.225 [1428] -10-13)view size 60max size 10000
 
 10:58:20.225 [1429] 10:58:20.225 [1429] start_event_date2010-08-26
 
 10:58:20.226 [1430] 10:58:20.226 [1430] end_event_date2010-12-09
 
 10:58:20.227 [1431] 10:58:20.227 [1431] start_event_date2011-06-23
 
 10:58:20.227 [1432] 10:58:20.227 [1432] end_event_date2011-10-13
 
 10:58:20.228 [1433] 10:58:20.228 [1433] ts plot | Execution time: 0.0074315071105957
 
 10:58:20.228 [1434] 10:58:20.228 [1434] ts plot | is null ts_plt ? FALSE
 
 10:58:20.228 [1435] 10:58:20.228 [1435] ts_plot -->
 
 10:58:20.229 [1436] 10:58:20.229 [1436] ts_plot_dygraph || ts_plot computed
 
 10:58:20.229 [1437] 10:58:20.229 [1437] ts_plot_dygraph || After callbacks
 
 10:58:20.229 [1438] 10:58:20.229 [1438] ts_plot dygraph | Execution_time: 0.013426780
 10:58:20.229 [1438] 7006836
 
 10:58:20.270 [1439] 10:58:20.270 [1439] | JS PLOT RENDER | projections_plot, 207
 
 10:58:20.272 [1440] 10:58:20.272 [1440] Log add | JS Plot Render projections_plot
 
 10:58:20.273 [1441] 10:58:20.273 [1441] | JS PLOT RENDER | ts_plot_dygraph, 33
 
 10:58:20.274 [1442] 10:58:20.274 [1442] Log add | JS Plot Render ts_plot_dygraph
 
 11:01:41.354 [1443] 11:01:41.354 [1443] --> output$projections_plot
 
 11:01:41.356 [1444] 11:01:41.356 [1444]  projections_plot_comp || Before req | tsdf_r
 11:01:41.356 [1444] eady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | 
 11:01:41.356 [1444] enc_input_path? /home/macu/data/wandb_artifacts/-7635916990915258
 11:01:41.356 [1444] 888 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 11:01:41.359 [1445] 11:01:41.359 [1445] --> projections_plot_comp
 
 11:01:41.361 [1446] 11:01:41.361 [1446] embs_comp_or_cached || Before req enc_input_r
 11:01:41.361 [1446] eady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE |
 11:01:41.361 [1446]  X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_p
 11:01:41.361 [1446] reprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproce
 11:01:41.361 [1446] ssed flag? TRUE
 [1] "embs_com_or_cached | after req"

 11:01:41.362 [1447] 11:01:41.362 [1447] -->|| reactiveVal_compute_or_cached || embs_c
 11:01:41.362 [1447] omp || 
 
 11:01:41.364 [1448] 11:01:41.364 [1448] || reactiveVal_compute_or_cached || embs_comp
 11:01:41.364 [1448]  || At least 1 param changed
 
 11:01:41.364 [1449] 11:01:41.364 [1449] || || reactiveVal_compute_or_cached || embs_c
 11:01:41.364 [1449] omp ||  || | fine_tune  | Old: FALSE                | New: TRUE  
 11:01:41.364 [1449]                |
 
 11:01:41.366 [1450] 11:01:41.366 [1450] || reactiveVal_compute_or_cached || embs_comp
 11:01:41.366 [1450]  ||  compute? TRUE-->
 
 11:01:41.366 [1451] 11:01:41.366 [1451] embs_comp_or_cached || --> embs | compute_fla
 11:01:41.366 [1451] g TRUE
 
 11:01:41.367 [1452] 11:01:41.367 [1452] embs_comp || --> embs_comp | enc_input_ready 
 11:01:41.367 [1452] TRUE
 
 11:01:41.367 [1453] 11:01:41.367 [1453] embs_comp || tsdf ~ (440, 2)
 
 11:01:41.367 [1454] 11:01:41.367 [1454] embs_comp || X ~(212, 1, 17)
 
 11:01:41.367 [1455] 11:01:41.367 [1455] embs_comp ||get embeddings
 
 11:01:41.369 [1456] 11:01:41.369 [1456] embs_comp || get embeddings | Get batch size 
 11:01:41.369 [1456] and dataset
 
 11:01:41.662 [1457] 11:01:41.662 [1457] embs_comp || get embeddings (set stride set b
 11:01:41.662 [1457] atch size) | Stride 2 | batch size: 16 | stride: 2
 
 11:01:41.663 [1458] 11:01:41.663 [1458] embs_comp || get embeddings | Original stride
 11:01:41.663 [1458] : 1
 
 11:01:41.663 [1459] 11:01:41.663 [1459] embs_comp || get embeddings (set stride set b
 11:01:41.663 [1459] atch size) | Chunk_size 10000000
 
 11:01:41.664 [1460] 11:01:41.664 [1460] embs_comp || get_enc_embs_set_stride_set_batc
 11:01:41.664 [1460] h_size | GPU | Before
 GPU | Used mem: 0
GPU | Used mem: 48
GPU | Memory Usage: [[90m--------------------[0m] [90m0%[0m
UMAP prjs~(212, 2)
Silhouette_score: 0.6544588700256795
[1] --> get_enc_embs_set_stride_set_batch_size
[1] get_enc_embs_set_stride_set_batch_size | MVP | True
[1] --> get_enc_embs_MVP_set_stride_set_batch_size
[1] get_enc_embs_MVP_set_stride_set_batch_size | Check CUDA | X ~ 212
[1] get_enc_embs_MVP_set_stride_set_batch_size | CUDA device id: 0
[1] get_enc_embs_MVP_set_stride_set_batch_size | CUDA device name: Quadro RTX 8000
[1] get_enc_embs_MVP_set_stride_set_batch_size | Ensure empty cache & move 2 GPU
[1] get_enc_embs_MVP_set_stride_set_batch_size | Set dataset from X (enc_learn does not contain dls)
[1] get_enc_embs_MVP_set_stride_set_batch_size | Get module
[1] get_enc_embs_MVP_set_stride_set_batch_size | Get acts and grads | aux_dl len 1
[1] get_enc_embs_MVP_set_stride_set_batch_size | Get acts and grads | aux_dl.batch_len 1
[1] get_enc_embs_MVP_set_stride_set_batch_size | Get acts and grads | aux_dl.bs 212
[1] get_enc_embs_MVP_set_stride_set_batch_size | Get acts and grads | total_mem 50953846784
[1] get_enc_embs_MVP_set_stride_set_batch_size | Get acts and grads | used_mem 184817152
[1] get_enc_embs_MVP_set_stride_set_batch_size | Get acts and grads | reserved_mem 230686720
[1] get_enc_embs_MVP_set_stride_set_batch_size | Get acts and grads | available_mem 50723160064
[1] get_enc_embs_MVP_set_stride_set_batch_size | concat embeddings
[1] get_enc_embs_MVP_set_stride_set_batch_size | Reduce
[1] get_enc_embs_MVP_set_stride_set_batch_size | Convert to numpy
[1] get_enc_embs_MVP_set_stride_set_batch_size -->
[1] get_enc_embs_set_stride_set_batch_size | Before moving to CPU | embs~(212, 128)
[1] get_enc_embs_set_stride_set_batch_size | embs~(212, 128) -->

 11:01:41.758 [1461] 11:01:41.758 [1461] embs_comp || get_enc_embs_set_stride_set_batc
 11:01:41.758 [1461] h_size | GPU | After
 
 11:01:41.759 [1462] 11:01:41.759 [1462] embs_comp || get_enc_embs_set_stride_set_batc
 11:01:41.759 [1462] h_size embs ~ | 212

 11:01:41.759 [1462] 11:01:41.759 [1462] embs_comp || get_enc_embs_set_stride_set_batc
 11:01:41.759 [1462] h_size embs ~ | 128
 
 11:01:41.759 [1463] 11:01:41.759 [1463] get_enc_embs_set_stride_set_batch_size | GPU 
 11:01:41.759 [1463] | total time: 0.390355587005615 secs thus 0.00650592645009359 min
 11:01:41.759 [1463] s | result ~212

 11:01:41.759 [1463] 11:01:41.759 [1463] get_enc_embs_set_stride_set_batch_size | GPU 
 11:01:41.759 [1463] | total time: 0.390355587005615 secs thus 0.00650592645009359 min
 11:01:41.759 [1463] s | result ~128
 
 11:01:41.762 [1464] 11:01:41.762 [1464] Log add | Embeddings
 Garbage collection 123 = 97+6+20 (level 2) ... 
180.8 Mbytes of cons cells used (61%)
67.8 Mbytes of vectors used (50%)

 11:01:42.228 [1465] 11:01:42.228 [1465] embs_comp || get embeddings | 212 -->

 11:01:42.228 [1465] 11:01:42.228 [1465] embs_comp || get embeddings | 128 -->
 
 11:01:42.239 [1466] 11:01:42.239 [1466] embs_comp_or_cached || res ~212, 128
 
 11:01:42.240 [1467] 11:01:42.240 [1467] projections_plot_comp | embs?TRUE
 
 11:01:42.241 [1468] 11:01:42.241 [1468] projections_plot_comp | embs complete?TRUE
 
 11:01:42.242 [1469] 11:01:42.242 [1469]  projections_plot_comp || ts_variables:  orig
 11:01:42.242 [1469] inal = volume; preprocessed = NULL; complete = volume; selected =
 11:01:42.242 [1469]  volume
 
 11:01:42.245 [1470] 11:01:42.245 [1470]  projections_plot_comp || before highlight pr
 11:01:42.245 [1470] js_~(212, 3)
 
 11:01:42.246 [1471] 11:01:42.246 [1471]  projections_plot_comp || Cluster prjs_~(212,
 11:01:42.246 [1471]  4)
 
 11:01:42.246 [1472] 11:01:42.246 [1472] projections_plot_comp | GoGo Plot! 212
 
 11:01:42.246 [1473] 11:01:42.246 [1473] --> ggplot_base
 
 11:01:42.246 [1474] 11:01:42.246 [1474] ggplot_base -->
 
 11:01:42.274 [1475] 11:01:42.274 [1475] projections_plot_comp | Projections Plot time
 11:01:42.274 [1475] : 0.0293951034545898
 
 11:01:42.277 [1476] 11:01:42.277 [1476] Log add | Projections Plot
 
 11:01:42.278 [1477] 11:01:42.278 [1477] output$projections_plot -->
 
 11:01:42.422 [1478] 11:01:42.422 [1478] --> output$projections_plot
 
 11:01:42.423 [1479] 11:01:42.423 [1479]  projections_plot_comp || Before req | tsdf_r
 11:01:42.423 [1479] eady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | 
 11:01:42.423 [1479] enc_input_path? /home/macu/data/wandb_artifacts/-7635916990915258
 11:01:42.423 [1479] 888 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 11:01:42.426 [1480] 11:01:42.426 [1480] --> projections_plot_comp
 
 11:01:42.427 [1481] 11:01:42.427 [1481] embs_comp_or_cached || Before req enc_input_r
 11:01:42.427 [1481] eady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE |
 11:01:42.427 [1481]  X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_p
 11:01:42.427 [1481] reprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproce
 11:01:42.427 [1481] ssed flag? TRUE
 [1] "embs_com_or_cached | after req"

 11:01:42.428 [1482] 11:01:42.428 [1482] -->|| reactiveVal_compute_or_cached || embs_c
 11:01:42.428 [1482] omp || 
 
 11:01:42.429 [1483] 11:01:42.429 [1483] || reactiveVal_compute_or_cached || embs_comp
 11:01:42.429 [1483]  ||  Use cached || params_prev gtrends_kohls:v0, mvp:v183, 17, 2,
 11:01:42.429 [1483]  TRUE, FALSE
 
 11:01:42.429 [1484] 11:01:42.429 [1484] || reactiveVal_compute_or_cached || embs_comp
 11:01:42.429 [1484]  ||  Use cached || params_prev gtrends_kohls:v0, mvp:v183, 17, 2,
 11:01:42.429 [1484]  TRUE, FALSE
 
 11:01:42.429 [1485] 11:01:42.429 [1485] || reactiveVal_compute_or_cached || embs_comp
 11:01:42.429 [1485]  ||  Use cached || null? FALSE || compute? || FALSE
 
 11:01:42.430 [1486] 11:01:42.430 [1486] || reactiveVal_compute_or_cached || embs_comp
 11:01:42.430 [1486]  ||  compute? FALSE-->
 
 11:01:42.430 [1487] 11:01:42.430 [1487] embs_comp_or_cached || --> embs | compute_fla
 11:01:42.430 [1487] g FALSE
 
 11:01:42.430 [1488] 11:01:42.430 [1488] embs_comp_or_cached || res ~212, 128
 
 11:01:42.430 [1489] 11:01:42.430 [1489] projections_plot_comp | embs?TRUE
 
 11:01:42.431 [1490] 11:01:42.431 [1490] projections_plot_comp | embs complete?TRUE
 
 11:01:42.431 [1491] 11:01:42.431 [1491]  projections_plot_comp || ts_variables:  orig
 11:01:42.431 [1491] inal = volume; preprocessed = NULL; complete = volume; selected =
 11:01:42.431 [1491]  volume
 
 11:01:42.435 [1492] 11:01:42.435 [1492]  projections_plot_comp || before highlight pr
 11:01:42.435 [1492] js_~(212, 3)
 
 11:01:42.435 [1493] 11:01:42.435 [1493]  projections_plot_comp || Cluster prjs_~(212,
 11:01:42.435 [1493]  4)
 
 11:01:42.435 [1494] 11:01:42.435 [1494] projections_plot_comp | GoGo Plot! 212
 
 11:01:42.436 [1495] 11:01:42.436 [1495] --> ggplot_base
 
 11:01:42.436 [1496] 11:01:42.436 [1496] ggplot_base -->
 
 11:01:42.462 [1497] 11:01:42.462 [1497] projections_plot_comp | Projections Plot time
 11:01:42.462 [1497] : 0.0283064842224121
 
 11:01:42.465 [1498] 11:01:42.465 [1498] Log add | Projections Plot
 
 11:01:42.466 [1499] 11:01:42.466 [1499] output$projections_plot -->
 
 11:01:42.629 [1500] 11:01:42.629 [1500] | JS PLOT RENDER | projections_plot, 1277
 
 11:01:42.632 [1501] 11:01:42.632 [1501] Log add | JS Plot Render projections_plot
 
 11:01:42.632 [1502] 11:01:42.632 [1502] | JS PLOT RENDER | ts_plot_dygraph, 33
 
 11:01:42.634 [1503] 11:01:42.634 [1503] Log add | JS Plot Render ts_plot_dygraph
 
 11:01:44.822 [1504] 11:01:44.822 [1504] --> output$projections_plot
 
 11:01:44.823 [1505] 11:01:44.823 [1505]  projections_plot_comp || Before req | tsdf_r
 11:01:44.823 [1505] eady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | 
 11:01:44.823 [1505] enc_input_path? /home/macu/data/wandb_artifacts/-7635916990915258
 11:01:44.823 [1505] 888_preprocess | enc_input_ready? TRUE | play prjs? TRUE | play? 
 11:01:44.823 [1505] TRUE
 
 11:01:44.826 [1506] 11:01:44.826 [1506] --> projections_plot_comp
 
 11:01:44.827 [1507] 11:01:44.827 [1507] embs_comp_or_cached || Before req enc_input_r
 11:01:44.827 [1507] eady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE |
 11:01:44.827 [1507]  X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_p
 11:01:44.827 [1507] reprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproce
 11:01:44.827 [1507] ssed flag? TRUE
 [1] "embs_com_or_cached | after req"

 11:01:44.829 [1508] 11:01:44.829 [1508] -->|| reactiveVal_compute_or_cached || embs_c
 11:01:44.829 [1508] omp || 
 
 11:01:44.830 [1509] 11:01:44.830 [1509] || reactiveVal_compute_or_cached || embs_comp
 11:01:44.830 [1509]  || At least 1 param changed
 
 11:01:44.830 [1510] 11:01:44.830 [1510] || || reactiveVal_compute_or_cached || embs_c
 11:01:44.830 [1510] omp ||  || | fine_tune  | Old: FALSE                | New: TRUE  
 11:01:44.830 [1510]                |
 
 11:01:44.831 [1511] 11:01:44.831 [1511] || reactiveVal_compute_or_cached || embs_comp
 11:01:44.831 [1511]  ||  compute? TRUE-->
 
 11:01:44.832 [1512] 11:01:44.832 [1512] embs_comp_or_cached || --> embs | compute_fla
 11:01:44.832 [1512] g TRUE
 
 11:01:44.832 [1513] 11:01:44.832 [1513] embs_comp || --> embs_comp | enc_input_ready 
 11:01:44.832 [1513] TRUE
 
 11:01:44.832 [1514] 11:01:44.832 [1514] embs_comp || tsdf ~ (440, 2)
 
 11:01:44.833 [1515] 11:01:44.833 [1515] embs_comp || X ~(212, 1, 17)
 
 11:01:44.833 [1516] 11:01:44.833 [1516] embs_comp ||get embeddings
 
 11:01:44.834 [1517] 11:01:44.834 [1517] embs_comp || get embeddings | Get batch size 
 11:01:44.834 [1517] and dataset
 
 11:01:45.120 [1518] 11:01:45.120 [1518] embs_comp || get embeddings (set stride set b
 11:01:45.120 [1518] atch size) | Stride 2 | batch size: 16 | stride: 2
 
 11:01:45.121 [1519] 11:01:45.121 [1519] embs_comp || get embeddings | Original stride
 11:01:45.121 [1519] : 1
 
 11:01:45.121 [1520] 11:01:45.121 [1520] embs_comp || get embeddings (set stride set b
 11:01:45.121 [1520] atch size) | Chunk_size 10000000
 
 11:01:45.121 [1521] 11:01:45.121 [1521] embs_comp || get_enc_embs_set_stride_set_batc
 11:01:45.121 [1521] h_size | GPU | Before
 [1] --> get_enc_embs_set_stride_set_batch_size
[1] get_enc_embs_set_stride_set_batch_size | Moment | True
[1] get_acts_moment | Trial 1 | x_enc ~ torch.Size([212, 1, 17])
[1] get_acts_moment | Trial 1 | About to pad X (encoder input) | exception The size of tensor a (16) must match the size of tensor b (17) at non-singleton dimension 1 | padd step: 10
[1] get_acts_moment | Trial 1 | y ~ torch.Size([212, 1, 17])
[1] ------------------- Trial 1 | Padd -----------------
[1] get_acts_moment | Trial 2 | x_enc ~ torch.Size([212, 1, 27])
[1] get_acts_moment | Trial 2 | About to pad X (encoder input) | exception The size of tensor a (24) must match the size of tensor b (27) at non-singleton dimension 1 | padd step: 10
[1] get_acts_moment | Trial 2 | y ~ torch.Size([212, 1, 27])
[1] ------------------- Trial 2  -----------------
[1] ------------------- Trial 2 | a > a_old -----------------
[1] ------------------- Trial 2 |a > a_old | Reduced |  y ~ torch.Size([212, 1, 24]) -----------------
[1] get_acts_moment | Trial 3 | x_enc ~ torch.Size([212, 1, 24])
[1] get_acts_moment | Trial 3 | embs ~ torch.Size([212, 1, 3, 512])
[1] get_enc_embs_set_stride_set_batch_size | Before moving to CPU | embs~(212, 512)
[1] get_enc_embs_set_stride_set_batch_size | embs~(212, 512) -->

 11:01:45.182 [1522] 11:01:45.182 [1522] embs_comp || get_enc_embs_set_stride_set_batc
 11:01:45.182 [1522] h_size | GPU | After
 
 11:01:45.183 [1523] 11:01:45.183 [1523] embs_comp || get_enc_embs_set_stride_set_batc
 11:01:45.183 [1523] h_size embs ~ | 212

 11:01:45.183 [1523] 11:01:45.183 [1523] embs_comp || get_enc_embs_set_stride_set_batc
 11:01:45.183 [1523] h_size embs ~ | 512
 
 11:01:45.183 [1524] 11:01:45.183 [1524] get_enc_embs_set_stride_set_batch_size | GPU 
 11:01:45.183 [1524] | total time: 0.349231004714966 secs thus 0.00582051674524943 min
 11:01:45.183 [1524] s | result ~212

 11:01:45.183 [1524] 11:01:45.183 [1524] get_enc_embs_set_stride_set_batch_size | GPU 
 11:01:45.183 [1524] | total time: 0.349231004714966 secs thus 0.00582051674524943 min
 11:01:45.183 [1524] s | result ~512
 
 11:01:45.186 [1525] 11:01:45.186 [1525] Log add | Embeddings
 Garbage collection 124 = 97+6+21 (level 2) ... 
181.1 Mbytes of cons cells used (61%)
68.4 Mbytes of vectors used (50%)

 11:01:45.577 [1526] 11:01:45.577 [1526] embs_comp || get embeddings | 212 -->

 11:01:45.577 [1526] 11:01:45.577 [1526] embs_comp || get embeddings | 512 -->
 
 11:01:45.589 [1527] 11:01:45.589 [1527] embs_comp_or_cached || res ~212, 512
 
 11:01:45.591 [1528] 11:01:45.591 [1528] projections_plot_comp | embs? TRUE
 
 11:01:45.592 [1529] 11:01:45.592 [1529] --> embs_complete_cases
 
 11:01:45.592 [1530] 11:01:45.592 [1530] embs_complete_cases || Before complete cases 
 11:01:45.592 [1530] embs ~212, 512
 
 11:01:45.594 [1531] 11:01:45.594 [1531] embs_complete_cases || After complete cases e
 11:01:45.594 [1531] mbs ~212, 512
 
 11:01:45.595 [1532] 11:01:45.595 [1532] embs_complete_cases -->
 
 11:01:45.595 [1533] 11:01:45.595 [1533] projections_plot_comp | complete_cases? TRUE
 
 11:01:45.597 [1534] 11:01:45.597 [1534] projections_plot_comp | embs complete?TRUE
 
 11:01:45.598 [1535] 11:01:45.598 [1535]  projections_plot_comp || ts_variables:  orig
 11:01:45.598 [1535] inal = volume; preprocessed = volume_preprocessed; complete = vol
 11:01:45.598 [1535] ume, volume_preprocessed; selected = volume, volume_preprocessed
 
 11:01:45.601 [1536] 11:01:45.601 [1536]  projections_plot_comp || before highlight pr
 11:01:45.601 [1536] js_~(212, 3)
 
 11:01:45.602 [1537] 11:01:45.602 [1537]  projections_plot_comp || Cluster prjs_~(212,
 11:01:45.602 [1537]  4)
 
 11:01:45.602 [1538] 11:01:45.602 [1538] projections_plot_comp | GoGo Plot! 212
 
 11:01:45.602 [1539] 11:01:45.602 [1539] --> ggplot_base
 
 11:01:45.602 [1540] 11:01:45.602 [1540] ggplot_base -->
 
 11:01:45.630 [1541] 11:01:45.630 [1541] projections_plot_comp | Projections Plot time
 11:01:45.630 [1541] : 0.0294368267059326
 
 11:01:45.633 [1542] 11:01:45.633 [1542] Log add | Projections Plot
 
 11:01:45.634 [1543] 11:01:45.634 [1543] output$projections_plot -->
 
 11:01:45.812 [1544] 11:01:45.812 [1544] --> output$projections_plot
 
 11:01:45.813 [1545] 11:01:45.813 [1545]  projections_plot_comp || Before req | tsdf_r
 11:01:45.813 [1545] eady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | 
 11:01:45.813 [1545] enc_input_path? /home/macu/data/wandb_artifacts/-7635916990915258
 11:01:45.813 [1545] 888_preprocess | enc_input_ready? TRUE | play prjs? TRUE | play? 
 11:01:45.813 [1545] TRUE
 
 11:01:45.816 [1546] 11:01:45.816 [1546] --> projections_plot_comp
 
 11:01:45.817 [1547] 11:01:45.817 [1547] embs_comp_or_cached || Before req enc_input_r
 11:01:45.817 [1547] eady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE |
 11:01:45.817 [1547]  X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_p
 11:01:45.817 [1547] reprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproce
 11:01:45.817 [1547] ssed flag? TRUE
 [1] "embs_com_or_cached | after req"

 11:01:45.818 [1548] 11:01:45.818 [1548] -->|| reactiveVal_compute_or_cached || embs_c
 11:01:45.818 [1548] omp || 
 
 11:01:45.819 [1549] 11:01:45.819 [1549] || reactiveVal_compute_or_cached || embs_comp
 11:01:45.819 [1549]  ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-
 11:01:45.819 [1549] small-embedding:v0, 17, 2, TRUE, TRUE, /home/macu/data/wandb_arti
 11:01:45.819 [1549] facts/-7635916990915258888_preprocess
 
 11:01:45.819 [1550] 11:01:45.819 [1550] || reactiveVal_compute_or_cached || embs_comp
 11:01:45.819 [1550]  ||  Use cached || params_prev gtrends_kohls:v0, zeroshot-moment-
 11:01:45.819 [1550] small-embedding:v0, 17, 2, TRUE, TRUE, /home/macu/data/wandb_arti
 11:01:45.819 [1550] facts/-7635916990915258888_preprocess
 
 11:01:45.820 [1551] 11:01:45.820 [1551] || reactiveVal_compute_or_cached || embs_comp
 11:01:45.820 [1551]  ||  Use cached || null? FALSE || compute? || FALSE
 
 11:01:45.820 [1552] 11:01:45.820 [1552] || reactiveVal_compute_or_cached || embs_comp
 11:01:45.820 [1552]  ||  compute? FALSE-->
 
 11:01:45.820 [1553] 11:01:45.820 [1553] embs_comp_or_cached || --> embs | compute_fla
 11:01:45.820 [1553] g FALSE
 
 11:01:45.820 [1554] 11:01:45.820 [1554] embs_comp_or_cached || res ~212, 512
 
 11:01:45.820 [1555] 11:01:45.820 [1555] projections_plot_comp | embs? TRUE
 
 11:01:45.821 [1556] 11:01:45.821 [1556] --> embs_complete_cases
 
 11:01:45.821 [1557] 11:01:45.821 [1557] embs_complete_cases || Before complete cases 
 11:01:45.821 [1557] embs ~212, 512
 
 11:01:45.823 [1558] 11:01:45.823 [1558] embs_complete_cases || After complete cases e
 11:01:45.823 [1558] mbs ~212, 512
 
 11:01:45.826 [1559] 11:01:45.826 [1559] embs_complete_cases -->
 
 11:01:45.826 [1560] 11:01:45.826 [1560] projections_plot_comp | complete_cases? TRUE
 
 11:01:45.828 [1561] 11:01:45.828 [1561] projections_plot_comp | embs complete?TRUE
 
 11:01:45.829 [1562] 11:01:45.829 [1562]  projections_plot_comp || ts_variables:  orig
 11:01:45.829 [1562] inal = volume; preprocessed = volume_preprocessed; complete = vol
 11:01:45.829 [1562] ume, volume_preprocessed; selected = volume, volume_preprocessed
 
 11:01:45.832 [1563] 11:01:45.832 [1563]  projections_plot_comp || before highlight pr
 11:01:45.832 [1563] js_~(212, 3)
 
 11:01:45.832 [1564] 11:01:45.832 [1564]  projections_plot_comp || Cluster prjs_~(212,
 11:01:45.832 [1564]  4)
 
 11:01:45.833 [1565] 11:01:45.833 [1565] projections_plot_comp | GoGo Plot! 212
 
 11:01:45.833 [1566] 11:01:45.833 [1566] --> ggplot_base
 
 11:01:45.833 [1567] 11:01:45.833 [1567] ggplot_base -->
 
 11:01:45.860 [1568] 11:01:45.860 [1568] projections_plot_comp | Projections Plot time
 11:01:45.860 [1568] : 0.0285284519195557
 
 11:01:45.862 [1569] 11:01:45.862 [1569] Log add | Projections Plot
 
 11:01:45.863 [1570] 11:01:45.863 [1570] output$projections_plot -->
 
 11:01:46.072 [1571] 11:01:46.072 [1571] | JS PLOT RENDER | projections_plot, 1247
 
 11:01:46.075 [1572] 11:01:46.075 [1572] Log add | JS Plot Render projections_plot
 
 11:01:46.075 [1573] 11:01:46.075 [1573] | JS PLOT RENDER | ts_plot_dygraph, 1930
 
 11:01:46.077 [1574] 11:01:46.077 [1574] Log add | JS Plot Render ts_plot_dygraph
 
 11:05:59.038 [1575] 11:05:59.038 [1575] Execution id: 449, Start Timestamp: 20/12/24 
 11:05:59.038 [1575] 11:05:59
 
 11:05:59.173 [1576] 11:05:59.173 [1576] observeEvent encoders list enc_l | update dat
 11:05:59.173 [1576] aset list | after freeze
 
 11:05:59.193 [1577] 11:05:59.193 [1577] observeEvent encoders list encs_l | update da
 11:05:59.193 [1577] taset list -->
 
 11:05:59.199 [1578] 11:05:59.199 [1578] --> observeEvent input_encoder
 
 11:05:59.200 [1579] 11:05:59.200 [1579] observeEvent input_encoder | update wlen | Be
 11:05:59.200 [1579] fore enc_ar
 
 11:05:59.202 [1580] 11:05:59.202 [1580] eventReactive enc_ar | Enc. Artifact: 
 
 11:05:59.338 [1581] 11:05:59.338 [1581] eventReactive enc_ar | Error: wandb.errors.Co
 11:05:59.338 [1581] mmError: Attempted to fetch artifact without alias (e.g. "<artifa
 11:05:59.338 [1581] ct_name>:v3" or "<artifact_name>:latest")

 
 11:05:59.338 [1582] 11:05:59.338 [1582] envent reactive enc_ar -->
 
 11:05:59.339 [1583] 11:05:59.339 [1583] observeEvent input_encoder | update wlen | en
 11:05:59.339 [1583] c_ar: | Set wlen slider values
 
 11:05:59.340 [1584] 11:05:59.340 [1584] observeEvent input_encoder | update wlen | Se
 11:05:59.340 [1584] t wlen slider values from w | 
 
 11:05:59.340 [1585] 11:05:59.340 [1585] observeEvent input_encoder | update wlen | en
 11:05:59.340 [1585] c_ar$metadata$mvp_ws 
 
 11:05:59.340 [1586] 11:05:59.340 [1586] observeEvent input_encoder | update wlen | Up
 11:05:59.340 [1586] date slider input ws: (,  ) |  wlen: 
 
 11:05:59.388 [1587] 11:05:59.388 [1587] --> Observe clustering options
 
 11:05:59.390 [1588] 11:05:59.390 [1588] Observe clustering options -->
 
 11:05:59.406 [1590] 11:05:59.406 [1590] >>>> Toguether Log path: r_shiny_app_logs-449
 11:05:59.406 [1590] 
 
 11:05:59.439 [1591] 11:05:59.439 [1591] --> prj_object
 
 11:05:59.439 [1592] 11:05:59.439 [1592] prj_object || Before prjs_comp
 
 11:05:59.440 [1593] 11:05:59.440 [1593] prjs_comp | Before req || DR: PCA_UMAP || emb
 11:05:59.440 [1593] s? FALSE
 
 11:05:59.479 [1595] 11:05:59.479 [1595] mplot_start_computation |FALSE | Projections
 
 11:05:59.569 [1596] 11:05:59.569 [1596] --> observeEvent input_dataset | update encod
 11:05:59.569 [1596] er list
 
 11:05:59.573 [1597] 11:05:59.573 [1597] observeEvent input_dataset | update encoders 
 11:05:59.573 [1597] for dataset gtrends_kohls-denoised:v1
 
 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | zeroshot-moment-small-embedding:
 11:05:59.720 [1598] v0

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | zeroshot-moirai-small:v0

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | moment-small-reconstruction:v1

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | moment-small-reconstruction:v0

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | moment-small-embedding:v4

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | moment-small-embedding:v3

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | moment-small-embedding:v1

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | moment-small-embedding:v0

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | moment-large-embedding:v2

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | moirai-small:v2

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | moirai-small:v1

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | moirai-small:v0

 11:05:59.720 [1598] 11:05:59.720 [1598] observeEvent input_dataset | Encoders for dat
 11:05:59.720 [1598] aset gtrends_kohls-denoised:v1 | moirai:v0
 
 11:05:59.723 [1599] 11:05:59.723 [1599] observeEvent input_dataset | update encoder l
 11:05:59.723 [1599] ist -->
 
 11:05:59.726 [1600] 11:05:59.726 [1600] --> eventReactive ts_ar | Update dataset arti
 11:05:59.726 [1600] fact | hash gtrends_kohls-denoised:v1
 [1] "TSDF READY A TRUE TRUE"

 11:05:59.856 [1601] 11:05:59.856 [1601] --> Update play_pause_button
 
 11:05:59.859 [1602] 11:05:59.859 [1602] Update play_pause_button || FALSE -->
 
 11:05:59.864 [1603] 11:05:59.864 [1603] --> Enable/disable embs
 
 11:05:59.865 [1604] 11:05:59.865 [1604] Enable/disable embs || disable embs
 
 11:05:59.868 [1605] 11:05:59.868 [1605] Enable/disable embs --> || Changes to FALSE
 
 11:05:59.868 [1606] 11:05:59.868 [1606] eventReactive ts_ar || tsdf_ready FALSE
 
 11:05:59.870 [1607] 11:05:59.870 [1607] eventReactive ts_ar tsdf_ready? FALSE -->
 
 11:05:59.873 [1608] 11:05:59.873 [1608] --> observeEvent input_wlen | update slide st
 11:05:59.873 [1608] ride value | wlen 0
 
 11:05:59.876 [1609] 11:05:59.876 [1609] observeEvent input_wlen | update slide stride
 11:05:59.876 [1609]  value | Error | 
 
 11:05:59.877 [1610] 11:05:59.877 [1610] observeEvent input_wlen | update slide stride
 11:05:59.877 [1610]  value | Finally |  wlen min 1 max 0 current value 0 -->
 
 11:05:59.879 [1611] 11:05:59.879 [1611] --> observe X | Before req | tsdf_ready FALSE
 11:05:59.879 [1611]  | wlen 0 | stride 0 | allow update embs FALSE | play_prjs FALSE 
 11:05:59.879 [1611] | tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 11:05:59.943 [1612] 11:05:59.943 [1612] eventReactive enc_ar | Enc. Artifact: zerosho
 11:05:59.943 [1612] t-moment-small-embedding:v0
 
 11:06:00.075 [1613] 11:06:00.075 [1613] envent reactive enc_ar -->
 
 11:06:00.079 [1614] 11:06:00.079 [1614] --> observeEvent input_encoder
 
 11:06:00.083 [1615] 11:06:00.083 [1615] observeEvent input_encoder | update wlen | Be
 11:06:00.083 [1615] fore enc_ar
 
 11:06:00.083 [1616] 11:06:00.083 [1616] observeEvent input_encoder | update wlen | en
 11:06:00.083 [1616] c_ar: <Artifact QXJ0aWZhY3Q6MTM1Mzc4Nzc3MQ==>| Set wlen slider va
 11:06:00.083 [1616] lues
 
 11:06:00.084 [1617] 11:06:00.084 [1617] observeEvent input_encoder | update wlen | en
 11:06:00.084 [1617] c_ar$metadata$mvp_ws 12

 11:06:00.084 [1617] 11:06:00.084 [1617] observeEvent input_encoder | update wlen | en
 11:06:00.084 [1617] c_ar$metadata$mvp_ws 17
 
 11:06:00.085 [1618] 11:06:00.085 [1618] observeEvent input_encoder | update wlen | Up
 11:06:00.085 [1618] date slider input ws: (12, 17 ) |  wlen: 17
 
 11:06:00.087 [1619] 11:06:00.087 [1619] --> reactive enc_ar_stride
 
 11:06:00.088 [1620] 11:06:00.088 [1620] reactive_enc_ar_stride | --> 1
 
 11:06:00.146 [1622] 11:06:00.146 [1622] --> observeEvent input_wlen | update slide st
 11:06:00.146 [1622] ride value | wlen 17
 
 11:06:00.147 [1623] 11:06:00.147 [1623] enc_ar_stride: 1
 
 11:06:00.150 [1624] 11:06:00.150 [1624] oserveEvent input_wlen | update slide stride 
 11:06:00.150 [1624] value | Update stride to 1
 
 11:06:00.207 [1627] 11:06:00.207 [1627] --> observe X | Before req | tsdf_ready FALSE
 11:06:00.207 [1627]  | wlen 17 | stride 1 | allow update embs FALSE | play_prjs FALSE
 11:06:00.207 [1627]  | tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 11:15:29.627 [1628] 11:15:29.627 [1628] --> Updating play_fine_tune FALSE
 
 11:15:29.632 [1629] 11:15:29.632 [1629]  Updating play_fine_tune --> TRUE
 
 11:15:29.737 [1630] 11:15:29.737 [1630] Observe event | Input fine tune | Play fine t
 11:15:29.737 [1630] une
 
 11:15:29.738 [1631] 11:15:29.738 [1631] Observe event | Input fine tune | Play fine t
 11:15:29.738 [1631] une | Using the preprocessed dataset | ts_variables$selected
 
 11:15:29.753 [1632] 11:15:29.753 [1632] Fine tune kwargs | X: c(0.0909122565378584, 0
 11:15:29.753 [1632] .0909122565378584, 0.0909122565378584, 0, 0, 0.0909122565378584, 
 11:15:29.753 [1632] 0.0909122565378584, 0.0909122565378584, 0.0909122565378584, 0.090
 11:15:29.753 [1632] 9122565378584, 0.181815785778363, 0.272728042316221, 0.0909122565
 11:15:29.753 [1632] 378584, 0.0909122565378584, 0.0909122565378584, 0.181815785778363
 11:15:29.753 [1632] , 0.0909122565378584, 0.0909122565378584, 0.181815785778363, 0.18
 11:15:29.753 [1632] 1815785778363, 0.0909122565378584, 0.0909122565378584, 0.18181578
 11:15:29.753 [1632] 5778363, 0.0909122565378584, 0.181815785778363, 0.090912256537858
 11:15:29.753 [1632] 4, 0.181815785778363, 0.181815785778363, 
0.181815785778363, 0.18
 11:15:29.753 [1632] 1815785778363, 0.272728042316221, 0.181815785778363, 0.1818157857
 11:15:29.753 [1632] 78363, 0.272728042316221, 0.181815785778363, 0.181815785778363, 0
 11:15:29.753 [1632] .0909122565378584, 0.0909122565378584, 0.272728042316221, 0.27272
 11:15:29.753 [1632] 8042316221, 0.181815785778363, 0.272728042316221, 0.1818157857783
 11:15:29.753 [1632] 63, 0.36364029885408, 0.36364029885408, 0.545456084632442, 0.9999
 11:15:29.753 [1632] 99912727026, 0.909096383486522, 0.818184126948664, 0.909096383486
 11:15:29.753 [1632] 522, 0.909096383486522, 0.499999969999882, 0.0624962462352102, 0.
 11:15:29.753 [1632] 0624962462352102, 0.0624962462352102, 
0, 0.0624962462352102, 0.0
 11:15:29.753 [1632] 624962462352102, 0.0624962462352102, 0.0624962462352102, 0.187500
 11:15:29.753 [1632] 738752911, 0.187500738752911, 0.12499849249406, 0.187500738752911
 11:15:29.753 [1632] , 0.12499849249406, 0.187500738752911, 0.187500738752911, 0.18750
 11:15:29.753 [1632] 0738752911, 0.187500738752911, 0.12499849249406, 0.12499849249406
 11:15:29.753 [1632] , 0.12499849249406, 0.187500738752911, 0.249996984988121, 0.18750
 11:15:29.753 [1632] 0738752911, 0.187500738752911, 0.12499849249406, 0.12499849249406
 11:15:29.753 [1632] , 0.187500738752911, 0.249996984988121, 0.249996984988121, 0.2499
 11:15:29.753 [1632] 96984988121, 0.312499231246971, 
0.249996984988121, 0.31249923124
 11:15:29.753 [1632] 6971, 0.312499231246971, 0.187500738752911, 0.187500738752911, 0.
 11:15:29.753 [1632] 187500738752911, 0.249996984988121, 0.187500738752911, 0.31249923
 11:15:29.753 [1632] 1246971, 0.249996984988121, 0.312499231246971, 0.375001477505821,
 11:15:29.753 [1632]  0.375001477505821, 0.375001477505821, 0.624998462493942, 0.99999
 11:15:29.753 [1632] 9939999764, 0.875001447505703, 0.875001447505703, 0.9375036937645
 11:15:29.753 [1632] 54, 0.590907875037838, 0.409092081325673, 0.0909078968560826, 0.0
 11:15:29.753 [1632] 454517666036076, 0, 0, 0.0454517666036076, 0, 0, 0.04545176660360
 11:15:29.753 [1632] 76, 0.0454517666036076, 
0.0909078968560826, 0.0909078968560826, 
 11:15:29.753 [1632] 0.0909078968560826, 0.0909078968560826, 0.0909078968560826, 0.181
 11:15:29.753 [1632] 815793712165, 0.136364027108558, 0.136364027108558, 0.13636402710
 11:15:29.753 [1632] 8558, 0.136364027108558, 0.0909078968560826, 0.136364027108558, 0
 11:15:29.753 [1632] .181815793712165, 0.136364027108558, 0.136364027108558, 0.1363640
 11:15:29.753 [1632] 27108558, 0.0909078968560826, 0.181815793712165, 0.18181579371216
 11:15:29.753 [1632] 5, 0.181815793712165, 0.181815793712165, 0.272728054217115, 0.181
 11:15:29.753 [1632] 815793712165, 0.22727192396464, 0.22727192396464, 0.1818157937121
 11:15:29.753 [1632] 65, 0.136364027108558, 
0.136364027108558, 0.181815793712165, 0.1
 11:15:29.753 [1632] 81815793712165, 0.22727192396464, 0.272728054217115, 0.2727280542
 11:15:29.753 [1632] 17115, 0.272728054217115, 0.363635951073198, 0.363635951073198, 0
 11:15:29.753 [1632] .499999978181756, 0.999999956363511, 0.772728032398871, 0.7727280
 11:15:29.753 [1632] 32398871, 0.466665585066701, 0.499999984000001, 0.366665588266701
 11:15:29.753 [1632] , 0.0999999968000001, 0.0333311989334017, 0, 0, 0, 0.033331198933
 11:15:29.753 [1632] 4017, 0, 0.0333311989334017, 0.0333311989334017, 0.09999999680000
 11:15:29.753 [1632] 01, 0.133331195733402, 0.0666655978667009, 0.0999999968000001, 0.
 11:15:29.753 [1632] 133331195733402, 
0.0999999968000001, 0.0666655978667009, 0.09999
 11:15:29.753 [1632] 99968000001, 0.133331195733402, 0.133331195733402, 0.133331195733
 11:15:29.753 [1632] 402, 0.0999999968000001, 0.133331195733402, 0.133331195733402, 0.
 11:15:29.753 [1632] 166665594666701, 0.0999999968000001, 0.0666655978667009, 0.099999
 11:15:29.753 [1632] 9968000001, 0.0999999968000001, 0.133331195733402, 0.099999996800
 11:15:29.753 [1632] 0001, 0.133331195733402, 0.1999999936, 0.233331192533402, 0.19999
 11:15:29.753 [1632] 99936, 0.233331192533402, 0.1999999936, 0.233331192533402, 0.1999
 11:15:29.753 [1632] 999936, 0.133331195733402, 0.1999999936, 0.1999999936, 0.16666559
 11:15:29.753 [1632] 4666701, 
0.166665594666701, 0.266665591466701, 0.3999999872, 0.4
 11:15:29.753 [1632] 33331186133402, 0.999999968000001, 0.633331179733402, 0.714285681
 11:15:29.753 [1632] 632655, 0.857142817959185, 0.999999954285716, 0.761901679455923, 
 11:15:29.753 [1632] 0.285714272653062, 0, 0, 0, 0, 0.0476159978232687, 0.095236567074
 11:15:29.753 [1632] 8998, 0.0952365670748998, 0.0476159978232687, 0.0952365670748998,
 11:15:29.753 [1632]  0.1904731341498, 0.1904731341498, 0.0476159978232687, 0.09523656
 11:15:29.753 [1632] 70748998, 0.142857136326531, 0.142857136326531, 0.142857136326531
 11:15:29.753 [1632] , 0.142857136326531, 0.1904731341498, 0.1904731341498, 0.14285713
 11:15:29.753 [1632] 6326531, 
0.0952365670748998, 0.142857136326531, 0.09523656707489
 11:15:29.753 [1632] 98, 0.0952365670748998, 0.142857136326531, 0.0952365670748998, 0.
 11:15:29.753 [1632] 0476159978232687, 0.0952365670748998, 0.0952365670748998, 0.19047
 11:15:29.753 [1632] 31341498, 0.285714272653062, 0.285714272653062, 0.238093703401431
 11:15:29.753 [1632] , 0.0952365670748998, 0.0476159978232687, 0.0476159978232687, 0.0
 11:15:29.753 [1632] 952365670748998, 0.0476159978232687, 0.142857136326531, 0.0952365
 11:15:29.753 [1632] 670748998, 0.0952365670748998, 0.1904731341498, 0.238093703401431
 11:15:29.753 [1632] , 0.380950839727962, 0.571428545306124, 0.666665112381023, 
0.999
 11:15:29.753 [1632] 999970909092, 0.666667616969669, 0.666667616969669, 0.78787779526
 11:15:29.753 [1632] 1737, 0.848485793498595, 0.424241442203885, 0.0606050891460337, 0
 11:15:29.753 [1632] .0606050891460337, 0.0303039991184291, 0, 0.0303039991184291, 0.0
 11:15:29.753 [1632] 909090882644629, 0.0909090882644629, 0.0303039991184291, 0.090909
 11:15:29.753 [1632] 0882644629, 0.121213087382892, 0.0606050891460337, 0.060605089146
 11:15:29.753 [1632] 0337, 0.0909090882644629, 0.151514177410497, 0.0303039991184291, 
 11:15:29.753 [1632] 0.0909090882644629, 0.0606050891460337, 0.0909090882644629, 0.090
 11:15:29.753 [1632] 9090882644629, 0.0606050891460337, 0.0303039991184291, 
0.0303039
 11:15:29.753 [1632] 991184291, 0.0606050891460337, 0.121213087382892, 0.0606050891460
 11:15:29.753 [1632] 337, 0.0909090882644629, 0.0606050891460337, 0.121213087382892, 0
 11:15:29.753 [1632] .0909090882644629, 0.121213087382892, 0.181818176528926, 0.242423
 11:15:29.753 [1632] 26567496, 0.212122175647355, 0.121213087382892, 0.060605089146033
 11:15:29.753 [1632] 7, 0.0606050891460337, 0.121213087382892, 0.151514177410497, 0.21
 11:15:29.753 [1632] 2122175647355, 0.212122175647355, 0.151514177410497, 0.1212130873
 11:15:29.753 [1632] 82892, 0.121213087382892, 0.181818176528926, 0.333332353939422, 0
 11:15:29.753 [1632] .361111990370347, 0.999999973333334, 
0.638887982962987, 0.611111
 11:15:29.753 [1632] 98370368, 0.694445314814792, 0.694445314814792, 0.472221320740765
 11:15:29.753 [1632] , 0.111111997037013, 0.0833333311111112, 0.0277786659259023, 0, 0
 11:15:29.753 [1632] .0277786659259023, 0.111111997037013, 0.0833333311111112, 0, 0.11
 11:15:29.753 [1632] 1111997037013, 0.13888799629632, 0.111111997037013, 0.13888799629
 11:15:29.753 [1632] 632, 0.166666662222222, 0.0833333311111112, 0.0833333311111112, 0
 11:15:29.753 [1632] .0833333311111112, 0.111111997037013, 0.166666662222222, 0.138887
 11:15:29.753 [1632] 99629632, 0.111111997037013, 0.0833333311111112, 0.13888799629632
 11:15:29.753 [1632] , 0.13888799629632, 
0.166666662222222, 0.111111997037013, 0.0833
 11:15:29.753 [1632] 333311111112, 0.0833333311111112, 0.13888799629632, 0.13888799629
 11:15:29.753 [1632] 632, 0.0833333311111112, 0.194445328148125, 0.222221327407431, 0.
 11:15:29.753 [1632] 194445328148125, 0.111111997037013, 0.0555546651852089, 0.1388879
 11:15:29.753 [1632] 9629632, 0.194445328148125, 0.194445328148125, 0.249999993333334,
 11:15:29.753 [1632]  0.277778659259236, 0.13888799629632, 0.222221327407431, 0.222221
 11:15:29.753 [1632] 327407431, 0.305554658518542, 0.0999999984, 0.183332797066675, 0.
 11:15:29.753 [1632] 583332790666675, 0.3499999944, 0.283332795466675, 0.3666655941333
 11:15:29.753 [1632] 5, 
0.333332794666675, 0.36666559413335, 0.0833327986666752, 0.06
 11:15:29.753 [1632] 66655989333504, 0.0666655989333504, 0, 0.0166655997333504, 0.0333
 11:15:29.753 [1632] 327994666752, 0.0499999992, 0.0499999992, 0.0333327994666752, 0.0
 11:15:29.753 [1632] 499999992, 0.0499999992, 0.0666655989333504, 0.0833327986666752, 
 11:15:29.753 [1632] 0.0499999992, 0.0999999984, 0.11666559813335, 0.0333327994666752,
 11:15:29.753 [1632]  0.0999999984, 0.0833327986666752, 0.0999999984, 0.03333279946667
 11:15:29.753 [1632] 52, 0.0833327986666752, 0.11666559813335, 0.133332797866675, 0.06
 11:15:29.753 [1632] 66655989333504, 0.0833327986666752, 0.0833327986666752, 
0.099999
 11:15:29.753 [1632] 9984, 0.0999999984, 0.0833327986666752, 0.1499999976, 0.183332797
 11:15:29.753 [1632] 066675, 0.183332797066675, 0.0666655989333504, 0.0499999992, 0.11
 11:15:29.753 [1632] 666559813335, 0.16666559733335, 0.1999999968, 0.1999999968, 0.183
 11:15:29.753 [1632] 332797066675, 0.0833327986666752, 0.1499999976, 0.16666559733335,
 11:15:29.753 [1632]  0.16666559733335, 0.333332794666675, 0.36666559413335, 0.9999999
 11:15:29.753 [1632] 84, 0.6999999888, 0.56666559093335, 0.6499999896, 0.6333327898666
 11:15:29.753 [1632] 75, 0.499999992, 0.21666559653335, 0.0999999984, 0.11666559813335
 11:15:29.753 [1632] , 0.0666655989333504, 0.0499999992, 0.0833327986666752, 
0.116665
 11:15:29.753 [1632] 59813335, 0.1499999976, 0.0999999984, 0.1999999968, 0.21666559653
 11:15:29.753 [1632] 335, 0.16666559733335, 0.133332797866675, 0.11666559813335, 0.066
 11:15:29.753 [1632] 6655989333504, 0.11666559813335, 0.0999999984, 0.0999999984, 0.14
 11:15:29.753 [1632] 99999976, 0.133332797866675, 0.0833327986666752, 0.0999999984, 0.
 11:15:29.753 [1632] 1499999976)

 
 11:15:29.755 [1633] 11:15:29.755 [1633] Fine tune kwargs | enc_learn: MOMENTPipeline(
 11:15:29.755 [1633] 
  (normalizer): RevIN()
  (tokenizer): Patching()
  (patch_embed
 11:15:29.755 [1633] ding): PatchEmbedding(
    (value_embedding): Linear(in_features=
 11:15:29.755 [1633] 8, out_features=512, bias=False)
    (position_embedding): Positi
 11:15:29.755 [1633] onalEmbedding()
    (dropout): Dropout(p=0.1, inplace=False)
  )

 11:15:29.755 [1633]   (encoder): T5Stack(
    (embed_tokens): Embedding(32128, 512)
 
 11:15:29.755 [1633]    (block): ModuleList(
      (0): T5Block(
        (layer): Modu
 11:15:29.755 [1633] leList(
          (0): T5LayerSelfAttention(
            (SelfAtt
 11:15:29.755 [1633] ention): T5Attention(
              (q): Linear(in_features=512, 
 11:15:29.755 [1633] out_features=384, bias=False)
              (k): Linear(in_featur
 11:15:29.755 [1633] es=512, out_features=384, bias=False)
              (v): Linear(i
 11:15:29.755 [1633] n_features=512, out_features=384, bias=False)
              (o): 
 11:15:29.755 [1633] Linear(in_features=384, out_features=512, bias=False)
           
 11:15:29.755 [1633]    (relative_attention_bias): Embedding(32, 6)
            )
    
 11:15:29.755 [1633]         (layer_norm): T5LayerNorm()
            (dropout): Dropou
 11:15:29.755 [1633] t(p=0.1, inplace=False)
          )
          (1): T5LayerFF(
   
 11:15:29.755 [1633]          (DenseReluDense): T5DenseGatedActDense(
              (w
 11:15:29.755 [1633] i_0): Linear(in_features=512, out_features=1024, bias=False)
    
 11:15:29.755 [1633]           (wi_1): Linear(in_features=512, out_features=1024, bias
 11:15:29.755 [1633] =False)
              (wo): Linear(in_features=1024, out_features
 11:15:29.755 [1633] =512, bias=False)
              (dropout): Dropout(p=0.1, inplace
 11:15:29.755 [1633] =False)
              (act): NewGELUActivation()
            )
  
 11:15:29.755 [1633]           (layer_norm): T5LayerNorm()
            (dropout): Drop
 11:15:29.755 [1633] out(p=0.1, inplace=False)
          )
        )
      )
      (1-
 11:15:29.755 [1633] 7): 7 x T5Block(
        (layer): ModuleList(
          (0): T5La
 11:15:29.755 [1633] yerSelfAttention(
            (SelfAttention): T5Attention(
     
 11:15:29.755 [1633]          (q): Linear(in_features=512, out_features=384, bias=Fals
 11:15:29.755 [1633] e)
              (k): Linear(in_features=512, out_features=384, b
 11:15:29.755 [1633] ias=False)
              (v): Linear(in_features=512, out_feature
 11:15:29.755 [1633] s=384, bias=False)
              (o): Linear(in_features=384, out
 11:15:29.755 [1633] _features=512, bias=False)
            )
            (layer_norm)
 11:15:29.755 [1633] : T5LayerNorm()
            (dropout): Dropout(p=0.1, inplace=Fal
 11:15:29.755 [1633] se)
          )
          (1): T5LayerFF(
            (DenseReluD
 11:15:29.755 [1633] ense): T5DenseGatedActDense(
              (wi_0): Linear(in_feat
 11:15:29.755 [1633] ures=512, out_features=1024, bias=False)
              (wi_1): Li
 11:15:29.755 [1633] near(in_features=512, out_features=1024, bias=False)
            
 11:15:29.755 [1633]   (wo): Linear(in_features=1024, out_features=512, bias=False)
  
 11:15:29.755 [1633]             (dropout): Dropout(p=0.1, inplace=False)
            
 11:15:29.755 [1633]   (act): NewGELUActivation()
            )
            (layer_nor
 11:15:29.755 [1633] m): T5LayerNorm()
            (dropout): Dropout(p=0.1, inplace=F
 11:15:29.755 [1633] alse)
          )
        )
      )
    )
    (final_layer_norm):
 11:15:29.755 [1633]  T5LayerNorm()
    (dropout): Dropout(p=0.1, inplace=False)
  )
 
 11:15:29.755 [1633]  (head): PretrainHead(
    (dropout): Dropout(p=0.1, inplace=Fals
 11:15:29.755 [1633] e)
    (linear): Linear(in_features=512, out_features=8, bias=Tru
 11:15:29.755 [1633] e)
  )
)

 
 11:15:29.758 [1634] 11:15:29.758 [1634] Fine tune kwargs | stride: 1

 
 11:15:29.758 [1635] 11:15:29.758 [1635] Fine tune kwargs | batch_size: 32

 
 11:15:29.758 [1636] 11:15:29.758 [1636] Fine tune kwargs | cpu: FALSE

 
 11:15:29.758 [1637] 11:15:29.758 [1637] Fine tune kwargs | to_numpy: TRUE

 
 11:15:29.759 [1638] 11:15:29.759 [1638] Fine tune kwargs | verbose: 1

 
 11:15:29.759 [1639] 11:15:29.759 [1639] Fine tune kwargs | time_flag: TRUE

 
 11:15:29.759 [1640] 11:15:29.759 [1640] Fine tune kwargs | n_windows_percent: 0.75

 
 11:15:29.759 [1641] 11:15:29.759 [1641] Fine tune kwargs | window_mask_percent: 1

 
 11:15:29.759 [1642] 11:15:29.759 [1642] Fine tune kwargs | training_percent: 1

 
 11:15:29.759 [1643] 11:15:29.759 [1643] Fine tune kwargs | validation_percent: 0.3

 
 11:15:29.760 [1644] 11:15:29.760 [1644] Fine tune kwargs | num_epochs: 10

 
 11:15:29.760 [1645] 11:15:29.760 [1645] Fine tune kwargs | shot: TRUE

 
 11:15:29.760 [1646] 11:15:29.760 [1646] Fine tune kwargs | eval_pre: TRUE

 
 11:15:29.760 [1647] 11:15:29.760 [1647] Fine tune kwargs | eval_post: TRUE

 
 11:15:29.760 [1648] 11:15:29.760 [1648] Fine tune kwargs | lr: 0.001

 
 11:15:29.761 [1649] 11:15:29.761 [1649] Fine tune kwargs | lr_scheduler_flag: FALSE

 
 11:15:29.761 [1650] 11:15:29.761 [1650] Fine tune kwargs | lr_scheduler_name: OneCycl
 11:15:29.761 [1650] eLR

 
 11:15:29.761 [1651] 11:15:29.761 [1651] Fine tune kwargs | lr_scheduler_num_warmup_st
 11:15:29.761 [1651] eps: 

 
 11:15:29.761 [1652] 11:15:29.761 [1652] Fine tune kwargs | window_sizes: 17

 
 11:15:29.761 [1653] 11:15:29.761 [1653] Fine tune kwargs | n_window_sizes: 5

 
 11:15:29.761 [1654] 11:15:29.761 [1654] Fine tune kwargs | window_sizes_offset: 0.05

 11:15:29.761 [1654] 
 
 11:15:29.762 [1655] 11:15:29.762 [1655] Fine tune kwargs | windows_min_distance: 10

 
 11:15:29.762 [1656] 11:15:29.762 [1656] Fine tune kwargs | full_dataset: 

 
 11:15:29.762 [1657] 11:15:29.762 [1657] Fine tune kwargs | mask_stateful: FALSE

 
 11:15:29.762 [1658] 11:15:29.762 [1658] Fine tune kwargs | mask_future: FALSE

 
 11:15:29.762 [1659] 11:15:29.762 [1659] Fine tune kwargs | mask_sync: FALSE

 [1] --> fine_tune_moment_
[1] fine_tune_moment_ | X not-windowed dataset
[1] fine_tune_moment_ | X not-windowed dataset | Selecting Fourier's dominant frequences
[1] fine_tune_moment_ | X not-windowed dataset | Selecting Fourier's dominant frequences | [3, 8, 17, 19, 20]
[1] fine_tune_moment_ | Building the datasets
[1] fine_tune_moment_ | Processing 5 datasets | First length : (438, 1, 3)
[1] fine_tune_moment_ | Setting up optimizer as AdamW
[1] fine_tune_moment_ | Processing wlen 3
[1] --> fine_tune_moment_single
[1] fine_tune_moment_single | Prepare the dataset
[1] fine_tune_moment_single | Selecting ds train | 329 windows
[1] fine_tune_moment_single | Selecting validation train | 99 windows
[1] fine_tune_moment_single | Train DataLoader | Random windows
[1] fine_tune_moment_single | Train DataLoader | DataLoader
[1] fine_tune_moment_single | Validation DataLoader
[1] fine_tune_moment_single | Eval Pre | wlen 3
Downloading builder script:   0%|          | 0.00/4.55k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 4.55k/4.55k [00:00<00:00, 9.99MB/s]
Downloading builder script:   0%|          | 0.00/4.49k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 4.49k/4.49k [00:00<00:00, 12.6MB/s]
Downloading builder script:   0%|          | 0.00/6.65k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 6.65k/6.65k [00:00<00:00, 16.2MB/s]
  0%|          | 0/4 [00:00<?, ?it/s]Warning: Error in : RuntimeError: maximum size for tensor at dimension 2 is 3 but size is 8

  50: <Anonymous>
  49: stop
  48: py_call_impl
  47: <Anonymous>
  45: observe [/home/macu/app/server.R#1599]
  44: <observer>
   1: shiny::runApp

 11:15:36.404 [1660] 11:15:36.404 [1660] --> embedding idx
 
 11:15:36.415 [1661] 11:15:36.415 [1661] embedding idx -->
 
 11:15:36.429 [1662] 11:15:36.429 [1662] ts_plot_dygraph || Before req| tsdf ?TRUE| pr
 11:15:36.429 [1662] j_object? TRUE| play ?TRUE| embs ?TRUE
 
 11:15:36.432 [1663] 11:15:36.432 [1663] **** ts_plot_dygraph ****
 
 11:15:36.432 [1664] 11:15:36.432 [1664] ts_plot_dygraph || ts_variables before ts_plo
 11:15:36.432 [1664] t original = volume; preprocessed = volume_preprocessed; complete
 11:15:36.432 [1664]  = volume, volume_preprocessed; selected = volume, volume_preproc
 11:15:36.432 [1664] essed
 
 11:15:36.436 [1665] 11:15:36.436 [1665] --> ts_plot | Before req 1 | wlen 17 | tsdf r
 11:15:36.436 [1665] eady? TRUE
 
 11:15:36.438 [1666] 11:15:36.438 [1666] ts_plot || ts variables Before ts_plot_base o
 11:15:36.438 [1666] riginal = volume; preprocessed = volume_preprocessed; complete = 
 11:15:36.438 [1666] volume, volume_preprocessed; selected = volume, volume_preprocess
 11:15:36.438 [1666] ed -->
 
 11:15:36.441 [1667] 11:15:36.441 [1667] ts_plot | bp
 
 11:15:36.442 [1668] 11:15:36.442 [1668] ts_plot | embedings idxs 
 
 11:15:36.442 [1669] 11:15:36.442 [1669] ts_plot | Before if
 
 11:15:36.442 [1670] 11:15:36.442 [1670] ts_plot | Else |  is null ids? FALSE embeddin
 11:15:36.442 [1670] g_ids~0 | plot windows ?TRUE
 
 11:15:36.443 [1671] 11:15:36.443 [1671] ts plot | Execution time: 0.00502371788024902
 11:15:36.443 [1671] 
 
 11:15:36.444 [1672] 11:15:36.444 [1672] ts plot | is null ts_plt ? FALSE
 
 11:15:36.444 [1673] 11:15:36.444 [1673] ts_plot -->
 
 11:15:36.444 [1674] 11:15:36.444 [1674] ts_plot_dygraph || ts_plot computed
 
 11:15:36.445 [1675] 11:15:36.445 [1675] ts_plot_dygraph || After callbacks
 
 11:15:36.445 [1676] 11:15:36.445 [1676] ts_plot dygraph | Execution_time: 0.012838125
 11:15:36.445 [1676] 2288818
 DEBUG: Writing to /var/log/shiny-server/app.logs
About to open the app
> shiny::runApp('/home/macu/app', host='0.0.0.0', port=3838)
Loading required package: shiny
Warning in shiny::runApp("/home/macu/app", host = "0.0.0.0", port = 3838) :
  Shiny Server v0.3.4 or later is required; please upgrade!

Attaching package: ‘shinyjs’

The following object is masked from ‘package:shiny’:

    runExample

The following objects are masked from ‘package:methods’:

    removeClass, show


Attaching package: ‘shinyWidgets’

The following object is masked from ‘package:shinyjs’:

    alert


Attaching package: ‘jsonlite’

The following object is masked from ‘package:purrr’:

    flatten

The following object is masked from ‘package:shiny’:

    validate


Attaching package: ‘data.table’

The following object is masked from ‘package:purrr’:

    transpose


Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘arrow’

The following objects are masked from ‘package:feather’:

    read_feather, write_feather

The following object is masked from ‘package:utils’:

    timestamp

Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric


######################### Warning from 'xts' package ##########################
#                                                                             #
# The dplyr lag() function breaks how base R's lag() function is supposed to  #
# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #
# source() into this session won't work correctly.                            #
#                                                                             #
# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #
# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #
# dplyr from breaking base R's lag() function.                                #
#                                                                             #
# Code in packages is not affected. It's protected by R's namespace mechanism #
# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #
#                                                                             #
###############################################################################

Attaching package: ‘xts’

The following objects are masked from ‘package:dplyr’:

    first, last

The following objects are masked from ‘package:data.table’:

    first, last


Attaching package: ‘semantic.dashboard’

The following objects are masked from ‘package:shiny’:

    column, icon

The following object is masked from ‘package:graphics’:

    box

/usr/local/share/miniconda3/envs/env/lib/python3.10/site-packages/transformers/utils/generic.py:311: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  torch.utils._pytree._register_pytree_node(
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
Oct2PyError: Octave evaluation error:
error: graphics_toolkit: fltk toolkit is not available
error: called from:
    graphics_toolkit at line 84, column 5
Octave is not ready. Please check the configuration

Listening on http://0.0.0.0:3838
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""

 12:15:42.931 [1] 12:15:42.931 [1] Execution id: 450, Start Timestamp: 20/12/24 12:
 12:15:42.931 [1] 15:42
 
 12:15:43.200 [2] 12:15:43.200 [2] observeEvent encoders list enc_l | update datase
 12:15:43.200 [2] t list | after freeze
 
 12:15:43.251 [3] 12:15:43.251 [3] observeEvent encoders list encs_l | update datas
 12:15:43.251 [3] et list -->
 
 12:15:43.257 [4] 12:15:43.257 [4] --> observeEvent input_encoder
 
 12:15:43.258 [5] 12:15:43.258 [5] observeEvent input_encoder | update wlen | Befor
 12:15:43.258 [5] e enc_ar
 
 12:15:43.260 [6] 12:15:43.260 [6] eventReactive enc_ar | Enc. Artifact: 
 
 12:15:43.556 [7] 12:15:43.556 [7] eventReactive enc_ar | Error: wandb.errors.CommE
 12:15:43.556 [7] rror: Attempted to fetch artifact without alias (e.g. "<artifact_
 12:15:43.556 [7] name>:v3" or "<artifact_name>:latest")

 
 12:15:43.556 [8] 12:15:43.556 [8] envent reactive enc_ar -->
 
 12:15:43.557 [9] 12:15:43.557 [9] observeEvent input_encoder | update wlen | enc_a
 12:15:43.557 [9] r: | Set wlen slider values
 
 12:15:43.558 [10] 12:15:43.558 [10] observeEvent input_encoder | update wlen | Set 
 12:15:43.558 [10] wlen slider values from w | 
 
 12:15:43.558 [11] 12:15:43.558 [11] observeEvent input_encoder | update wlen | enc_
 12:15:43.558 [11] ar$metadata$mvp_ws 
 
 12:15:43.558 [12] 12:15:43.558 [12] observeEvent input_encoder | update wlen | Upda
 12:15:43.558 [12] te slider input ws: (,  ) |  wlen: 
 
 12:15:43.619 [13] 12:15:43.619 [13] --> Observe clustering options
 
 12:15:43.621 [14] 12:15:43.621 [14] Observe clustering options -->
 
 12:15:43.638 [16] 12:15:43.638 [16] >>>> Toguether Log path: r_shiny_app_logs-450
 
 12:15:43.746 [17] 12:15:43.746 [17] --> prj_object
 
 12:15:43.747 [18] 12:15:43.747 [18] prj_object || Before prjs_comp
 
 12:15:43.748 [19] 12:15:43.748 [19] prjs_comp | Before req || DR: PCA_UMAP || embs?
 12:15:43.748 [19]  FALSE
 
 12:15:43.789 [21] 12:15:43.789 [21] mplot_start_computation |FALSE | Projections
 
 12:15:43.879 [22] 12:15:43.879 [22] --> eventReactive ts_ar | Update dataset artifa
 12:15:43.879 [22] ct | hash gtrends_kohls-denoised:v1
 [1] "TSDF READY A TRUE TRUE"

 12:15:44.048 [23] 12:15:44.048 [23] --> Update play_pause_button
 
 12:15:44.050 [24] 12:15:44.050 [24] Update play_pause_button || FALSE -->
 
 12:15:44.055 [25] 12:15:44.055 [25] --> Enable/disable embs
 
 12:15:44.056 [26] 12:15:44.056 [26] Enable/disable embs || disable embs
 
 12:15:44.059 [27] 12:15:44.059 [27] Enable/disable embs --> || Changes to FALSE
 
 12:15:44.060 [28] 12:15:44.060 [28] eventReactive ts_ar || tsdf_ready FALSE
 
 12:15:44.062 [29] 12:15:44.062 [29] eventReactive ts_ar tsdf_ready? FALSE -->
 
 12:15:44.067 [30] 12:15:44.067 [30] --> observeEvent input_dataset | update encoder
 12:15:44.067 [30]  list
 
 12:15:44.080 [31] 12:15:44.080 [31] observeEvent input_dataset | update encoders fo
 12:15:44.080 [31] r dataset gtrends_kohls-denoised:v1
 
 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | zeroshot-moment-small-embedding:v0
 12:15:44.226 [32] 

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | zeroshot-moirai-small:v0

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | moment-small-reconstruction:v1

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | moment-small-reconstruction:v0

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | moment-small-embedding:v4

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | moment-small-embedding:v3

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | moment-small-embedding:v1

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | moment-small-embedding:v0

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | moment-large-embedding:v2

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | moirai-small:v2

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | moirai-small:v1

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | moirai-small:v0

 12:15:44.226 [32] 12:15:44.226 [32] observeEvent input_dataset | Encoders for datas
 12:15:44.226 [32] et gtrends_kohls-denoised:v1 | moirai:v0
 
 12:15:44.229 [33] 12:15:44.229 [33] observeEvent input_dataset | update encoder lis
 12:15:44.229 [33] t -->
 
 12:15:44.293 [34] 12:15:44.293 [34] --> observe X | Before req | tsdf_ready FALSE |
 12:15:44.293 [34]  wlen 0 | stride 0 | allow update embs FALSE | play_prjs FALSE | 
 12:15:44.293 [34] tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 12:15:44.297 [35] 12:15:44.297 [35] --> observeEvent input_wlen | update slide stri
 12:15:44.297 [35] de value | wlen 0
 
 12:15:44.315 [36] 12:15:44.315 [36] observeEvent input_wlen | update slide stride v
 12:15:44.315 [36] alue | Error | 
 
 12:15:44.316 [37] 12:15:44.316 [37] observeEvent input_wlen | update slide stride v
 12:15:44.316 [37] alue | Finally |  wlen min 1 max 0 current value 0 -->
 
 12:15:44.431 [38] 12:15:44.431 [38] eventReactive enc_ar | Enc. Artifact: zeroshot-
 12:15:44.431 [38] moment-small-embedding:v0
 
 12:15:44.564 [39] 12:15:44.564 [39] envent reactive enc_ar -->
 
 12:15:44.593 [40] 12:15:44.593 [40] --> observeEvent input_encoder
 
 12:15:44.597 [41] 12:15:44.597 [41] observeEvent input_encoder | update wlen | Befo
 12:15:44.597 [41] re enc_ar
 
 12:15:44.597 [42] 12:15:44.597 [42] observeEvent input_encoder | update wlen | enc_
 12:15:44.597 [42] ar: <Artifact QXJ0aWZhY3Q6MTM1Mzc4Nzc3MQ==>| Set wlen slider valu
 12:15:44.597 [42] es
 
 12:15:44.598 [43] 12:15:44.598 [43] observeEvent input_encoder | update wlen | enc_
 12:15:44.598 [43] ar$metadata$mvp_ws 12

 12:15:44.598 [43] 12:15:44.598 [43] observeEvent input_encoder | update wlen | enc_
 12:15:44.598 [43] ar$metadata$mvp_ws 17
 
 12:15:44.599 [44] 12:15:44.599 [44] observeEvent input_encoder | update wlen | Upda
 12:15:44.599 [44] te slider input ws: (12, 17 ) |  wlen: 17
 
 12:15:44.601 [45] 12:15:44.601 [45] --> reactive enc_ar_stride
 
 12:15:44.601 [46] 12:15:44.601 [46] reactive_enc_ar_stride | --> 1
 
 12:15:44.669 [48] 12:15:44.669 [48] --> observe X | Before req | tsdf_ready FALSE |
 12:15:44.669 [48]  wlen 17 | stride 0 | allow update embs FALSE | play_prjs FALSE |
 12:15:44.669 [48]  tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 12:15:44.713 [49] 12:15:44.713 [49] --> observeEvent input_wlen | update slide stri
 12:15:44.713 [49] de value | wlen 17
 
 12:15:44.714 [50] 12:15:44.714 [50] enc_ar_stride: 1
 
 12:15:44.718 [51] 12:15:44.718 [51] oserveEvent input_wlen | update slide stride va
 12:15:44.718 [51] lue | Update stride to 1
 
 12:15:44.796 [54] 12:15:44.796 [54] --> observe X | Before req | tsdf_ready FALSE |
 12:15:44.796 [54]  wlen 17 | stride 1 | allow update embs FALSE | play_prjs FALSE |
 12:15:44.796 [54]  tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 12:15:46.004 [55] 12:15:46.004 [55] --> observeEvent input$play_pause
 
 12:15:46.008 [56] 12:15:46.008 [56] --> Update play_pause_button
 
 12:15:46.011 [57] 12:15:46.011 [57] Update play_pause_button | --> compute tsdf
 
 12:15:46.016 [58] 12:15:46.016 [58] tsdf_comp || before req | Input encoder zerosho
 12:15:46.016 [58] t-moment-small-embedding:v0 | Input dataset gtrends_kohls-denoise
 12:15:46.016 [58] d:v1 | ts_ar TRUE
 
 12:15:46.018 [59] 12:15:46.018 [59] --> Reactive tsdf | ts artifact <Artifact QXJ0a
 12:15:46.018 [59] WZhY3Q6MTM1MzgwNzc5NQ==>
 
 12:15:46.018 [60] 12:15:46.018 [60] Reactive tsdf | Read feather /home/macu/data/wa
 12:15:46.018 [60] ndb_artifacts/-4971690377167950097
 
 12:15:46.019 [61] 12:15:46.019 [61] Reactive tsdf | Read feather | Before | /home/m
 12:15:46.019 [61] acu/data/wandb_artifacts/-4971690377167950097
 
 12:15:46.067 [62] 12:15:46.067 [62] Reactive tsdf | Read feather | After | /home/ma
 12:15:46.067 [62] cu/data/wandb_artifacts/-4971690377167950097
 
 12:15:46.068 [63] 12:15:46.068 [63] Reactive tsdf | Read feather | Load time: 0.048
 12:15:46.068 [63] 5215187072754 seconds | N elements: 110
 
 12:15:46.071 [64] 12:15:46.071 [64] Log add | TSDF | Load dataset | Read feather
 
 12:15:46.071 [65] 12:15:46.071 [65] Reactive tsdf | Execution time: 0.0485215187072
 12:15:46.071 [65] 754 seconds | df ~ 110time

 12:15:46.071 [65] 12:15:46.071 [65] Reactive tsdf | Execution time: 0.0485215187072
 12:15:46.071 [65] 754 seconds | df ~ 2time
 [1] "TSDF READY A 4 TRUE"

 12:15:46.086 [66] 12:15:46.086 [66] Reactive tsdf | ts_variables original = NULL; p
 12:15:46.086 [66] reprocessed = NULL; complete = NULL; selected = NULL ready? FALSE
 12:15:46.086 [66] 
 
 12:15:46.101 [67] 12:15:46.101 [67] Update play_pause_button || TRUE -->
 
 12:15:46.102 [68] 12:15:46.102 [68] observeEvent input$play_pause | Run -->
 
 12:15:46.104 [69] 12:15:46.104 [69] --> observe update ts variables (1) || Tsdf mod
 12:15:46.104 [69] ified
 
 12:15:46.104 [70] 12:15:46.104 [70]  --> tsdf_variables_no_preprocess 
 
 12:15:46.106 [71] 12:15:46.106 [71] tsdf_variables_no_preprocess | original = volum
 12:15:46.106 [71] e; preprocessed = NULL; complete = volume; selected = volume--> g
 12:15:46.106 [71] eneric
 
 12:15:46.123 [72] 12:15:46.123 [72]  observe update ts variables (1) || ts variable
 12:15:46.123 [72] s original = volume; preprocessed = NULL; complete = volume; sele
 12:15:46.123 [72] cted = volume -->
 
 12:15:46.191 [74] 12:15:46.191 [74] --> eventReactive enc | load encoder 
 
 12:15:46.192 [75] 12:15:46.192 [75] eventReactive enc | load encoder | Check if the
 12:15:46.192 [75]  encoder file exists: /home/macu/data/wandb_artifacts/-7601696885
 12:15:46.192 [75] 029958941
 
 12:15:46.192 [76] 12:15:46.192 [76] eventReactive enc | load encoder -7601696885029
 12:15:46.192 [76] 958941 | --> Load from binary file 
 
 12:15:46.513 [77] 12:15:46.513 [77] eventReactive enc | load encoder | stride 1-->
 
 12:15:46.514 [78] 12:15:46.514 [78] --> observe X | Before req | tsdf_ready TRUE | 
 12:15:46.514 [78] wlen 17 | stride 1 | allow update embs FALSE | play_prjs FALSE | 
 12:15:46.514 [78] tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 12:15:46.539 [79] 12:15:46.539 [79] --> update_preprocess_sliders
 
 12:15:46.539 [80] 12:15:46.539 [80] update_preprocess_sliders -->
 
 12:15:46.539 [81] 12:15:46.539 [81] --> propose sizes 
 
 12:15:46.555 [82] 12:15:46.555 [82] propose sizes || volume
 
 12:15:46.573 [83] 12:15:46.573 [83] propose sizes --> 
 
 12:15:46.574 [84] 12:15:46.574 [84] --> propose section sizes
 
 12:15:46.575 [85] 12:15:46.575 [85] Proposed section sizes: 4, 8, 12, 16, 20
 
 12:15:46.580 [86] 12:15:46.580 [86] --> observe so_sections_count
 
 12:15:46.582 [87] 12:15:46.582 [87] observe so_sections_count -->
 
 12:15:46.583 [88] 12:15:46.583 [88] --> observe so_sections_size
 
 12:15:46.584 [89] 12:15:46.584 [89] observe so_sections_size -->
 
 12:15:46.587 [90] 12:15:46.587 [90] --> observe ss_text_rns
 
 12:15:46.587 [91] 12:15:46.587 [91] observe ss_text_rns -->
 
 12:15:46.590 [92] 12:15:46.590 [92] --> observe ss_text_rnsz
 
 12:15:46.590 [93] 12:15:46.590 [93] observe ss_text_rnsz-->
 
 12:15:46.592 [94] 12:15:46.592 [94] --> observe so_range_normalization_sections
 
 12:15:46.592 [95] 12:15:46.592 [95] observe so_range_normalization_sections -->
 
 12:15:46.593 [96] 12:15:46.593 [96] --> observe so_range_normalization_sections_siz
 12:15:46.593 [96] e
 
 12:15:46.594 [97] 12:15:46.594 [97] observe so_range_normalization_sections_size --
 12:15:46.594 [97] >
 
 12:15:46.596 [98] 12:15:46.596 [98] --> observe ss_range_normalization_sections
 
 12:15:46.597 [99] 12:15:46.597 [99] observe ss_range_normalization_sections -->
 
 12:15:46.599 [100] 12:15:46.599 [100] --> observe ss_range_normalization_sections_si
 12:15:46.599 [100] ze
 
 12:15:46.600 [101] 12:15:46.600 [101] observe ss_range_normalization_sections_size -
 12:15:46.600 [101] ->
 
 12:15:46.601 [102] 12:15:46.601 [102] --> observeEvent ts_variables selected | updat
 12:15:46.601 [102] e select variables choices
 
 12:15:46.606 [103] 12:15:46.606 [103] observeEvent ts_variables selected | update se
 12:15:46.606 [103] lect variables choices | ts_variables:original = volume; preproce
 12:15:46.606 [103] ssed = NULL; complete = volume; selected = volume -->
 
 12:15:46.651 [104] 12:15:46.651 [104] --> observe so_range_normalization_sections_si
 12:15:46.651 [104] ze
 
 12:15:46.652 [105] 12:15:46.652 [105] observe so_range_normalization_sections_size -
 12:15:46.652 [105] ->
 
 12:15:46.654 [106] 12:15:46.654 [106] --> observe ss_range_normalization_sections_si
 12:15:46.654 [106] ze
 
 12:15:46.655 [107] 12:15:46.655 [107] observe ss_range_normalization_sections_size -
 12:15:46.655 [107] ->
 
 12:15:46.656 [108] 12:15:46.656 [108] --> input$select_variables mod || update ts_va
 12:15:46.656 [108] riables$selected
 
 12:15:46.657 [109] 12:15:46.657 [109] input$select_variables mod || update ts_variab
 12:15:46.657 [109] les$selected -->
 
 12:15:47.440 [110] 12:15:47.440 [110] Play embs || Change button TRUE
 
 12:15:47.442 [111] 12:15:47.442 [111] --> Enable/disable embs
 
 12:15:47.442 [112] 12:15:47.442 [112] Enable/disable embs || enable embs
 
 12:15:47.445 [113] 12:15:47.445 [113] Enable/disable embs --> || Changes to TRUE
 
 12:15:47.446 [114] 12:15:47.446 [114] play_embs set to true, recompute projections_p
 12:15:47.446 [114] lot 
 
 12:15:47.447 [115] 12:15:47.447 [115]  projections_plot_comp || Before req | tsdf_re
 12:15:47.447 [115] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 12:15:47.447 [115] nc_input_path? /home/macu/data/wandb_artifacts/-49716903771679500
 12:15:47.447 [115] 97 | enc_input_ready? FALSE | play prjs? TRUE | play? TRUE
 
 12:15:47.451 [116] 12:15:47.451 [116] Play embs || Changes to TRUE
 
 12:15:47.458 [117] 12:15:47.458 [117] --> output$projections_plot
 
 12:15:47.459 [118] 12:15:47.459 [118] output$projections_plot -->
 
 12:15:47.482 [119] 12:15:47.482 [119] --> observe X | Before req | tsdf_ready TRUE |
 12:15:47.482 [119]  wlen 17 | stride 1 | allow update embs TRUE | play_prjs TRUE | t
 12:15:47.482 [119] sdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 12:15:47.484 [120] 12:15:47.484 [120] observe X | Update Sliding Window
 
 12:15:47.484 [121] 12:15:47.484 [121] observe X | wlen 17 | stride 1 | tsdf_ready() 
 12:15:47.484 [121] TRUE | ts_vars original = volume; preprocessed = NULL; complete =
 12:15:47.484 [121]  volume; selected = volume | Let's prepare data
 
 12:15:47.487 [122] 12:15:47.487 [122] observe X | SWV
 
 12:15:47.487 [123] 12:15:47.487 [123]  Enc input | observe X | ts_variables original
 12:15:47.487 [123]  = volume; preprocessed = NULL; complete = volume; selected = vol
 12:15:47.487 [123] ume
 
 12:15:47.490 [124] 12:15:47.490 [124] Enc input | Update X
 
 12:15:47.490 [125] 12:15:47.490 [125] Enc input | ReactiveVal X | Update Sliding Win
 12:15:47.490 [125] dow
 
 12:15:47.491 [126] 12:15:47.491 [126] Enc input | observe X | wlen 17 | stride 1 | L
 12:15:47.491 [126] et's prepare data
 
 12:15:47.491 [127] 12:15:47.491 [127] Enc input | observe X | ts_ar - id QXJ0aWZhY3Q
 12:15:47.491 [127] 6MTM1MzgwNzc5NQ== - name gtrends_kohls-denoised:v1
 
 12:15:47.493 [128] 12:15:47.493 [128] --> path_comp || 
 
 12:15:47.493 [129] 12:15:47.493 [129] path_comp || Dataset saved at: /home/macu/data
 12:15:47.493 [129] /wandb_artifacts/-4971690377167950097
 
 12:15:47.494 [130] 12:15:47.494 [130] path_comp --> || 
 
 12:15:47.494 [131] 12:15:47.494 [131] Enc input | observe X | path: /home/macu/data/
 12:15:47.494 [131] wandb_artifacts/-4971690377167950097
 py function: prepare_forecasting_data: <function prepare_forecasting_data at 0x7ff42528c4c0>
--> Exec with feather | reading input from /home/macu/data/wandb_artifacts/-4971690377167950097
--> Exec with feather | Apply function /home/macu/data/wandb_artifacts/-4971690377167950097
Exec with feather | time: 0.012021780014038086
Exec with feather --> /home/macu/data/wandb_artifacts/-4971690377167950097

 12:15:47.508 [132] 12:15:47.508 [132] Enc input | observe X | 1) enc_input~(93, 1, 1
 12:15:47.508 [132] 7)
 
 12:15:47.508 [133] 12:15:47.508 [133] Enc input | observe X | 2)enc_input~(93, 1, 17
 12:15:47.508 [133] )
 
 12:15:47.520 [134] 12:15:47.520 [134] Enc input | observe X | Update sliding window 
 12:15:47.520 [134] | Apply stride 1 | X=enc_input~(93, 1, 17)
 
 12:15:47.526 [135] 12:15:47.526 [135] observe X | SWV: 0.0392351150512695 secs 
 
 12:15:47.546 [136] 12:15:47.546 [136] Log add | observe X | SWV
 
 12:15:47.546 [137] 12:15:47.546 [137] observe X | Update sliding window | Exit 1 | e
 12:15:47.546 [137] nc_input~(93, 1, 17) | ts_variables original = volume; preprocess
 12:15:47.546 [137] ed = NULL; complete = volume; selected = volume-->
 
 12:15:47.556 [138] 12:15:47.556 [138] --> output$projections_plot
 
 12:15:47.639 [139] 12:15:47.639 [139]  projections_plot_comp || Before req | tsdf_re
 12:15:47.639 [139] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 12:15:47.639 [139] nc_input_path? /home/macu/data/wandb_artifacts/-49716903771679500
 12:15:47.639 [139] 97 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 12:15:47.642 [140] 12:15:47.642 [140] --> projections_plot_comp
 
 12:15:47.645 [141] 12:15:47.645 [141] embs_comp_or_cached || Before req enc_input_re
 12:15:47.645 [141] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 12:15:47.645 [141] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 12:15:47.645 [141] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 12:15:47.645 [141] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 12:15:47.646 [142] 12:15:47.646 [142] -->|| reactiveVal_compute_or_cached || embs_co
 12:15:47.646 [142] mp || 
 
 12:15:47.647 [143] 12:15:47.647 [143] || reactiveVal_compute_or_cached || embs_comp 
 12:15:47.647 [143] || First embedding computation, skipping cache
 
 12:15:47.648 [144] 12:15:47.648 [144] || reactiveVal_compute_or_cached || embs_comp 
 12:15:47.648 [144] ||  compute? TRUE-->
 
 12:15:47.649 [145] 12:15:47.649 [145] embs_comp_or_cached || --> embs | compute_flag
 12:15:47.649 [145]  TRUE
 
 12:15:47.649 [146] 12:15:47.649 [146] embs_comp || --> embs_comp | enc_input_ready T
 12:15:47.649 [146] RUE
 
 12:15:47.650 [147] 12:15:47.650 [147] embs_comp || tsdf ~ (110, 2)
 
 12:15:47.650 [148] 12:15:47.650 [148] embs_comp || X ~(93, 1, 17)
 
 12:15:47.650 [149] 12:15:47.650 [149] embs_comp ||get embeddings
 
 12:15:47.660 [150] 12:15:47.660 [150] embs_comp || get embeddings | Get batch size a
 12:15:47.660 [150] nd dataset
 
 12:15:47.931 [151] 12:15:47.931 [151] embs_comp || get embeddings (set stride set ba
 12:15:47.931 [151] tch size) | Stride 1 | batch size: 16 | stride: 1
 
 12:15:47.932 [152] 12:15:47.932 [152] embs_comp || get embeddings | Original stride:
 12:15:47.932 [152]  1
 
 12:15:47.933 [153] 12:15:47.933 [153] embs_comp || get embeddings (set stride set ba
 12:15:47.933 [153] tch size) | Chunk_size 10000000
 
 12:15:47.933 [154] 12:15:47.933 [154] embs_comp || get_enc_embs_set_stride_set_batch
 12:15:47.933 [154] _size | GPU | Before
 
 12:15:47.935 [155] 12:15:47.935 [155] embs_kwargs | Moment
 [1] --> get_enc_embs_set_stride_set_batch_size
[1] get_enc_embs_set_stride_set_batch_size | Moment | True
[1] get_acts_moment | Trial 1 | x_enc ~ torch.Size([93, 1, 17])
[1] get_acts_moment | Trial 1 | About to pad X (encoder input) | exception The size of tensor a (16) must match the size of tensor b (17) at non-singleton dimension 1 | padd step: 10
[1] get_acts_moment | Trial 1 | y ~ torch.Size([93, 1, 17])
[1] ------------------- Trial 1 | Padd -----------------
[1] get_acts_moment | Trial 2 | x_enc ~ torch.Size([93, 1, 27])
[1] get_acts_moment | Trial 2 | About to pad X (encoder input) | exception The size of tensor a (24) must match the size of tensor b (27) at non-singleton dimension 1 | padd step: 10
[1] get_acts_moment | Trial 2 | y ~ torch.Size([93, 1, 27])
[1] ------------------- Trial 2  -----------------
[1] ------------------- Trial 2 | a > a_old -----------------
[1] ------------------- Trial 2 |a > a_old | Reduced |  y ~ torch.Size([93, 1, 24]) -----------------
[1] get_acts_moment | Trial 3 | x_enc ~ torch.Size([93, 1, 24])
[1] get_acts_moment | Trial 3 | embs ~ torch.Size([93, 1, 3, 512])
[1] get_enc_embs_set_stride_set_batch_size | Before moving to CPU | embs~(93, 512)
[1] get_enc_embs_set_stride_set_batch_size | embs~(93, 512) -->

 12:15:49.319 [156] 12:15:49.319 [156] embs_comp || get_enc_embs_set_stride_set_batch
 12:15:49.319 [156] _size | GPU | After
 
 12:15:49.320 [157] 12:15:49.320 [157] embs_comp || get_enc_embs_set_stride_set_batch
 12:15:49.320 [157] _size embs ~ | 93

 12:15:49.320 [157] 12:15:49.320 [157] embs_comp || get_enc_embs_set_stride_set_batch
 12:15:49.320 [157] _size embs ~ | 512
 
 12:15:49.321 [158] 12:15:49.321 [158] get_enc_embs_set_stride_set_batch_size | GPU |
 12:15:49.321 [158]  total time: 1.66006374359131 secs thus 0.0276677290598551 mins |
 12:15:49.321 [158]  result ~93

 12:15:49.321 [158] 12:15:49.321 [158] get_enc_embs_set_stride_set_batch_size | GPU |
 12:15:49.321 [158]  total time: 1.66006374359131 secs thus 0.0276677290598551 mins |
 12:15:49.321 [158]  result ~512
 
 12:15:49.323 [159] 12:15:49.323 [159] Log add | Embeddings
 Garbage collection 35 = 26+4+5 (level 2) ... 
149.2 Mbytes of cons cells used (54%)
41.0 Mbytes of vectors used (53%)

 12:15:49.782 [160] 12:15:49.782 [160] embs_comp || get embeddings | 93 -->

 12:15:49.782 [160] 12:15:49.782 [160] embs_comp || get embeddings | 512 -->
 
 12:15:49.795 [161] 12:15:49.795 [161] embs_comp_or_cached || res ~93, 512
 
 12:15:49.796 [162] 12:15:49.796 [162] projections_plot_comp | embs? TRUE
 
 12:15:49.804 [163] 12:15:49.804 [163] --> embs_complete_cases
 
 12:15:49.804 [164] 12:15:49.804 [164] embs_complete_cases || Before complete cases e
 12:15:49.804 [164] mbs ~93, 512
 
 12:15:49.806 [165] 12:15:49.806 [165] embs_complete_cases || After complete cases em
 12:15:49.806 [165] bs ~
 
 12:15:49.806 [166] 12:15:49.806 [166] embs_complete_cases -->
 
 12:15:49.806 [167] 12:15:49.806 [167] projections_plot_comp | complete_cases? TRUE
 
 12:15:49.813 [168] 12:15:49.813 [168] projections_plot_comp | embs complete?TRUE
 
 12:15:49.814 [169] 12:15:49.814 [169]  projections_plot_comp || ts_variables:  origi
 12:15:49.814 [169] nal = volume; preprocessed = NULL; complete = volume; selected = 
 12:15:49.814 [169] volume
 
 12:15:49.818 [170] 12:15:49.818 [170] projections || Before req | dr_method PCA_UMAP
 12:15:49.818 [170]  | tsdf ready TRUE | update embs TRUE | enc_input_ready? TRUE
 
 12:15:49.819 [171] 12:15:49.819 [171] --> projections
 
 12:15:49.820 [172] 12:15:49.820 [172] projections || before prjs
 
 12:15:49.838 [173] 12:15:49.838 [173] --> prj_object
 
 12:15:49.838 [174] 12:15:49.838 [174] prj_object || Before prjs_comp
 
 12:15:49.853 [175] 12:15:49.853 [175] prjs_comp | Before req || DR: PCA_UMAP || embs
 12:15:49.853 [175] ? TRUE
 
 12:15:49.854 [176] 12:15:49.854 [176] --> || prjs_comp || Before switch || DR method
 12:15:49.854 [176] : PCA_UMAP
 
 12:15:49.855 [177] 12:15:49.855 [177] prjs_pca_umap || Before req | embs complete ca
 12:15:49.855 [177] ses? TRUE
 
 12:15:49.860 [178] 12:15:49.860 [178] --> prjs_pca_umap
 [W] [12:15:49.864457] Warning(`fit`): As of v0.16, PCA invoked without an n_components argument defauts to using min(n_samples, n_features) rather than 1
PCA prjs~(93, 93)
GPU | Used mem: 0
GPU | Used mem: 48
GPU | Memory Usage: [[90m--------------------[0m] [90m0%[0m
-- cuml.UMAP -- False

 12:15:52.692 [179] 12:15:52.692 [179] prjs_pca_umap -->
 
 12:15:52.694 [180] 12:15:52.694 [180] prjs_comp | res ~93, 2-->
 
 12:15:52.695 [181] 12:15:52.695 [181] prj_object || After prjs_comp res~93

 12:15:52.695 [181] 12:15:52.695 [181] prj_object || After prjs_comp res~2
 
 12:15:52.697 [182] 12:15:52.697 [182] prj_object || cpu_flag: GPU | DR: PCA_UMAP | E
 12:15:52.697 [182] xecution time: 2.85839176177979 | prjs ~ 93 seconds

 12:15:52.697 [182] 12:15:52.697 [182] prj_object || cpu_flag: GPU | DR: PCA_UMAP | E
 12:15:52.697 [182] xecution time: 2.85839176177979 | prjs ~ 2 seconds
 
 12:15:52.701 [183] 12:15:52.701 [183] prj_object -->
 
 12:15:52.704 [184] 12:15:52.704 [184] Log add | PRJ Object
 
 12:15:52.706 [185] 12:15:52.706 [185] projections || Compute clusters? no_clusters
 
 12:15:52.713 [186] 12:15:52.713 [186] Projections |prjs~(93, 2)-->
 
 12:15:52.715 [187] 12:15:52.715 [187]  projections_plot_comp || before highlight prj
 12:15:52.715 [187] s_~(93, 2)
 
 12:15:52.718 [188] 12:15:52.718 [188]  projections_plot_comp || Cluster prjs_~(93, 3
 12:15:52.718 [188] )
 
 12:15:52.719 [189] 12:15:52.719 [189] projections_plot_comp | GoGo Plot! 93
 
 12:15:52.719 [190] 12:15:52.719 [190] --> ggplot_base
 
 12:15:52.719 [191] 12:15:52.719 [191] ggplot_base -->
 
 12:15:52.823 [192] 12:15:52.823 [192] projections_plot_comp | Projections Plot time:
 12:15:52.823 [192]  3.00560736656189
 
 12:15:52.829 [193] 12:15:52.829 [193] Log add | Projections Plot
 
 12:15:52.830 [194] 12:15:52.830 [194] output$projections_plot -->
 
 12:15:53.077 [195] 12:15:53.077 [195] --> observe X | Before req | tsdf_ready TRUE |
 12:15:53.077 [195]  wlen 17 | stride 1 | allow update embs TRUE | play_prjs TRUE | t
 12:15:53.077 [195] sdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 12:15:53.079 [196] 12:15:53.079 [196] observe X | Update Sliding Window
 
 12:15:53.080 [197] 12:15:53.080 [197] observe X | wlen 17 | stride 1 | tsdf_ready() 
 12:15:53.080 [197] TRUE | ts_vars original = volume; preprocessed = NULL; complete =
 12:15:53.080 [197]  volume; selected = volume | Let's prepare data
 
 12:15:53.083 [198] 12:15:53.083 [198] observe X | SWV
 
 12:15:53.083 [199] 12:15:53.083 [199] Enc input | observe X | X already updated
 
 12:15:53.084 [200] 12:15:53.084 [200] observe X | SWV: 0.000439882278442383 secs 
 
 12:15:53.086 [201] 12:15:53.086 [201] Log add | observe X | SWV
 
 12:15:53.087 [202] 12:15:53.087 [202] observe X | Update sliding window | Exit 1 | e
 12:15:53.087 [202] nc_input~(93, 1, 17) | ts_variables original = volume; preprocess
 12:15:53.087 [202] ed = NULL; complete = volume; selected = volume-->
 
 12:15:53.097 [203] 12:15:53.097 [203] --> output$projections_plot
 
 12:15:53.098 [204] 12:15:53.098 [204]  projections_plot_comp || Before req | tsdf_re
 12:15:53.098 [204] ady? TRUE | tsdf_ready preprocessed? TRUE | update embs? TRUE | e
 12:15:53.098 [204] nc_input_path? /home/macu/data/wandb_artifacts/-49716903771679500
 12:15:53.098 [204] 97 | enc_input_ready? TRUE | play prjs? TRUE | play? TRUE
 
 12:15:53.101 [205] 12:15:53.101 [205] --> projections_plot_comp
 
 12:15:53.197 [206] 12:15:53.197 [206] embs_comp_or_cached || Before req enc_input_re
 12:15:53.197 [206] ady TRUE | play TRUE | play prjs TRUE | allow_update_embs TRUE | 
 12:15:53.197 [206] X | NOT NULL | enc | NOT NULL | tsdf_ready | TRUE | tsdf_ready_pr
 12:15:53.197 [206] eprocessed | TRUE | play? TRUE | play prjs? TRUE | tsdf_preproces
 12:15:53.197 [206] sed flag? TRUE
 [1] "embs_com_or_cached | after req"

 12:15:53.246 [207] 12:15:53.246 [207] -->|| reactiveVal_compute_or_cached || embs_co
 12:15:53.246 [207] mp || 
 
 12:15:53.247 [208] 12:15:53.247 [208] || reactiveVal_compute_or_cached || embs_comp 
 12:15:53.247 [208] ||  Use cached || params_prev gtrends_kohls-denoised:v1, zeroshot
 12:15:53.247 [208] -moment-small-embedding:v0, 17, 1, FALSE, FALSE, /home/macu/data/
 12:15:53.247 [208] wandb_artifacts/-4971690377167950097
 
 12:15:53.248 [209] 12:15:53.248 [209] || reactiveVal_compute_or_cached || embs_comp 
 12:15:53.248 [209] ||  Use cached || params_prev gtrends_kohls-denoised:v1, zeroshot
 12:15:53.248 [209] -moment-small-embedding:v0, 17, 1, FALSE, FALSE, /home/macu/data/
 12:15:53.248 [209] wandb_artifacts/-4971690377167950097
 
 12:15:53.248 [210] 12:15:53.248 [210] || reactiveVal_compute_or_cached || embs_comp 
 12:15:53.248 [210] ||  Use cached || null? FALSE || compute? || FALSE
 
 12:15:53.248 [211] 12:15:53.248 [211] || reactiveVal_compute_or_cached || embs_comp 
 12:15:53.248 [211] ||  compute? FALSE-->
 
 12:15:53.249 [212] 12:15:53.249 [212] embs_comp_or_cached || --> embs | compute_flag
 12:15:53.249 [212]  FALSE
 
 12:15:53.249 [213] 12:15:53.249 [213] embs_comp_or_cached || res ~93, 512
 
 12:15:53.249 [214] 12:15:53.249 [214] projections_plot_comp | embs? TRUE
 
 12:15:53.250 [215] 12:15:53.250 [215] --> embs_complete_cases
 
 12:15:53.250 [216] 12:15:53.250 [216] embs_complete_cases || Before complete cases e
 12:15:53.250 [216] mbs ~93, 512
 
 12:15:53.251 [217] 12:15:53.251 [217] embs_complete_cases || After complete cases em
 12:15:53.251 [217] bs ~93, 512
 
 12:15:53.252 [218] 12:15:53.252 [218] embs_complete_cases -->
 
 12:15:53.252 [219] 12:15:53.252 [219] projections_plot_comp | complete_cases? TRUE
 
 12:15:53.253 [220] 12:15:53.253 [220] projections_plot_comp | embs complete?TRUE
 
 12:15:53.254 [221] 12:15:53.254 [221]  projections_plot_comp || ts_variables:  origi
 12:15:53.254 [221] nal = volume; preprocessed = NULL; complete = volume; selected = 
 12:15:53.254 [221] volume
 
 12:15:53.258 [222] 12:15:53.258 [222]  projections_plot_comp || before highlight prj
 12:15:53.258 [222] s_~(93, 2)
 
 12:15:53.259 [223] 12:15:53.259 [223]  projections_plot_comp || Cluster prjs_~(93, 3
 12:15:53.259 [223] )
 
 12:15:53.259 [224] 12:15:53.259 [224] projections_plot_comp | GoGo Plot! 93
 
 12:15:53.302 [225] 12:15:53.302 [225] --> ggplot_base
 
 12:15:53.302 [226] 12:15:53.302 [226] ggplot_base -->
 
 12:15:53.337 [227] 12:15:53.337 [227] projections_plot_comp | Projections Plot time:
 12:15:53.337 [227]  0.079345703125
 
 12:15:53.340 [228] 12:15:53.340 [228] Log add | Projections Plot
 
 12:15:53.341 [229] 12:15:53.341 [229] output$projections_plot -->
 
 12:15:53.667 [230] 12:15:53.667 [230] --> embedding idx
 
 12:15:53.687 [231] 12:15:53.687 [231] embedding idx -->
 
 12:15:53.734 [232] 12:15:53.734 [232] ts_plot_dygraph || Before req| tsdf ?TRUE| prj
 12:15:53.734 [232] _object? TRUE| play ?TRUE| embs ?TRUE
 
 12:15:53.737 [233] 12:15:53.737 [233] **** ts_plot_dygraph ****
 
 12:15:53.737 [234] 12:15:53.737 [234] ts_plot_dygraph || ts_variables before ts_plot
 12:15:53.737 [234]  original = volume; preprocessed = NULL; complete = volume; selec
 12:15:53.737 [234] ted = volume
 
 12:15:53.740 [235] 12:15:53.740 [235] --> ts_plot | Before req 1 | wlen 17 | tsdf re
 12:15:53.740 [235] ady? TRUE
 
 12:15:53.742 [236] 12:15:53.742 [236] ts_plot || ts variables Before ts_plot_base or
 12:15:53.742 [236] iginal = volume; preprocessed = NULL; complete = volume; selected
 12:15:53.742 [236]  = volume -->
 
 12:15:53.747 [237] 12:15:53.747 [237] --> ts_plot_base
 
 12:15:53.748 [238] 12:15:53.748 [238] start_date --> 2012-06-07
 
 12:15:53.750 [239] 12:15:53.750 [239] end_date --> 2014-07-10
 
 12:15:53.750 [240] 12:15:53.750 [240] ts_plot_base | start_date: 2012-06-07 end_date
 12:15:53.750 [240] : 2014-07-10
 
 12:15:53.751 [241] 12:15:53.751 [241] ts_plot_base | colnames before select | volume
 12:15:53.751 [241] , timeindex
 
 12:15:53.751 [242] 12:15:53.751 [242] ts_plot_base | ts_variables before select | or
 12:15:53.751 [242] iginal = volume; preprocessed = NULL; complete = volume; selected
 12:15:53.751 [242]  = volume
 
 12:15:53.761 [243] 12:15:53.761 [243] ts_plot_base | colnames | volume
 
 12:15:53.763 [244] 12:15:53.763 [244] ts_plot_base | tsdf_xts time0.0127158164978027
 12:15:53.763 [244] 
 
 12:15:53.766 [245] 12:15:53.766 [245] Log add | Reactive X | SWV
 
 12:15:53.785 [246] 12:15:53.785 [246] ts_plot_base -->
 
 12:15:53.786 [247] 12:15:53.786 [247] ts_plot | bp
 
 12:15:53.787 [248] 12:15:53.787 [248] ts_plot | embedings idxs 
 
 12:15:53.787 [249] 12:15:53.787 [249] ts_plot | Before if
 
 12:15:53.788 [250] 12:15:53.788 [250] ts_plot | Else |  is null ids? FALSE embedding
 12:15:53.788 [250] _ids~0 | plot windows ?TRUE
 
 12:15:53.793 [251] 12:15:53.793 [251] ts plot | Execution time: 0.0508332252502441
 
 12:15:53.794 [252] 12:15:53.794 [252] ts plot | is null ts_plt ? FALSE
 
 12:15:53.794 [253] 12:15:53.794 [253] ts_plot -->
 
 12:15:53.795 [254] 12:15:53.795 [254] ts_plot_dygraph || ts_plot computed
 
 12:15:53.796 [255] 12:15:53.796 [255] ts_plot_dygraph || After callbacks
 
 12:15:53.797 [256] 12:15:53.797 [256] ts_plot dygraph | Execution_time: 0.0595574378
 12:15:53.797 [256] 967285
 
 12:15:53.927 [257] 12:15:53.927 [257] | JS PLOT RENDER | projections_plot, 6401
 
 12:15:53.929 [258] 12:15:53.929 [258] Log add | JS Plot Render projections_plot
 
 12:15:53.930 [259] 12:15:53.930 [259] | JS PLOT RENDER | ts_plot_dygraph, 4018
 
 12:15:53.932 [260] 12:15:53.932 [260] Log add | JS Plot Render ts_plot_dygraph
 DEBUG: Writing to /var/log/shiny-server/app.logs
About to open the app
> shiny::runApp('/home/macu/app', host='0.0.0.0', port=3838)
Loading required package: shiny
Warning in shiny::runApp("/home/macu/app", host = "0.0.0.0", port = 3838) :
  Shiny Server v0.3.4 or later is required; please upgrade!

Attaching package: ‘shinyjs’

The following object is masked from ‘package:shiny’:

    runExample

The following objects are masked from ‘package:methods’:

    removeClass, show


Attaching package: ‘shinyWidgets’

The following object is masked from ‘package:shinyjs’:

    alert


Attaching package: ‘jsonlite’

The following object is masked from ‘package:purrr’:

    flatten

The following object is masked from ‘package:shiny’:

    validate


Attaching package: ‘data.table’

The following object is masked from ‘package:purrr’:

    transpose


Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘arrow’

The following objects are masked from ‘package:feather’:

    read_feather, write_feather

The following object is masked from ‘package:utils’:

    timestamp

Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric


######################### Warning from 'xts' package ##########################
#                                                                             #
# The dplyr lag() function breaks how base R's lag() function is supposed to  #
# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #
# source() into this session won't work correctly.                            #
#                                                                             #
# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #
# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #
# dplyr from breaking base R's lag() function.                                #
#                                                                             #
# Code in packages is not affected. It's protected by R's namespace mechanism #
# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #
#                                                                             #
###############################################################################

Attaching package: ‘xts’

The following objects are masked from ‘package:dplyr’:

    first, last

The following objects are masked from ‘package:data.table’:

    first, last


Attaching package: ‘semantic.dashboard’

The following objects are masked from ‘package:shiny’:

    column, icon

The following object is masked from ‘package:graphics’:

    box

/usr/local/share/miniconda3/envs/env/lib/python3.10/site-packages/transformers/utils/generic.py:311: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  torch.utils._pytree._register_pytree_node(
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
Oct2PyError: Octave evaluation error:
error: graphics_toolkit: fltk toolkit is not available
error: called from:
    graphics_toolkit at line 84, column 5
Octave is not ready. Please check the configuration

Listening on http://0.0.0.0:3838
DEBUG: Writing to /var/log/shiny-server/app.logs
About to open the app
> shiny::runApp('/home/macu/app', host='0.0.0.0', port=3838)
Loading required package: shiny
Warning in shiny::runApp("/home/macu/app", host = "0.0.0.0", port = 3838) :
  Shiny Server v0.3.4 or later is required; please upgrade!

Attaching package: ‘shinyjs’

The following object is masked from ‘package:shiny’:

    runExample

The following objects are masked from ‘package:methods’:

    removeClass, show


Attaching package: ‘shinyWidgets’

The following object is masked from ‘package:shinyjs’:

    alert


Attaching package: ‘jsonlite’

The following object is masked from ‘package:purrr’:

    flatten

The following object is masked from ‘package:shiny’:

    validate


Attaching package: ‘data.table’

The following object is masked from ‘package:purrr’:

    transpose


Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘arrow’

The following objects are masked from ‘package:feather’:

    read_feather, write_feather

The following object is masked from ‘package:utils’:

    timestamp

Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric


######################### Warning from 'xts' package ##########################
#                                                                             #
# The dplyr lag() function breaks how base R's lag() function is supposed to  #
# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #
# source() into this session won't work correctly.                            #
#                                                                             #
# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #
# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #
# dplyr from breaking base R's lag() function.                                #
#                                                                             #
# Code in packages is not affected. It's protected by R's namespace mechanism #
# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #
#                                                                             #
###############################################################################

Attaching package: ‘xts’

The following objects are masked from ‘package:dplyr’:

    first, last

The following objects are masked from ‘package:data.table’:

    first, last


Attaching package: ‘semantic.dashboard’

The following objects are masked from ‘package:shiny’:

    column, icon

The following object is masked from ‘package:graphics’:

    box

/usr/local/share/miniconda3/envs/env/lib/python3.10/site-packages/transformers/utils/generic.py:311: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  torch.utils._pytree._register_pytree_node(
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
Downloading builder script:   0%|          | 0.00/4.55k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 4.55k/4.55k [00:00<00:00, 12.2MB/s]
Downloading builder script:   0%|          | 0.00/4.49k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 4.49k/4.49k [00:00<00:00, 13.4MB/s]
Downloading builder script:   0%|          | 0.00/6.65k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 6.65k/6.65k [00:00<00:00, 17.1MB/s]
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
Oct2PyError: Octave evaluation error:
error: graphics_toolkit: fltk toolkit is not available
error: called from:
    graphics_toolkit at line 84, column 5
Octave is not ready. Please check the configuration

Listening on http://0.0.0.0:3838
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""

 10:14:48.049 [1] 10:14:48.049 [1] Execution id: 452, Start Timestamp: 20/01/25 10:
 10:14:48.049 [1] 14:48
 
 10:14:48.274 [2] 10:14:48.274 [2] observeEvent encoders list enc_l | update datase
 10:14:48.274 [2] t list | after freeze
 
 10:14:48.337 [3] 10:14:48.337 [3] observeEvent encoders list encs_l | update datas
 10:14:48.337 [3] et list -->
 
 10:14:48.343 [4] 10:14:48.343 [4] --> observeEvent input_encoder
 
 10:14:48.344 [5] 10:14:48.344 [5] observeEvent input_encoder | update wlen | Befor
 10:14:48.344 [5] e enc_ar
 
 10:14:48.346 [6] 10:14:48.346 [6] eventReactive enc_ar | Enc. Artifact: 
 
 10:14:48.645 [7] 10:14:48.645 [7] eventReactive enc_ar | Error: wandb.errors.CommE
 10:14:48.645 [7] rror: Attempted to fetch artifact without alias (e.g. "<artifact_
 10:14:48.645 [7] name>:v3" or "<artifact_name>:latest")

 
 10:14:48.646 [8] 10:14:48.646 [8] envent reactive enc_ar -->
 
 10:14:48.648 [9] 10:14:48.648 [9] observeEvent input_encoder | update wlen | enc_a
 10:14:48.648 [9] r: | Set wlen slider values
 
 10:14:48.648 [10] 10:14:48.648 [10] observeEvent input_encoder | update wlen | Set 
 10:14:48.648 [10] wlen slider values from w | 
 
 10:14:48.648 [11] 10:14:48.648 [11] observeEvent input_encoder | update wlen | enc_
 10:14:48.648 [11] ar$metadata$mvp_ws 
 
 10:14:48.649 [12] 10:14:48.649 [12] observeEvent input_encoder | update wlen | Upda
 10:14:48.649 [12] te slider input ws: (,  ) |  wlen: 
 
 10:14:48.706 [13] 10:14:48.706 [13] --> Observe clustering options
 
 10:14:48.708 [14] 10:14:48.708 [14] Observe clustering options -->
 
 10:14:48.728 [16] 10:14:48.728 [16] >>>> Toguether Log path: r_shiny_app_logs-452
 
 10:14:48.847 [17] 10:14:48.847 [17] --> prj_object
 
 10:14:48.847 [18] 10:14:48.847 [18] prj_object || Before prjs_comp
 
 10:14:48.848 [19] 10:14:48.848 [19] prjs_comp | Before req || DR: PCA_UMAP || embs?
 10:14:48.848 [19]  FALSE
 
 10:14:48.904 [21] 10:14:48.904 [21] mplot_start_computation |FALSE | Projections
 
 10:14:49.029 [22] 10:14:49.029 [22] --> eventReactive ts_ar | Update dataset artifa
 10:14:49.029 [22] ct | hash gtrends_kohls-denoised:v1
 [1] "TSDF READY A TRUE TRUE"

 10:14:49.228 [23] 10:14:49.228 [23] --> Update play_pause_button
 
 10:14:49.231 [24] 10:14:49.231 [24] Update play_pause_button || FALSE -->
 
 10:14:49.236 [25] 10:14:49.236 [25] --> Enable/disable embs
 
 10:14:49.236 [26] 10:14:49.236 [26] Enable/disable embs || disable embs
 
 10:14:49.239 [27] 10:14:49.239 [27] Enable/disable embs --> || Changes to FALSE
 
 10:14:49.240 [28] 10:14:49.240 [28] eventReactive ts_ar || tsdf_ready FALSE
 
 10:14:49.242 [29] 10:14:49.242 [29] eventReactive ts_ar tsdf_ready? FALSE -->
 
 10:14:49.247 [30] 10:14:49.247 [30] --> observeEvent input_dataset | update encoder
 10:14:49.247 [30]  list
 
 10:14:49.250 [31] 10:14:49.250 [31] observeEvent input_dataset | update encoders fo
 10:14:49.250 [31] r dataset gtrends_kohls-denoised:v1
 
 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | zeroshot-moment-small-embedding:v0
 10:14:49.611 [32] 

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | zeroshot-moirai-small:v0

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | moment-small-reconstruction:v1

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | moment-small-reconstruction:v0

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | moment-small-embedding:v4

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | moment-small-embedding:v3

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | moment-small-embedding:v1

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | moment-small-embedding:v0

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | moment-large-embedding:v2

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | moirai-small:v2

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | moirai-small:v1

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | moirai-small:v0

 10:14:49.611 [32] 10:14:49.611 [32] observeEvent input_dataset | Encoders for datas
 10:14:49.611 [32] et gtrends_kohls-denoised:v1 | moirai:v0
 
 10:14:49.614 [33] 10:14:49.614 [33] observeEvent input_dataset | update encoder lis
 10:14:49.614 [33] t -->
 
 10:14:49.678 [34] 10:14:49.678 [34] --> observe X | Before req | tsdf_ready FALSE |
 10:14:49.678 [34]  wlen 0 | stride 0 | allow update embs FALSE | play_prjs FALSE | 
 10:14:49.678 [34] tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:14:49.683 [35] 10:14:49.683 [35] --> observeEvent input_wlen | update slide stri
 10:14:49.683 [35] de value | wlen 0
 
 10:14:49.701 [36] 10:14:49.701 [36] observeEvent input_wlen | update slide stride v
 10:14:49.701 [36] alue | Error | 
 
 10:14:49.701 [37] 10:14:49.701 [37] observeEvent input_wlen | update slide stride v
 10:14:49.701 [37] alue | Finally |  wlen min 1 max 0 current value 0 -->
 
 10:14:49.860 [38] 10:14:49.860 [38] eventReactive enc_ar | Enc. Artifact: zeroshot-
 10:14:49.860 [38] moment-small-embedding:v0
 
 10:14:49.998 [39] 10:14:49.998 [39] envent reactive enc_ar -->
 
 10:14:50.027 [40] 10:14:50.027 [40] --> observeEvent input_encoder
 
 10:14:50.031 [41] 10:14:50.031 [41] observeEvent input_encoder | update wlen | Befo
 10:14:50.031 [41] re enc_ar
 
 10:14:50.031 [42] 10:14:50.031 [42] observeEvent input_encoder | update wlen | enc_
 10:14:50.031 [42] ar: <Artifact QXJ0aWZhY3Q6MTM1Mzc4Nzc3MQ==>| Set wlen slider valu
 10:14:50.031 [42] es
 
 10:14:50.032 [43] 10:14:50.032 [43] observeEvent input_encoder | update wlen | enc_
 10:14:50.032 [43] ar$metadata$mvp_ws 12

 10:14:50.032 [43] 10:14:50.032 [43] observeEvent input_encoder | update wlen | enc_
 10:14:50.032 [43] ar$metadata$mvp_ws 17
 
 10:14:50.033 [44] 10:14:50.033 [44] observeEvent input_encoder | update wlen | Upda
 10:14:50.033 [44] te slider input ws: (12, 17 ) |  wlen: 17
 
 10:14:50.035 [45] 10:14:50.035 [45] --> reactive enc_ar_stride
 
 10:14:50.036 [46] 10:14:50.036 [46] reactive_enc_ar_stride | --> 1
 
 10:14:50.052 [48] 10:14:50.052 [48] --> observe X | Before req | tsdf_ready FALSE |
 10:14:50.052 [48]  wlen 17 | stride 0 | allow update embs FALSE | play_prjs FALSE |
 10:14:50.052 [48]  tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:14:50.086 [49] 10:14:50.086 [49] --> observeEvent input_wlen | update slide stri
 10:14:50.086 [49] de value | wlen 17
 
 10:14:50.087 [50] 10:14:50.087 [50] enc_ar_stride: 1
 
 10:14:50.091 [51] 10:14:50.091 [51] oserveEvent input_wlen | update slide stride va
 10:14:50.091 [51] lue | Update stride to 1
 
 10:14:50.118 [54] 10:14:50.118 [54] --> observe X | Before req | tsdf_ready FALSE |
 10:14:50.118 [54]  wlen 17 | stride 1 | allow update embs FALSE | play_prjs FALSE |
 10:14:50.118 [54]  tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:15:04.832 [55] 10:15:04.832 [55] --> eventReactive ts_ar | Update dataset artifa
 10:15:04.832 [55] ct | hash gtrends_kohls:v0
 [1] "TSDF READY A TRUE TRUE"

 10:15:04.961 [56] 10:15:04.961 [56] eventReactive ts_ar || tsdf_ready FALSE
 
 10:15:04.963 [57] 10:15:04.963 [57] eventReactive ts_ar tsdf_ready? FALSE -->
 
 10:15:05.001 [58] 10:15:05.001 [58] --> observeEvent input_dataset | update encoder
 10:15:05.001 [58]  list
 
 10:15:05.005 [59] 10:15:05.005 [59] observeEvent input_dataset | update encoders fo
 10:15:05.005 [59] r dataset gtrends_kohls:v0
 
 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | zeroshot-moment-small-embedding:v0

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | zeroshot-moirai-small:v0

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | moment-small-reconstruction:v1

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | moment-small-reconstruction:v0

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | moment-small-embedding:v4

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | moment-small-embedding:v3

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | moment-small-embedding:v1

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | moment-small-embedding:v0

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | moment-large-embedding:v2

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | moirai-small:v2

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | moirai-small:v1

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | moirai-small:v0

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | moirai:v0

 10:15:05.165 [60] 10:15:05.165 [60] observeEvent input_dataset | Encoders for datas
 10:15:05.165 [60] et gtrends_kohls:v0 | mvp:v183
 
 10:15:05.167 [61] 10:15:05.167 [61] observeEvent input_dataset | update encoder lis
 10:15:05.167 [61] t -->
 
 10:15:05.216 [62] 10:15:05.216 [62] eventReactive enc_ar | Enc. Artifact: zeroshot-
 10:15:05.216 [62] moment-small-embedding:v0
 
 10:15:05.342 [63] 10:15:05.342 [63] envent reactive enc_ar -->
 
 10:15:05.345 [64] 10:15:05.345 [64] --> observeEvent input_encoder
 
 10:15:05.349 [65] 10:15:05.349 [65] observeEvent input_encoder | update wlen | Befo
 10:15:05.349 [65] re enc_ar
 
 10:15:05.349 [66] 10:15:05.349 [66] observeEvent input_encoder | update wlen | enc_
 10:15:05.349 [66] ar: <Artifact QXJ0aWZhY3Q6MTM1Mzc4Nzc3MQ==>| Set wlen slider valu
 10:15:05.349 [66] es
 
 10:15:05.350 [67] 10:15:05.350 [67] observeEvent input_encoder | update wlen | enc_
 10:15:05.350 [67] ar$metadata$mvp_ws 12

 10:15:05.350 [67] 10:15:05.350 [67] observeEvent input_encoder | update wlen | enc_
 10:15:05.350 [67] ar$metadata$mvp_ws 17
 
 10:15:05.351 [68] 10:15:05.351 [68] observeEvent input_encoder | update wlen | Upda
 10:15:05.351 [68] te slider input ws: (12, 17 ) |  wlen: 17
 
 10:15:05.353 [69] 10:15:05.353 [69] --> reactive enc_ar_stride
 
 10:15:05.353 [70] 10:15:05.353 [70] reactive_enc_ar_stride | --> 1
 
 10:15:05.369 [72] 10:15:05.369 [72] --> observeEvent input_wlen | update slide stri
 10:15:05.369 [72] de value | wlen 17
 
 10:15:05.370 [73] 10:15:05.370 [73] enc_ar_stride: 1
 
 10:15:05.373 [74] 10:15:05.373 [74] oserveEvent input_wlen | update slide stride va
 10:15:05.373 [74] lue | Update stride to 1
 
 10:15:05.419 [77] 10:15:05.419 [77] --> observe X | Before req | tsdf_ready FALSE |
 10:15:05.419 [77]  wlen 17 | stride 1 | allow update embs FALSE | play_prjs FALSE |
 10:15:05.419 [77]  tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:15:25.052 [78] 10:15:25.052 [78] --> observeEvent input$play_pause
 
 10:15:25.055 [79] 10:15:25.055 [79] --> Update play_pause_button
 
 10:15:25.059 [80] 10:15:25.059 [80] Update play_pause_button | --> compute tsdf
 
 10:15:25.061 [81] 10:15:25.061 [81] tsdf_comp || before req | Input encoder zerosho
 10:15:25.061 [81] t-moment-small-embedding:v0 | Input dataset gtrends_kohls:v0 | ts
 10:15:25.061 [81] _ar TRUE
 
 10:15:25.063 [82] 10:15:25.063 [82] --> Reactive tsdf | ts artifact <Artifact QXJ0a
 10:15:25.063 [82] WZhY3Q6MTM1MzgwNDc1OQ==>
 
 10:15:25.064 [83] 10:15:25.064 [83] Reactive tsdf | Read feather /home/macu/data/wa
 10:15:25.064 [83] ndb_artifacts/-7635916990915258888
 
 10:15:25.064 [84] 10:15:25.064 [84] Reactive tsdf | Read feather | Before | /home/m
 10:15:25.064 [84] acu/data/wandb_artifacts/-7635916990915258888
 
 10:15:25.123 [85] 10:15:25.123 [85] Reactive tsdf | Read feather | After | /home/ma
 10:15:25.123 [85] cu/data/wandb_artifacts/-7635916990915258888
 
 10:15:25.123 [86] 10:15:25.123 [86] Reactive tsdf | Read feather | Load time: 0.058
 10:15:25.123 [86] 3486557006836 seconds | N elements: 440
 
 10:15:25.126 [87] 10:15:25.126 [87] Log add | TSDF | Load dataset | Read feather
 
 10:15:25.127 [88] 10:15:25.127 [88] Reactive tsdf | Execution time: 0.0583486557006
 10:15:25.127 [88] 836 seconds | df ~ 440time

 10:15:25.127 [88] 10:15:25.127 [88] Reactive tsdf | Execution time: 0.0583486557006
 10:15:25.127 [88] 836 seconds | df ~ 2time
 [1] "TSDF READY A 4 TRUE"

 10:15:25.142 [89] 10:15:25.142 [89] Reactive tsdf | ts_variables original = NULL; p
 10:15:25.142 [89] reprocessed = NULL; complete = NULL; selected = NULL ready? FALSE
 10:15:25.142 [89] 
 
 10:15:25.157 [90] 10:15:25.157 [90] Update play_pause_button || TRUE -->
 
 10:15:25.157 [91] 10:15:25.157 [91] observeEvent input$play_pause | Run -->
 
 10:15:25.159 [92] 10:15:25.159 [92] --> observe update ts variables (1) || Tsdf mod
 10:15:25.159 [92] ified
 
 10:15:25.160 [93] 10:15:25.160 [93]  --> tsdf_variables_no_preprocess 
 
 10:15:25.162 [94] 10:15:25.162 [94] tsdf_variables_no_preprocess | original = volum
 10:15:25.162 [94] e; preprocessed = NULL; complete = volume; selected = volume--> g
 10:15:25.162 [94] eneric
 
 10:15:25.178 [95] 10:15:25.178 [95]  observe update ts variables (1) || ts variable
 10:15:25.178 [95] s original = volume; preprocessed = NULL; complete = volume; sele
 10:15:25.178 [95] cted = volume -->
 
 10:15:25.248 [97] 10:15:25.248 [97] --> eventReactive enc | load encoder 
 
 10:15:25.249 [98] 10:15:25.249 [98] eventReactive enc | load encoder | Check if the
 10:15:25.249 [98]  encoder file exists: /home/macu/data/wandb_artifacts/-7601696885
 10:15:25.249 [98] 029958941
 
 10:15:25.249 [99] 10:15:25.249 [99] eventReactive enc | load encoder -7601696885029
 10:15:25.249 [99] 958941 | --> Load from binary file 
 
 10:15:25.983 [100] 10:15:25.983 [100] eventReactive enc | load encoder | stride 1-->
 10:15:25.983 [100] 
 
 10:15:25.985 [101] 10:15:25.985 [101] --> observe X | Before req | tsdf_ready TRUE |
 10:15:25.985 [101]  wlen 17 | stride 1 | allow update embs FALSE | play_prjs FALSE |
 10:15:25.985 [101]  tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:15:26.010 [102] 10:15:26.010 [102] --> update_preprocess_sliders
 
 10:15:26.010 [103] 10:15:26.010 [103] update_preprocess_sliders -->
 
 10:15:26.011 [104] 10:15:26.011 [104] --> propose sizes 
 
 10:15:26.017 [105] 10:15:26.017 [105] propose sizes || volume
 Warning: Error in : TypeError: find_dominant_window_sizes_list() got an unexpected keyword argument 'verbose'

  1: shiny::runApp

 10:15:26.038 [106] 10:15:26.038 [106] --> observe so_sections_count
 
 10:15:26.039 [107] 10:15:26.039 [107] observe so_sections_count -->
 
 10:15:26.041 [108] 10:15:26.041 [108] --> observe so_sections_size
 
 10:15:26.042 [109] 10:15:26.042 [109] observe so_sections_size -->
 
 10:15:26.044 [110] 10:15:26.044 [110] --> observe ss_text_rns
 
 10:15:26.045 [111] 10:15:26.045 [111] observe ss_text_rns -->
 
 10:15:26.047 [112] 10:15:26.047 [112] --> observe ss_text_rnsz
 
 10:15:26.048 [113] 10:15:26.048 [113] observe ss_text_rnsz-->
 
 10:15:26.049 [114] 10:15:26.049 [114] --> observe so_range_normalization_sections
 
 10:15:26.049 [115] 10:15:26.049 [115] observe so_range_normalization_sections -->
 
 10:15:26.051 [116] 10:15:26.051 [116] --> observe so_range_normalization_sections_si
 10:15:26.051 [116] ze
 
 10:15:26.051 [117] 10:15:26.051 [117] observe so_range_normalization_sections_size -
 10:15:26.051 [117] ->
 
 10:15:26.054 [118] 10:15:26.054 [118] --> observe ss_range_normalization_sections
 
 10:15:26.054 [119] 10:15:26.054 [119] observe ss_range_normalization_sections -->
 
 10:15:26.057 [120] 10:15:26.057 [120] --> observe ss_range_normalization_sections_si
 10:15:26.057 [120] ze
 
 10:15:26.057 [121] 10:15:26.057 [121] observe ss_range_normalization_sections_size -
 10:15:26.057 [121] ->
 
 10:15:26.058 [122] 10:15:26.058 [122] --> observeEvent ts_variables selected | updat
 10:15:26.058 [122] e select variables choices
 
 10:15:26.063 [123] 10:15:26.063 [123] observeEvent ts_variables selected | update se
 10:15:26.063 [123] lect variables choices | ts_variables:original = volume; preproce
 10:15:26.063 [123] ssed = NULL; complete = volume; selected = volume -->
 
 10:16:08.250 [124] 10:16:08.250 [124] Execution id: 453, Start Timestamp: 20/01/25 1
 10:16:08.250 [124] 0:16:08
 
 10:16:08.393 [125] 10:16:08.393 [125] observeEvent encoders list enc_l | update data
 10:16:08.393 [125] set list | after freeze
 
 10:16:08.413 [126] 10:16:08.413 [126] observeEvent encoders list encs_l | update dat
 10:16:08.413 [126] aset list -->
 
 10:16:08.419 [127] 10:16:08.419 [127] --> observeEvent input_encoder
 
 10:16:08.420 [128] 10:16:08.420 [128] observeEvent input_encoder | update wlen | Bef
 10:16:08.420 [128] ore enc_ar
 
 10:16:08.421 [129] 10:16:08.421 [129] eventReactive enc_ar | Enc. Artifact: 
 
 10:16:08.551 [130] 10:16:08.551 [130] eventReactive enc_ar | Error: wandb.errors.Com
 10:16:08.551 [130] mError: Attempted to fetch artifact without alias (e.g. "<artifac
 10:16:08.551 [130] t_name>:v3" or "<artifact_name>:latest")

 
 10:16:08.552 [131] 10:16:08.552 [131] envent reactive enc_ar -->
 
 10:16:08.552 [132] 10:16:08.552 [132] observeEvent input_encoder | update wlen | enc
 10:16:08.552 [132] _ar: | Set wlen slider values
 
 10:16:08.553 [133] 10:16:08.553 [133] observeEvent input_encoder | update wlen | Set
 10:16:08.553 [133]  wlen slider values from w | 
 
 10:16:08.553 [134] 10:16:08.553 [134] observeEvent input_encoder | update wlen | enc
 10:16:08.553 [134] _ar$metadata$mvp_ws 
 
 10:16:08.553 [135] 10:16:08.553 [135] observeEvent input_encoder | update wlen | Upd
 10:16:08.553 [135] ate slider input ws: (,  ) |  wlen: 
 
 10:16:08.602 [136] 10:16:08.602 [136] --> Observe clustering options
 
 10:16:08.603 [137] 10:16:08.603 [137] Observe clustering options -->
 
 10:16:08.620 [139] 10:16:08.620 [139] >>>> Toguether Log path: r_shiny_app_logs-453
 
 10:16:08.661 [140] 10:16:08.661 [140] --> prj_object
 
 10:16:08.661 [141] 10:16:08.661 [141] prj_object || Before prjs_comp
 
 10:16:08.662 [142] 10:16:08.662 [142] prjs_comp | Before req || DR: PCA_UMAP || embs
 10:16:08.662 [142] ? FALSE
 
 10:16:08.712 [144] 10:16:08.712 [144] mplot_start_computation |FALSE | Projections
 
 10:16:08.856 [145] 10:16:08.856 [145] --> observeEvent input_dataset | update encode
 10:16:08.856 [145] r list
 
 10:16:08.860 [146] 10:16:08.860 [146] observeEvent input_dataset | update encoders f
 10:16:08.860 [146] or dataset gtrends_kohls-denoised:v1
 
 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | zeroshot-moment-small-embedding:v
 10:16:09.094 [147] 0

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | zeroshot-moirai-small:v0

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | moment-small-reconstruction:v1

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | moment-small-reconstruction:v0

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | moment-small-embedding:v4

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | moment-small-embedding:v3

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | moment-small-embedding:v1

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | moment-small-embedding:v0

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | moment-large-embedding:v2

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | moirai-small:v2

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | moirai-small:v1

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | moirai-small:v0

 10:16:09.094 [147] 10:16:09.094 [147] observeEvent input_dataset | Encoders for data
 10:16:09.094 [147] set gtrends_kohls-denoised:v1 | moirai:v0
 
 10:16:09.097 [148] 10:16:09.097 [148] observeEvent input_dataset | update encoder li
 10:16:09.097 [148] st -->
 
 10:16:09.099 [149] 10:16:09.099 [149] --> eventReactive ts_ar | Update dataset artif
 10:16:09.099 [149] act | hash gtrends_kohls-denoised:v1
 [1] "TSDF READY A TRUE TRUE"

 10:16:09.228 [150] 10:16:09.228 [150] --> Update play_pause_button
 
 10:16:09.231 [151] 10:16:09.231 [151] Update play_pause_button || FALSE -->
 
 10:16:09.236 [152] 10:16:09.236 [152] --> Enable/disable embs
 
 10:16:09.236 [153] 10:16:09.236 [153] Enable/disable embs || disable embs
 
 10:16:09.239 [154] 10:16:09.239 [154] Enable/disable embs --> || Changes to FALSE
 
 10:16:09.240 [155] 10:16:09.240 [155] eventReactive ts_ar || tsdf_ready FALSE
 
 10:16:09.242 [156] 10:16:09.242 [156] eventReactive ts_ar tsdf_ready? FALSE -->
 
 10:16:09.245 [157] 10:16:09.245 [157] --> observeEvent input_wlen | update slide str
 10:16:09.245 [157] ide value | wlen 0
 
 10:16:09.248 [158] 10:16:09.248 [158] observeEvent input_wlen | update slide stride 
 10:16:09.248 [158] value | Error | 
 
 10:16:09.248 [159] 10:16:09.248 [159] observeEvent input_wlen | update slide stride 
 10:16:09.248 [159] value | Finally |  wlen min 1 max 0 current value 0 -->
 
 10:16:09.250 [160] 10:16:09.250 [160] --> observe X | Before req | tsdf_ready FALSE 
 10:16:09.250 [160] | wlen 0 | stride 0 | allow update embs FALSE | play_prjs FALSE |
 10:16:09.250 [160]  tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 
 10:16:09.347 [161] 10:16:09.347 [161] eventReactive enc_ar | Enc. Artifact: zeroshot
 10:16:09.347 [161] -moment-small-embedding:v0
 
 10:16:09.491 [162] 10:16:09.491 [162] envent reactive enc_ar -->
 
 10:16:09.495 [163] 10:16:09.495 [163] --> observeEvent input_encoder
 
 10:16:09.498 [164] 10:16:09.498 [164] observeEvent input_encoder | update wlen | Bef
 10:16:09.498 [164] ore enc_ar
 
 10:16:09.499 [165] 10:16:09.499 [165] observeEvent input_encoder | update wlen | enc
 10:16:09.499 [165] _ar: <Artifact QXJ0aWZhY3Q6MTM1Mzc4Nzc3MQ==>| Set wlen slider val
 10:16:09.499 [165] ues
 
 10:16:09.500 [166] 10:16:09.500 [166] observeEvent input_encoder | update wlen | enc
 10:16:09.500 [166] _ar$metadata$mvp_ws 12

 10:16:09.500 [166] 10:16:09.500 [166] observeEvent input_encoder | update wlen | enc
 10:16:09.500 [166] _ar$metadata$mvp_ws 17
 
 10:16:09.501 [167] 10:16:09.501 [167] observeEvent input_encoder | update wlen | Upd
 10:16:09.501 [167] ate slider input ws: (12, 17 ) |  wlen: 17
 
 10:16:09.503 [168] 10:16:09.503 [168] --> reactive enc_ar_stride
 
 10:16:09.504 [169] 10:16:09.504 [169] reactive_enc_ar_stride | --> 1
 
 10:16:09.523 [171] 10:16:09.523 [171] --> observeEvent input_wlen | update slide str
 10:16:09.523 [171] ide value | wlen 17
 
 10:16:09.524 [172] 10:16:09.524 [172] enc_ar_stride: 1
 
 10:16:09.527 [173] 10:16:09.527 [173] oserveEvent input_wlen | update slide stride v
 10:16:09.527 [173] alue | Update stride to 1
 
 10:16:09.572 [176] 10:16:09.572 [176] --> observe X | Before req | tsdf_ready FALSE 
 10:16:09.572 [176] | wlen 17 | stride 1 | allow update embs FALSE | play_prjs FALSE 
 10:16:09.572 [176] | tsdf_ready_preprocessed TRUE | embs preprocess FALSE
 DEBUG: Writing to /var/log/shiny-server/app.logs
About to open the app
> shiny::runApp('/home/macu/app', host='0.0.0.0', port=3838)
Loading required package: shiny
Warning in shiny::runApp("/home/macu/app", host = "0.0.0.0", port = 3838) :
  Shiny Server v0.3.4 or later is required; please upgrade!

Attaching package: ‘shinyjs’

The following object is masked from ‘package:shiny’:

    runExample

The following objects are masked from ‘package:methods’:

    removeClass, show


Attaching package: ‘shinyWidgets’

The following object is masked from ‘package:shinyjs’:

    alert


Attaching package: ‘jsonlite’

The following object is masked from ‘package:purrr’:

    flatten

The following object is masked from ‘package:shiny’:

    validate


Attaching package: ‘data.table’

The following object is masked from ‘package:purrr’:

    transpose


Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘arrow’

The following objects are masked from ‘package:feather’:

    read_feather, write_feather

The following object is masked from ‘package:utils’:

    timestamp

Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric


######################### Warning from 'xts' package ##########################
#                                                                             #
# The dplyr lag() function breaks how base R's lag() function is supposed to  #
# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #
# source() into this session won't work correctly.                            #
#                                                                             #
# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #
# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #
# dplyr from breaking base R's lag() function.                                #
#                                                                             #
# Code in packages is not affected. It's protected by R's namespace mechanism #
# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #
#                                                                             #
###############################################################################

Attaching package: ‘xts’

The following objects are masked from ‘package:dplyr’:

    first, last

The following objects are masked from ‘package:data.table’:

    first, last


Attaching package: ‘semantic.dashboard’

The following objects are masked from ‘package:shiny’:

    column, icon

The following object is masked from ‘package:graphics’:

    box

/usr/local/share/miniconda3/envs/env/lib/python3.10/site-packages/transformers/utils/generic.py:311: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  torch.utils._pytree._register_pytree_node(
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
Downloading builder script:   0%|          | 0.00/4.55k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 4.55k/4.55k [00:00<00:00, 13.1MB/s]
Downloading builder script:   0%|          | 0.00/4.49k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 4.49k/4.49k [00:00<00:00, 11.2MB/s]
Downloading builder script:   0%|          | 0.00/6.65k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 6.65k/6.65k [00:00<00:00, 18.9MB/s]
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
Oct2PyError: Octave evaluation error:
error: graphics_toolkit: fltk toolkit is not available
error: called from:
    graphics_toolkit at line 84, column 5
Octave is not ready. Please check the configuration

Listening on http://0.0.0.0:3838
DEBUG: Writing to /var/log/shiny-server/app.logs
About to open the app
> shiny::runApp('/home/macu/app', host='0.0.0.0', port=3838)
Loading required package: shiny
Warning in shiny::runApp("/home/macu/app", host = "0.0.0.0", port = 3838) :
  Shiny Server v0.3.4 or later is required; please upgrade!

Attaching package: ‘shinyjs’

The following object is masked from ‘package:shiny’:

    runExample

The following objects are masked from ‘package:methods’:

    removeClass, show


Attaching package: ‘shinyWidgets’

The following object is masked from ‘package:shinyjs’:

    alert


Attaching package: ‘jsonlite’

The following object is masked from ‘package:purrr’:

    flatten

The following object is masked from ‘package:shiny’:

    validate


Attaching package: ‘data.table’

The following object is masked from ‘package:purrr’:

    transpose


Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘arrow’

The following objects are masked from ‘package:feather’:

    read_feather, write_feather

The following object is masked from ‘package:utils’:

    timestamp

Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric


######################### Warning from 'xts' package ##########################
#                                                                             #
# The dplyr lag() function breaks how base R's lag() function is supposed to  #
# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #
# source() into this session won't work correctly.                            #
#                                                                             #
# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #
# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #
# dplyr from breaking base R's lag() function.                                #
#                                                                             #
# Code in packages is not affected. It's protected by R's namespace mechanism #
# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #
#                                                                             #
###############################################################################

Attaching package: ‘xts’

The following objects are masked from ‘package:dplyr’:

    first, last

The following objects are masked from ‘package:data.table’:

    first, last


Attaching package: ‘semantic.dashboard’

The following objects are masked from ‘package:shiny’:

    column, icon

The following object is masked from ‘package:graphics’:

    box

/usr/local/share/miniconda3/envs/env/lib/python3.10/site-packages/transformers/utils/generic.py:311: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  torch.utils._pytree._register_pytree_node(
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
Downloading builder script:   0%|          | 0.00/4.55k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 4.55k/4.55k [00:00<00:00, 10.9MB/s]
Downloading builder script:   0%|          | 0.00/4.49k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 4.49k/4.49k [00:00<00:00, 11.5MB/s]
Downloading builder script:   0%|          | 0.00/6.65k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 6.65k/6.65k [00:00<00:00, 17.5MB/s]
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
Oct2PyError: Octave evaluation error:
error: graphics_toolkit: fltk toolkit is not available
error: called from:
    graphics_toolkit at line 84, column 5
Octave is not ready. Please check the configuration

Listening on http://0.0.0.0:3838
DEBUG: Writing to /var/log/shiny-server/app.logs
About to open the app
> shiny::runApp('/home/macu/app', host='0.0.0.0', port=3838)
Loading required package: shiny
Warning in shiny::runApp("/home/macu/app", host = "0.0.0.0", port = 3838) :
  Shiny Server v0.3.4 or later is required; please upgrade!

Attaching package: ‘shinyjs’

The following object is masked from ‘package:shiny’:

    runExample

The following objects are masked from ‘package:methods’:

    removeClass, show


Attaching package: ‘shinyWidgets’

The following object is masked from ‘package:shinyjs’:

    alert


Attaching package: ‘jsonlite’

The following object is masked from ‘package:purrr’:

    flatten

The following object is masked from ‘package:shiny’:

    validate


Attaching package: ‘data.table’

The following object is masked from ‘package:purrr’:

    transpose


Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘arrow’

The following objects are masked from ‘package:feather’:

    read_feather, write_feather

The following object is masked from ‘package:utils’:

    timestamp

Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric


######################### Warning from 'xts' package ##########################
#                                                                             #
# The dplyr lag() function breaks how base R's lag() function is supposed to  #
# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #
# source() into this session won't work correctly.                            #
#                                                                             #
# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #
# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #
# dplyr from breaking base R's lag() function.                                #
#                                                                             #
# Code in packages is not affected. It's protected by R's namespace mechanism #
# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #
#                                                                             #
###############################################################################

Attaching package: ‘xts’

The following objects are masked from ‘package:dplyr’:

    first, last

The following objects are masked from ‘package:data.table’:

    first, last


Attaching package: ‘semantic.dashboard’

The following objects are masked from ‘package:shiny’:

    column, icon

The following object is masked from ‘package:graphics’:

    box

/usr/local/share/miniconda3/envs/env/lib/python3.10/site-packages/transformers/utils/generic.py:311: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  torch.utils._pytree._register_pytree_node(
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
Downloading builder script:   0%|          | 0.00/4.55k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 4.55k/4.55k [00:00<00:00, 10.1MB/s]
Downloading builder script:   0%|          | 0.00/4.49k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 4.49k/4.49k [00:00<00:00, 11.7MB/s]
Downloading builder script:   0%|          | 0.00/6.65k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 6.65k/6.65k [00:00<00:00, 17.0MB/s]
[1] "CUDA AVAILABLE. Num devices: 2"
[1] ""
Oct2PyError: Octave evaluation error:
error: graphics_toolkit: fltk toolkit is not available
error: called from:
    graphics_toolkit at line 84, column 5
Octave is not ready. Please check the configuration

Listening on http://0.0.0.0:3838
