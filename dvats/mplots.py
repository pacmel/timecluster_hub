# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/mplots.ipynb.

# %% auto 0
__all__ = ['eammon_drive_mplots', 'Time', 'GD_Mat']

# %% ../nbs/mplots.ipynb 1
import time

class Time:
    def __init__(self):
        self.time_start = None
        self.time_end = None
        self.time_total = 0

    def start(self): 
        self.time_start = time.time()
        return self.time_start

    def end(self):
        self.time_end = time.time()
        return self.time_end
        
    def duration(self):
        self.time_total=self.time_end - self.time_start
        return self.duration

    def __str__(self):
        """
        RepresentaciÃ³n en cadena de la clase Time.

        :return: Cadena que representa la instancia de Time.
        """
        if (self.time_total == 0): self.duration();
        return f"Time Start: {self.time_start}, Time End: {self.time_end}, Duration: {self.time_total}"


# %% ../nbs/mplots.ipynb 2
import dvats.load as load
import os

# %% ../nbs/mplots.ipynb 3
class GD_Mat:
    def __init__(self, id,  name, data_path = '~/data'):
        self.id = id
        self.data_path = os.path.expanduser(data_path)
        self.zip_path = os.path.join(self.data_path, name + '.zip')
        self.mat_path = os.path.join(self.data_path, name + '.mat')
        self.mats_files = None
        self.mats = None
        self.mats_df =  None
        self.num_mats = 0
        self.num_mats_extracted = 0
        
    def download_file_from_google_drive(self):
        return load.download_file_from_google_drive(self.id, self.zip_path)
        
    def get_mat_files(self):
        self.mats_files = [f for f in load.zip_contents(self.zip_path) if not f.startswith('__MACOSX/')]
        self.num_mats = len(self.mats_files)
        self.mats = self.mats_df = [None]*self.num_mats
    
    def unzip_mat(self, all_one, case = '', print_flag = False): 
        str = load.unzip_mat(all_one, self.zip_path, self.data_path, case, print_flag)
        self.get_mat_files()
        return str
        
    def mat2csv(self, case_id, print_flag = False):
        if print_flag: print("--> mat2csv", case_id)
        case = self.mats_files[case_id]
        case_path = os.path.join(self.data_path, case)
        print("Mat2csv case", case_path)
        self.mats_df[case_id] = load.mat2csv(case_path, self.data_path, print_flag)
        if print_flag: print("mat2csv", case_id, "-->")
        
    def __str__(self): 
        str = f"FileID: {self.id}\nData path: {self.data_path}\n"
        str += f"zip path: {self.zip_path}\nmat_files: {self.mats_files}"
        str +=f"\nnum_mats: {self.num_mats}"
        return str
    

# %% ../nbs/mplots.ipynb 5
eammon_drive_mplots = {
    'insects0': {
        id: '1qq1z2mVRd7PzDqX0TDAwY7BcWVjnXUfQ',
        name: 'InsectData-fig11'
    }
}
