{"title":"Timecluster hub","markdown":{"yaml":{"description":"Hub for different visual analytics approaches for high-dimensional time series. Inspired by the paper [\"Timecluster: dimension reduction applied to temporal data for visual analytics\"](https://link.springer.com/article/10.1007/s00371-019-01673-y)","title":"Timecluster hub"},"headingText":"Deploy","containsRefs":false,"markdown":"\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\nThe main intention of this repo is twofold:\n1. Replicate the ideas of the Timecluster paper, and apply them to the data from PACMEL.\n2. Extend the ideas of the paper for high-dimensional time series. The idea is to find the most important variables that make that a time window from\nthe original space (high-dimensional time series) is mapped to a specific point of the final 2D space, and focus only on them, to make it easier for the\ndomain expert to analyse and cluster the behaviour of the process.\n\nThe visual part of this repo can also be used as a testbed to validate different approaches to unsupervised learning for time series data. This includes clustering, anomaly detection, segmentation, annotation...\n\n\nTo run the notebooks and the app, install `docker` and `docker-compose` in your system. \nThen, create a new *.env* file in the root of the project following the structure:\n```\n# The name of the docker-compose project\nCOMPOSE_PROJECT_NAME=your_project_name\n# The user ID you are using to run docker-compose\nUSER_ID=your_numeric_id\n# The group ID you are using to run docker-compose (you can get it with id -g in a terminal)\nGROUP_ID=your_numeric_id\n# The user name assigned to the user id\nUSER_NAME=your_user_name\n# The port from which you want to access Jupyter lab\nJUPYTER_PORT=XXXX\n# The port from which you want to access RStudio server\nRSTUDIO_PORT=XXXX\n# The password you want to access RStudio server (user is given by USER_NAME)\nRSTUDIO_PASSWD=XXXX\n# The path to your data files to train/test the models\nLOCAL_DATA_PATH=/path/to/your/data\n# The W&B personal API key (see https://wandb.ai/authorize)\nWANDB_API_KEY=your_wandb_api_key\n```\n\nYou'll also need to have a `.gitconfig` file in your home folder. It can be an empty file that you create manually, or it can contain your git global configuration. For the latter case, run:\n- `git config --global user.name \"YOUR NAME IN THIS GITLAB INSTANCE\"`\n- `git config --global user.email \"YOUR EMAIL IN THIS GITLAB INSTANCE\"`\n\nThis will automatically create the `~/.gitconfig` file in your home folder.\n\nFinally, in a terminal located in the root of this repository, run:\n\n```docker-compose up -d --build```\n\nthen go to `localhost:{{JUPYTER_PORT}}` to run the notebooks or go to `localhost:{{RSTUDIO_PORT}}` to run the app. In case you are working in a remote server, replace `localhost` with the IP of your remote server.\n\n## Contribute\n\nThis project has been created using [nbdev](https://github.com/fastai/nbdev), a library that allows to create Python projects directly from Jupyter Notebooks. Please refer to this library when adding new functionalities to the project, in order to keep the structure of it.\n\nWe recommend using the following procedure to contribute and resolve issues in the repository:\n\n1. Because the project uses nbdev, we need to run `nbdev_install_git_hooks` the first time after the repo is cloned and deployed; this ensures that our notebooks are automatically cleaned and trusted whenever we push to Github/Gitlab. The command has to be run from within the container. Also, it can be run from outside if you pip install nbdev in your local machine.\n\n1. Create a local branch in your development environment to solve the issue XX (or add a new functionality), with the name you want to give your merge request (use something that will be easy for you to remember in the future if you need to update your request):\n    ```\n    git checkout -b issueXX\n    ```\n\n2. Make whatever changes you want to make in the code and notebooks, and remember to run nbdev_build_lib when you're done to ensure that the libraries are built from your notebook changes (unless you only changed markdown, in which case that's not needed). It's also a good idea to check the output of git diff to ensure that you haven't accidentally made more changes than you planned.\n\n3. Make a commit of the changes made\n    ``` \n    git commit -am \"Fix issue #XX\"\n    ```\n\n4. Test that there are not merging problems in the Jupyter Notebooks with the function [**nbdev_fix_merge**](https://nbdev.fast.ai/cli#nbdev_fix_merge)\n\n5.  Push your local branch to a branch in the gitlab repository with an identiffying name:\n    ```\n    git push -u origin HEAD\n    ```\n6. When the push is made, a link will appear in the terminal to create a merge request. Click on it.\n    ```\n    remote:\n    remote: To create a merge request for test_branch, visit:\n    remote:   https://gitlab.geist.re/pml/x_timecluster_extension/-/merge_requests/new?merge_request%5Bsource_branch%5D=issueXX_solved\n    remote:\n    ```\n7. In the gitlab website:\n    * Write in the description what is the problem to solve with your branch using a hyperlink to the issue (just use the hashtag symbol \"#\" followed by the issue number) \n    * Click on the option \"Delete source branch when merge request is accepted\" and assign the merge to your profile.\n    * Click on the button \"Create merge request\"\n![image](/uploads/da18a985a69973ad62a60bc6564304b9/image.png)\n\n8. Wait to the merge to be accepted. In case you're solving an issue, we recommend to move the issue to the field \"In review\" (in the Issue Board). To keep your branch up to date with the changes to the main repo, run:\n```\ngit pull upstream master\n```\n\n9. If there are no problems, the merge request will be accepted and the issue will be closed. Once your PR has been merged or rejected, you can delete your branch if you don't need it any more:\n```\ngit branch -d issueXX\n```\n","srcMarkdownNoYaml":"\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\nThe main intention of this repo is twofold:\n1. Replicate the ideas of the Timecluster paper, and apply them to the data from PACMEL.\n2. Extend the ideas of the paper for high-dimensional time series. The idea is to find the most important variables that make that a time window from\nthe original space (high-dimensional time series) is mapped to a specific point of the final 2D space, and focus only on them, to make it easier for the\ndomain expert to analyse and cluster the behaviour of the process.\n\nThe visual part of this repo can also be used as a testbed to validate different approaches to unsupervised learning for time series data. This includes clustering, anomaly detection, segmentation, annotation...\n\n## Deploy\n\nTo run the notebooks and the app, install `docker` and `docker-compose` in your system. \nThen, create a new *.env* file in the root of the project following the structure:\n```\n# The name of the docker-compose project\nCOMPOSE_PROJECT_NAME=your_project_name\n# The user ID you are using to run docker-compose\nUSER_ID=your_numeric_id\n# The group ID you are using to run docker-compose (you can get it with id -g in a terminal)\nGROUP_ID=your_numeric_id\n# The user name assigned to the user id\nUSER_NAME=your_user_name\n# The port from which you want to access Jupyter lab\nJUPYTER_PORT=XXXX\n# The port from which you want to access RStudio server\nRSTUDIO_PORT=XXXX\n# The password you want to access RStudio server (user is given by USER_NAME)\nRSTUDIO_PASSWD=XXXX\n# The path to your data files to train/test the models\nLOCAL_DATA_PATH=/path/to/your/data\n# The W&B personal API key (see https://wandb.ai/authorize)\nWANDB_API_KEY=your_wandb_api_key\n```\n\nYou'll also need to have a `.gitconfig` file in your home folder. It can be an empty file that you create manually, or it can contain your git global configuration. For the latter case, run:\n- `git config --global user.name \"YOUR NAME IN THIS GITLAB INSTANCE\"`\n- `git config --global user.email \"YOUR EMAIL IN THIS GITLAB INSTANCE\"`\n\nThis will automatically create the `~/.gitconfig` file in your home folder.\n\nFinally, in a terminal located in the root of this repository, run:\n\n```docker-compose up -d --build```\n\nthen go to `localhost:{{JUPYTER_PORT}}` to run the notebooks or go to `localhost:{{RSTUDIO_PORT}}` to run the app. In case you are working in a remote server, replace `localhost` with the IP of your remote server.\n\n## Contribute\n\nThis project has been created using [nbdev](https://github.com/fastai/nbdev), a library that allows to create Python projects directly from Jupyter Notebooks. Please refer to this library when adding new functionalities to the project, in order to keep the structure of it.\n\nWe recommend using the following procedure to contribute and resolve issues in the repository:\n\n1. Because the project uses nbdev, we need to run `nbdev_install_git_hooks` the first time after the repo is cloned and deployed; this ensures that our notebooks are automatically cleaned and trusted whenever we push to Github/Gitlab. The command has to be run from within the container. Also, it can be run from outside if you pip install nbdev in your local machine.\n\n1. Create a local branch in your development environment to solve the issue XX (or add a new functionality), with the name you want to give your merge request (use something that will be easy for you to remember in the future if you need to update your request):\n    ```\n    git checkout -b issueXX\n    ```\n\n2. Make whatever changes you want to make in the code and notebooks, and remember to run nbdev_build_lib when you're done to ensure that the libraries are built from your notebook changes (unless you only changed markdown, in which case that's not needed). It's also a good idea to check the output of git diff to ensure that you haven't accidentally made more changes than you planned.\n\n3. Make a commit of the changes made\n    ``` \n    git commit -am \"Fix issue #XX\"\n    ```\n\n4. Test that there are not merging problems in the Jupyter Notebooks with the function [**nbdev_fix_merge**](https://nbdev.fast.ai/cli#nbdev_fix_merge)\n\n5.  Push your local branch to a branch in the gitlab repository with an identiffying name:\n    ```\n    git push -u origin HEAD\n    ```\n6. When the push is made, a link will appear in the terminal to create a merge request. Click on it.\n    ```\n    remote:\n    remote: To create a merge request for test_branch, visit:\n    remote:   https://gitlab.geist.re/pml/x_timecluster_extension/-/merge_requests/new?merge_request%5Bsource_branch%5D=issueXX_solved\n    remote:\n    ```\n7. In the gitlab website:\n    * Write in the description what is the problem to solve with your branch using a hyperlink to the issue (just use the hashtag symbol \"#\" followed by the issue number) \n    * Click on the option \"Delete source branch when merge request is accepted\" and assign the merge to your profile.\n    * Click on the button \"Create merge request\"\n![image](/uploads/da18a985a69973ad62a60bc6564304b9/image.png)\n\n8. Wait to the merge to be accepted. In case you're solving an issue, we recommend to move the issue to the field \"In review\" (in the Issue Board). To keep your branch up to date with the changes to the main repo, run:\n```\ngit pull upstream master\n```\n\n9. If there are no problems, the merge request will be accepted and the issue will be closed. Once your PR has been merged or rejected, you can delete your branch if you don't need it any more:\n```\ngit branch -d issueXX\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":["nbdev_filter"],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"toc-depth":4,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"cosmo","title":"Timecluster hub"},"extensions":{"book":{"multiFile":true}},"format":{"identifier":{},"render":{},"execute":{},"pandoc":{},"language":{},"metadata":{"description":"Hub for different visual analytics approaches for high-dimensional time series. Inspired by the paper [\"Timecluster: dimension reduction applied to temporal data for visual analytics\"](https://link.springer.com/article/10.1007/s00371-019-01673-y)","title":"Timecluster hub"}},"active":true}},"projectFormats":["html"]}